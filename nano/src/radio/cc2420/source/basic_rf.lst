   1               		.file	"basic_rf.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 127               	.global	set_rf_rx_callback
 129               	set_rf_rx_callback:
 130               		.stabd	46,0,0
   1:../../src/radio/cc2420/source/basic_rf.c **** /******************************************************************************
   2:../../src/radio/cc2420/source/basic_rf.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../src/radio/cc2420/source/basic_rf.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../src/radio/cc2420/source/basic_rf.c **** *  All rights reserved.
   5:../../src/radio/cc2420/source/basic_rf.c **** *
   6:../../src/radio/cc2420/source/basic_rf.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../src/radio/cc2420/source/basic_rf.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../src/radio/cc2420/source/basic_rf.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../src/radio/cc2420/source/basic_rf.c **** *
  10:../../src/radio/cc2420/source/basic_rf.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../src/radio/cc2420/source/basic_rf.c **** *  it under the terms of the GNU General Public License as published by
  12:../../src/radio/cc2420/source/basic_rf.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../src/radio/cc2420/source/basic_rf.c **** *
  14:../../src/radio/cc2420/source/basic_rf.c **** *  This program is distributed in the hope that it will be useful,
  15:../../src/radio/cc2420/source/basic_rf.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../src/radio/cc2420/source/basic_rf.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../src/radio/cc2420/source/basic_rf.c **** *  GNU General Public License for more details.
  18:../../src/radio/cc2420/source/basic_rf.c **** *
  19:../../src/radio/cc2420/source/basic_rf.c **** *  You should have received a copy of the GNU General Public License
  20:../../src/radio/cc2420/source/basic_rf.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../src/radio/cc2420/source/basic_rf.c **** *
  22:../../src/radio/cc2420/source/basic_rf.c **** *  Contributing Authors (specific to this file):
  23:../../src/radio/cc2420/source/basic_rf.c **** *  Chipcon Development Team
  24:../../src/radio/cc2420/source/basic_rf.c **** *  Anthony Rowe
  25:../../src/radio/cc2420/source/basic_rf.c **** *  Nuno Pereira
  26:../../src/radio/cc2420/source/basic_rf.c **** *  Bach Bui 
  27:../../src/radio/cc2420/source/basic_rf.c **** *******************************************************************************/
  28:../../src/radio/cc2420/source/basic_rf.c **** 
  29:../../src/radio/cc2420/source/basic_rf.c **** #include <include.h>
  30:../../src/radio/cc2420/source/basic_rf.c **** #include <basic_rf.h>
  31:../../src/radio/cc2420/source/basic_rf.c **** #include <ulib.h>
  32:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk.h>
  33:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_events.h>
  34:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_error.h>
  35:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_timer.h>
  36:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_cpu.h>
  37:../../src/radio/cc2420/source/basic_rf.c **** 
  38:../../src/radio/cc2420/source/basic_rf.c **** #define OSC_STARTUP_DELAY	1000
  39:../../src/radio/cc2420/source/basic_rf.c **** 
  40:../../src/radio/cc2420/source/basic_rf.c **** RF_RX_INFO* (*_rf_rx_callback)(RF_RX_INFO *) = NULL;
  41:../../src/radio/cc2420/source/basic_rf.c **** 
  42:../../src/radio/cc2420/source/basic_rf.c **** void set_rf_rx_callback(RF_RX_INFO* (*callback)(RF_RX_INFO *)){
 132               	.LM0:
 133               	.LFBB1:
 134               	/* prologue: frame size=0 */
 135               	/* prologue end (size=0) */
  43:../../src/radio/cc2420/source/basic_rf.c **** 	_rf_rx_callback = callback;
 137               	.LM1:
 138 0000 9093 0000 		sts (_rf_rx_callback)+1,r25
 139 0004 8093 0000 		sts _rf_rx_callback,r24
 140               	/* epilogue: frame size=0 */
 141 0008 0895      		ret
 142               	/* epilogue end (size=1) */
 143               	/* function set_rf_rx_callback size 5 (4) */
 145               	.Lscope1:
 147               		.stabd	78,0,0
 149               	.global	rf_power_down
 151               	rf_power_down:
 152               		.stabd	46,0,0
  44:../../src/radio/cc2420/source/basic_rf.c **** }
  45:../../src/radio/cc2420/source/basic_rf.c **** 
  46:../../src/radio/cc2420/source/basic_rf.c **** void cc259x_rx()
  47:../../src/radio/cc2420/source/basic_rf.c **** {
  48:../../src/radio/cc2420/source/basic_rf.c ****     nrk_gpio_set(NRK_DEBUG_1);
  49:../../src/radio/cc2420/source/basic_rf.c ****     nrk_gpio_clr(NRK_DEBUG_0);
  50:../../src/radio/cc2420/source/basic_rf.c **** }
  51:../../src/radio/cc2420/source/basic_rf.c **** 
  52:../../src/radio/cc2420/source/basic_rf.c **** 
  53:../../src/radio/cc2420/source/basic_rf.c **** void cc259x_tx()
  54:../../src/radio/cc2420/source/basic_rf.c **** {
  55:../../src/radio/cc2420/source/basic_rf.c ****     nrk_gpio_set(NRK_DEBUG_1);
  56:../../src/radio/cc2420/source/basic_rf.c ****     nrk_gpio_set(NRK_DEBUG_0);
  57:../../src/radio/cc2420/source/basic_rf.c **** }
  58:../../src/radio/cc2420/source/basic_rf.c **** 
  59:../../src/radio/cc2420/source/basic_rf.c **** 
  60:../../src/radio/cc2420/source/basic_rf.c **** //#ifndef RADIO_PRIORITY_CEILING
  61:../../src/radio/cc2420/source/basic_rf.c **** //  #define RADIO_PRIORITY_CEILING	20
  62:../../src/radio/cc2420/source/basic_rf.c **** //#endif
  63:../../src/radio/cc2420/source/basic_rf.c **** 
  64:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_t *radio_sem;
  65:../../src/radio/cc2420/source/basic_rf.c **** uint8_t auto_ack_enable;
  66:../../src/radio/cc2420/source/basic_rf.c **** uint8_t security_enable;
  67:../../src/radio/cc2420/source/basic_rf.c **** uint8_t last_pkt_encrypted;
  68:../../src/radio/cc2420/source/basic_rf.c **** uint16_t mdmctrl0;
  69:../../src/radio/cc2420/source/basic_rf.c **** uint8_t tx_ctr[4];
  70:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rx_ctr[4];
  71:../../src/radio/cc2420/source/basic_rf.c **** 
  72:../../src/radio/cc2420/source/basic_rf.c **** void rf_power_down()
  73:../../src/radio/cc2420/source/basic_rf.c **** {
 154               	.LM2:
 155               	.LFBB2:
 156               	/* prologue: frame size=0 */
 157               	/* prologue end (size=0) */
  74:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 159               	.LM3:
 160               	/* #APP */
 161 000a F894      		cli
 162               		
  75:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SXOSCOFF);
 164               	.LM4:
 165               	/* #NOAPP */
 166 000c 4098      		cbi 40-0x20,0
 167 000e 87E0      		ldi r24,lo8(7)
 168 0010 8EBD      		out 78-0x20,r24
 169               	.L4:
 171               	.LM5:
 172 0012 0DB4      		in __tmp_reg__,77-0x20
 173 0014 07FE      		sbrs __tmp_reg__,7
 174 0016 00C0      		rjmp .L4
 175 0018 409A      		sbi 40-0x20,0
  76:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 177               	.LM6:
 178 001a 4098      		cbi 40-0x20,0
 179 001c 86E0      		ldi r24,lo8(6)
 180 001e 8EBD      		out 78-0x20,r24
 181               	.L6:
 182 0020 0DB4      		in __tmp_reg__,77-0x20
 183 0022 07FE      		sbrs __tmp_reg__,7
 184 0024 00C0      		rjmp .L6
 185 0026 409A      		sbi 40-0x20,0
  77:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 187               	.LM7:
 188               	/* #APP */
 189 0028 7894      		sei
 190               		
 191               	/* #NOAPP */
 192               	/* epilogue: frame size=0 */
 193 002a 0895      		ret
 194               	/* epilogue end (size=1) */
 195               	/* function rf_power_down size 23 (22) */
 197               	.Lscope2:
 199               		.stabd	78,0,0
 201               	.global	rf_security_last_pkt_status
 203               	rf_security_last_pkt_status:
 204               		.stabd	46,0,0
  78:../../src/radio/cc2420/source/basic_rf.c **** }
  79:../../src/radio/cc2420/source/basic_rf.c **** 
  80:../../src/radio/cc2420/source/basic_rf.c **** void rf_power_up()
  81:../../src/radio/cc2420/source/basic_rf.c **** {
  82:../../src/radio/cc2420/source/basic_rf.c **** 
  83:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
  84:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SXOSCON);
  85:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(OSC_STARTUP_DELAY);
  86:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
  87:../../src/radio/cc2420/source/basic_rf.c **** 
  88:../../src/radio/cc2420/source/basic_rf.c **** }
  89:../../src/radio/cc2420/source/basic_rf.c **** 
  90:../../src/radio/cc2420/source/basic_rf.c **** 
  91:../../src/radio/cc2420/source/basic_rf.c **** // Returns 1 if the last packet was encrypted, 0 otherwise
  92:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_security_last_pkt_status()
  93:../../src/radio/cc2420/source/basic_rf.c **** {
 206               	.LM8:
 207               	.LFBB3:
 208               	/* prologue: frame size=0 */
 209               	/* prologue end (size=0) */
 210 002c 8091 0000 		lds r24,last_pkt_encrypted
  94:../../src/radio/cc2420/source/basic_rf.c **** return last_pkt_encrypted;
  95:../../src/radio/cc2420/source/basic_rf.c **** }
 212               	.LM9:
 213 0030 9927      		clr r25
 214               	/* epilogue: frame size=0 */
 215 0032 0895      		ret
 216               	/* epilogue end (size=1) */
 217               	/* function rf_security_last_pkt_status size 4 (3) */
 219               	.Lscope3:
 221               		.stabd	78,0,0
 224               	.global	rf_security_set_ctr_counter
 226               	rf_security_set_ctr_counter:
 227               		.stabd	46,0,0
  96:../../src/radio/cc2420/source/basic_rf.c **** 
  97:../../src/radio/cc2420/source/basic_rf.c **** 
  98:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_set_ctr_counter(uint8_t *counter)
  99:../../src/radio/cc2420/source/basic_rf.c **** {
 229               	.LM10:
 230               	.LFBB4:
 231               	/* prologue: frame size=0 */
 232 0034 CF93      		push r28
 233 0036 DF93      		push r29
 234               	/* prologue end (size=2) */
 235 0038 DC01      		movw r26,r24
 100:../../src/radio/cc2420/source/basic_rf.c **** uint8_t n;
 101:../../src/radio/cc2420/source/basic_rf.c **** // CTR counter value
 102:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_WRITE_RAM(&counter[0],(CC2420RAM_TXNONCE+9),2,n); 
 237               	.LM11:
 238 003a 4098      		cbi 40-0x20,0
 239 003c 89EC      		ldi r24,lo8(-55)
 240 003e 8EBD      		out 78-0x20,r24
 241               	.L16:
 243               	.LM12:
 244 0040 0DB4      		in __tmp_reg__,77-0x20
 245 0042 07FE      		sbrs __tmp_reg__,7
 246 0044 00C0      		rjmp .L16
 247 0046 80E8      		ldi r24,lo8(-128)
 248 0048 8EBD      		out 78-0x20,r24
 249               	.L18:
 250 004a 0DB4      		in __tmp_reg__,77-0x20
 251 004c 07FE      		sbrs __tmp_reg__,7
 252 004e 00C0      		rjmp .L18
 253 0050 92E0      		ldi r25,lo8(2)
 254               	.L20:
 255 0052 9150      		subi r25,lo8(-(-1))
 256 0054 FD01      		movw r30,r26
 257 0056 E90F      		add r30,r25
 258 0058 F11D      		adc r31,__zero_reg__
 259 005a 8081      		ld r24,Z
 260 005c 8EBD      		out 78-0x20,r24
 261               	.L21:
 262 005e 0DB4      		in __tmp_reg__,77-0x20
 263 0060 07FE      		sbrs __tmp_reg__,7
 264 0062 00C0      		rjmp .L21
 265 0064 9923      		tst r25
 266 0066 01F4      		brne .L20
 267 0068 409A      		sbi 40-0x20,0
 103:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_WRITE_RAM(&counter[2],(CC2420RAM_TXNONCE+11),2,n); 
 269               	.LM13:
 270 006a 4098      		cbi 40-0x20,0
 271 006c 8BEC      		ldi r24,lo8(-53)
 272 006e 8EBD      		out 78-0x20,r24
 273               	.L24:
 274 0070 0DB4      		in __tmp_reg__,77-0x20
 275 0072 07FE      		sbrs __tmp_reg__,7
 276 0074 00C0      		rjmp .L24
 277 0076 80E8      		ldi r24,lo8(-128)
 278 0078 8EBD      		out 78-0x20,r24
 279               	.L26:
 280 007a 0DB4      		in __tmp_reg__,77-0x20
 281 007c 07FE      		sbrs __tmp_reg__,7
 282 007e 00C0      		rjmp .L26
 283 0080 92E0      		ldi r25,lo8(2)
 284 0082 9D01      		movw r18,r26
 285 0084 2E5F      		subi r18,lo8(-(2))
 286 0086 3F4F      		sbci r19,hi8(-(2))
 287               	.L28:
 288 0088 E901      		movw r28,r18
 289 008a 9150      		subi r25,lo8(-(-1))
 290 008c F901      		movw r30,r18
 291 008e E90F      		add r30,r25
 292 0090 F11D      		adc r31,__zero_reg__
 293 0092 8081      		ld r24,Z
 294 0094 8EBD      		out 78-0x20,r24
 295               	.L29:
 296 0096 0DB4      		in __tmp_reg__,77-0x20
 297 0098 07FE      		sbrs __tmp_reg__,7
 298 009a 00C0      		rjmp .L29
 299 009c 9923      		tst r25
 300 009e 01F4      		brne .L28
 301 00a0 409A      		sbi 40-0x20,0
 104:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[0]=counter[0];
 303               	.LM14:
 304 00a2 8C91      		ld r24,X
 305 00a4 8093 0000 		sts tx_ctr,r24
 105:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[1]=counter[1];
 307               	.LM15:
 308 00a8 FD01      		movw r30,r26
 309 00aa 8181      		ldd r24,Z+1
 310 00ac 8093 0000 		sts tx_ctr+1,r24
 106:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[2]=counter[2];
 312               	.LM16:
 313 00b0 8881      		ld r24,Y
 314 00b2 8093 0000 		sts tx_ctr+2,r24
 107:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[3]=counter[3];
 316               	.LM17:
 317 00b6 8381      		ldd r24,Z+3
 318 00b8 8093 0000 		sts tx_ctr+3,r24
 319               	/* epilogue: frame size=0 */
 320 00bc DF91      		pop r29
 321 00be CF91      		pop r28
 322 00c0 0895      		ret
 323               	/* epilogue end (size=3) */
 324               	/* function rf_security_set_ctr_counter size 71 (66) */
 329               	.Lscope4:
 331               		.stabd	78,0,0
 334               	.global	rf_security_enable
 336               	rf_security_enable:
 337               		.stabd	46,0,0
 108:../../src/radio/cc2420/source/basic_rf.c **** }
 109:../../src/radio/cc2420/source/basic_rf.c **** 
 110:../../src/radio/cc2420/source/basic_rf.c **** 
 111:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_set_key(uint8_t *key)
 112:../../src/radio/cc2420/source/basic_rf.c **** {
 113:../../src/radio/cc2420/source/basic_rf.c **** uint8_t n,i;
 114:../../src/radio/cc2420/source/basic_rf.c **** uint16_t key_buf;
 115:../../src/radio/cc2420/source/basic_rf.c **** 
 116:../../src/radio/cc2420/source/basic_rf.c **** // Set AES key
 117:../../src/radio/cc2420/source/basic_rf.c **** nrk_spin_wait_us(100); 
 118:../../src/radio/cc2420/source/basic_rf.c **** for(i=0; i<8; i++ )
 119:../../src/radio/cc2420/source/basic_rf.c **** 	{
 120:../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=(key[i]<<8)|key[i+1]; 
 121:../../src/radio/cc2420/source/basic_rf.c ****    	nrk_spin_wait_us(100); 
 122:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_KEY0+(i*2)),2,n); 
 123:../../src/radio/cc2420/source/basic_rf.c **** 	}
 124:../../src/radio/cc2420/source/basic_rf.c **** 
 125:../../src/radio/cc2420/source/basic_rf.c **** // Set AES nonce to all zeros
 126:../../src/radio/cc2420/source/basic_rf.c **** nrk_spin_wait_us(100); 
 127:../../src/radio/cc2420/source/basic_rf.c **** for(i=0; i<7; i++ )
 128:../../src/radio/cc2420/source/basic_rf.c **** 	{
 129:../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=0; 
 130:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_TXNONCE+(i*2)),2,n); 
 131:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_RXNONCE+(i*2)),2,n); 
 132:../../src/radio/cc2420/source/basic_rf.c **** 	}
 133:../../src/radio/cc2420/source/basic_rf.c **** 	// block counter set 1
 134:../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=1; 
 135:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_TXNONCE+14),2,n); 
 136:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_RXNONCE+14),2,n); 
 137:../../src/radio/cc2420/source/basic_rf.c **** }
 138:../../src/radio/cc2420/source/basic_rf.c **** 
 139:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_enable(uint8_t *key)
 140:../../src/radio/cc2420/source/basic_rf.c **** {
 339               	.LM18:
 340               	.LFBB5:
 341               	/* prologue: frame size=0 */
 342               	/* prologue end (size=0) */
 141:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL0, 0x0306); // Enable CTR encryption with key 0
 344               	.LM19:
 345 00c2 4098      		cbi 40-0x20,0
 346 00c4 89E1      		ldi r24,lo8(25)
 347 00c6 8EBD      		out 78-0x20,r24
 348               	.L50:
 350               	.LM20:
 351 00c8 0DB4      		in __tmp_reg__,77-0x20
 352 00ca 07FE      		sbrs __tmp_reg__,7
 353 00cc 00C0      		rjmp .L50
 354 00ce 83E0      		ldi r24,lo8(3)
 355 00d0 8EBD      		out 78-0x20,r24
 356               	.L52:
 357 00d2 0DB4      		in __tmp_reg__,77-0x20
 358 00d4 07FE      		sbrs __tmp_reg__,7
 359 00d6 00C0      		rjmp .L52
 360 00d8 86E0      		ldi r24,lo8(6)
 361 00da 8EBD      		out 78-0x20,r24
 362               	.L54:
 363 00dc 0DB4      		in __tmp_reg__,77-0x20
 364 00de 07FE      		sbrs __tmp_reg__,7
 365 00e0 00C0      		rjmp .L54
 366 00e2 409A      		sbi 40-0x20,0
 142:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL1, 0x0e0e); // Encrypt / Decrypt 18 bytes into header
 368               	.LM21:
 369 00e4 4098      		cbi 40-0x20,0
 370 00e6 8AE1      		ldi r24,lo8(26)
 371 00e8 8EBD      		out 78-0x20,r24
 372               	.L56:
 373 00ea 0DB4      		in __tmp_reg__,77-0x20
 374 00ec 07FE      		sbrs __tmp_reg__,7
 375 00ee 00C0      		rjmp .L56
 376 00f0 8EE0      		ldi r24,lo8(14)
 377 00f2 8EBD      		out 78-0x20,r24
 378               	.L58:
 379 00f4 0DB4      		in __tmp_reg__,77-0x20
 380 00f6 07FE      		sbrs __tmp_reg__,7
 381 00f8 00C0      		rjmp .L58
 382 00fa 8EE0      		ldi r24,lo8(14)
 383 00fc 8EBD      		out 78-0x20,r24
 384               	.L60:
 385 00fe 0DB4      		in __tmp_reg__,77-0x20
 386 0100 07FE      		sbrs __tmp_reg__,7
 387 0102 00C0      		rjmp .L60
 388 0104 409A      		sbi 40-0x20,0
 143:../../src/radio/cc2420/source/basic_rf.c **** 
 144:../../src/radio/cc2420/source/basic_rf.c **** security_enable=1;
 390               	.LM22:
 391 0106 81E0      		ldi r24,lo8(1)
 392 0108 8093 0000 		sts security_enable,r24
 393               	/* epilogue: frame size=0 */
 394 010c 0895      		ret
 395               	/* epilogue end (size=1) */
 396               	/* function rf_security_enable size 38 (37) */
 398               	.Lscope5:
 400               		.stabd	78,0,0
 402               	.global	rf_security_disable
 404               	rf_security_disable:
 405               		.stabd	46,0,0
 145:../../src/radio/cc2420/source/basic_rf.c **** }
 146:../../src/radio/cc2420/source/basic_rf.c **** 
 147:../../src/radio/cc2420/source/basic_rf.c **** 
 148:../../src/radio/cc2420/source/basic_rf.c **** 
 149:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_disable()
 150:../../src/radio/cc2420/source/basic_rf.c **** {
 407               	.LM23:
 408               	.LFBB6:
 409               	/* prologue: frame size=0 */
 410               	/* prologue end (size=0) */
 151:../../src/radio/cc2420/source/basic_rf.c ****   FASTSPI_SETREG(CC2420_SECCTRL0, 0x01C4); // Turn off "Security enable"
 412               	.LM24:
 413 010e 4098      		cbi 40-0x20,0
 414 0110 89E1      		ldi r24,lo8(25)
 415 0112 8EBD      		out 78-0x20,r24
 416               	.L76:
 418               	.LM25:
 419 0114 0DB4      		in __tmp_reg__,77-0x20
 420 0116 07FE      		sbrs __tmp_reg__,7
 421 0118 00C0      		rjmp .L76
 422 011a 81E0      		ldi r24,lo8(1)
 423 011c 8EBD      		out 78-0x20,r24
 424               	.L78:
 425 011e 0DB4      		in __tmp_reg__,77-0x20
 426 0120 07FE      		sbrs __tmp_reg__,7
 427 0122 00C0      		rjmp .L78
 428 0124 84EC      		ldi r24,lo8(-60)
 429 0126 8EBD      		out 78-0x20,r24
 430               	.L80:
 431 0128 0DB4      		in __tmp_reg__,77-0x20
 432 012a 07FE      		sbrs __tmp_reg__,7
 433 012c 00C0      		rjmp .L80
 434 012e 409A      		sbi 40-0x20,0
 152:../../src/radio/cc2420/source/basic_rf.c ****   security_enable=0;
 436               	.LM26:
 437 0130 1092 0000 		sts security_enable,__zero_reg__
 438               	/* epilogue: frame size=0 */
 439 0134 0895      		ret
 440               	/* epilogue end (size=1) */
 441               	/* function rf_security_disable size 20 (19) */
 443               	.Lscope6:
 445               		.stabd	78,0,0
 447               	.global	rf_get_sem
 449               	rf_get_sem:
 450               		.stabd	46,0,0
 153:../../src/radio/cc2420/source/basic_rf.c **** }
 154:../../src/radio/cc2420/source/basic_rf.c **** 
 155:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 156:../../src/radio/cc2420/source/basic_rf.c **** // The RF settings structure is declared here, since we'll always need halRfInit()
 157:../../src/radio/cc2420/source/basic_rf.c **** volatile RF_SETTINGS rfSettings;
 158:../../src/radio/cc2420/source/basic_rf.c **** volatile uint8_t rx_ready;
 159:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 160:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_t* rf_get_sem()
 161:../../src/radio/cc2420/source/basic_rf.c **** {
 452               	.LM27:
 453               	.LFBB7:
 454               	/* prologue: frame size=0 */
 455               	/* prologue end (size=0) */
 162:../../src/radio/cc2420/source/basic_rf.c **** return radio_sem;
 163:../../src/radio/cc2420/source/basic_rf.c **** }
 457               	.LM28:
 458 0136 8091 0000 		lds r24,radio_sem
 459 013a 9091 0000 		lds r25,(radio_sem)+1
 460               	/* epilogue: frame size=0 */
 461 013e 0895      		ret
 462               	/* epilogue end (size=1) */
 463               	/* function rf_get_sem size 5 (4) */
 465               	.Lscope7:
 467               		.stabd	78,0,0
 469               	.global	rf_addr_decode_enable
 471               	rf_addr_decode_enable:
 472               		.stabd	46,0,0
 164:../../src/radio/cc2420/source/basic_rf.c **** 
 165:../../src/radio/cc2420/source/basic_rf.c **** void rf_tx_power(uint8_t pwr)
 166:../../src/radio/cc2420/source/basic_rf.c **** {
 167:../../src/radio/cc2420/source/basic_rf.c **** uint16_t tmp;
 168:../../src/radio/cc2420/source/basic_rf.c ****     //tmp=0x5070;
 169:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 170:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 171:../../src/radio/cc2420/source/basic_rf.c **** #endif
 172:../../src/radio/cc2420/source/basic_rf.c ****     tmp=0xA0E0;
 173:../../src/radio/cc2420/source/basic_rf.c ****     tmp=tmp | (pwr&0x1F);  
 174:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_TXCTRL, tmp);   // Set the FIFOP threshold to maximum
 175:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 176:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 177:../../src/radio/cc2420/source/basic_rf.c **** #endif
 178:../../src/radio/cc2420/source/basic_rf.c **** }
 179:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_channel( uint8_t channel )
 180:../../src/radio/cc2420/source/basic_rf.c **** {
 181:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 182:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 183:../../src/radio/cc2420/source/basic_rf.c **** #endif
 184:../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 185:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 186:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 187:../../src/radio/cc2420/source/basic_rf.c **** #endif
 188:../../src/radio/cc2420/source/basic_rf.c **** }
 189:../../src/radio/cc2420/source/basic_rf.c **** 
 190:../../src/radio/cc2420/source/basic_rf.c **** 
 191:../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_enable()
 192:../../src/radio/cc2420/source/basic_rf.c **** {
 474               	.LM29:
 475               	.LFBB8:
 476               	/* prologue: frame size=0 */
 477               	/* prologue end (size=0) */
 193:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= 0x0800;
 479               	.LM30:
 480 0140 2091 0000 		lds r18,mdmctrl0
 481 0144 3091 0000 		lds r19,(mdmctrl0)+1
 482 0148 3860      		ori r19,hi8(2048)
 483 014a 3093 0000 		sts (mdmctrl0)+1,r19
 484 014e 2093 0000 		sts mdmctrl0,r18
 194:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 486               	.LM31:
 487 0152 4098      		cbi 40-0x20,0
 488 0154 81E1      		ldi r24,lo8(17)
 489 0156 8EBD      		out 78-0x20,r24
 490               	.L92:
 492               	.LM32:
 493 0158 0DB4      		in __tmp_reg__,77-0x20
 494 015a 07FE      		sbrs __tmp_reg__,7
 495 015c 00C0      		rjmp .L92
 496 015e 832F      		mov r24,r19
 497 0160 9927      		clr r25
 498 0162 8EBD      		out 78-0x20,r24
 499               	.L94:
 500 0164 0DB4      		in __tmp_reg__,77-0x20
 501 0166 07FE      		sbrs __tmp_reg__,7
 502 0168 00C0      		rjmp .L94
 503 016a 2EBD      		out 78-0x20,r18
 504               	.L96:
 505 016c 0DB4      		in __tmp_reg__,77-0x20
 506 016e 07FE      		sbrs __tmp_reg__,7
 507 0170 00C0      		rjmp .L96
 508 0172 409A      		sbi 40-0x20,0
 509               	/* epilogue: frame size=0 */
 510 0174 0895      		ret
 511               	/* epilogue end (size=1) */
 512               	/* function rf_addr_decode_enable size 27 (26) */
 514               	.Lscope8:
 516               		.stabd	78,0,0
 518               	.global	rf_addr_decode_disable
 520               	rf_addr_decode_disable:
 521               		.stabd	46,0,0
 195:../../src/radio/cc2420/source/basic_rf.c **** }
 196:../../src/radio/cc2420/source/basic_rf.c **** 
 197:../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_disable()
 198:../../src/radio/cc2420/source/basic_rf.c **** {
 523               	.LM33:
 524               	.LFBB9:
 525               	/* prologue: frame size=0 */
 526               	/* prologue end (size=0) */
 199:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (~0x0800);
 528               	.LM34:
 529 0176 2091 0000 		lds r18,mdmctrl0
 530 017a 3091 0000 		lds r19,(mdmctrl0)+1
 531 017e 377F      		andi r19,hi8(-2049)
 532 0180 3093 0000 		sts (mdmctrl0)+1,r19
 533 0184 2093 0000 		sts mdmctrl0,r18
 200:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 535               	.LM35:
 536 0188 4098      		cbi 40-0x20,0
 537 018a 81E1      		ldi r24,lo8(17)
 538 018c 8EBD      		out 78-0x20,r24
 539               	.L106:
 541               	.LM36:
 542 018e 0DB4      		in __tmp_reg__,77-0x20
 543 0190 07FE      		sbrs __tmp_reg__,7
 544 0192 00C0      		rjmp .L106
 545 0194 832F      		mov r24,r19
 546 0196 9927      		clr r25
 547 0198 8EBD      		out 78-0x20,r24
 548               	.L108:
 549 019a 0DB4      		in __tmp_reg__,77-0x20
 550 019c 07FE      		sbrs __tmp_reg__,7
 551 019e 00C0      		rjmp .L108
 552 01a0 2EBD      		out 78-0x20,r18
 553               	.L110:
 554 01a2 0DB4      		in __tmp_reg__,77-0x20
 555 01a4 07FE      		sbrs __tmp_reg__,7
 556 01a6 00C0      		rjmp .L110
 557 01a8 409A      		sbi 40-0x20,0
 558               	/* epilogue: frame size=0 */
 559 01aa 0895      		ret
 560               	/* epilogue end (size=1) */
 561               	/* function rf_addr_decode_disable size 28 (27) */
 563               	.Lscope9:
 565               		.stabd	78,0,0
 567               	.global	rf_auto_ack_enable
 569               	rf_auto_ack_enable:
 570               		.stabd	46,0,0
 201:../../src/radio/cc2420/source/basic_rf.c **** }
 202:../../src/radio/cc2420/source/basic_rf.c **** 
 203:../../src/radio/cc2420/source/basic_rf.c **** 
 204:../../src/radio/cc2420/source/basic_rf.c **** void rf_auto_ack_enable()
 205:../../src/radio/cc2420/source/basic_rf.c **** {
 572               	.LM37:
 573               	.LFBB10:
 574               	/* prologue: frame size=0 */
 575               	/* prologue end (size=0) */
 206:../../src/radio/cc2420/source/basic_rf.c ****     auto_ack_enable=1;
 577               	.LM38:
 578 01ac 81E0      		ldi r24,lo8(1)
 579 01ae 8093 0000 		sts auto_ack_enable,r24
 207:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= 0x0010;
 581               	.LM39:
 582 01b2 2091 0000 		lds r18,mdmctrl0
 583 01b6 3091 0000 		lds r19,(mdmctrl0)+1
 584 01ba 2061      		ori r18,lo8(16)
 585 01bc 3093 0000 		sts (mdmctrl0)+1,r19
 586 01c0 2093 0000 		sts mdmctrl0,r18
 208:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0); 
 588               	.LM40:
 589 01c4 4098      		cbi 40-0x20,0
 590 01c6 81E1      		ldi r24,lo8(17)
 591 01c8 8EBD      		out 78-0x20,r24
 592               	.L120:
 594               	.LM41:
 595 01ca 0DB4      		in __tmp_reg__,77-0x20
 596 01cc 07FE      		sbrs __tmp_reg__,7
 597 01ce 00C0      		rjmp .L120
 598 01d0 832F      		mov r24,r19
 599 01d2 9927      		clr r25
 600 01d4 8EBD      		out 78-0x20,r24
 601               	.L122:
 602 01d6 0DB4      		in __tmp_reg__,77-0x20
 603 01d8 07FE      		sbrs __tmp_reg__,7
 604 01da 00C0      		rjmp .L122
 605 01dc 2EBD      		out 78-0x20,r18
 606               	.L124:
 607 01de 0DB4      		in __tmp_reg__,77-0x20
 608 01e0 07FE      		sbrs __tmp_reg__,7
 609 01e2 00C0      		rjmp .L124
 610 01e4 409A      		sbi 40-0x20,0
 611               	/* epilogue: frame size=0 */
 612 01e6 0895      		ret
 613               	/* epilogue end (size=1) */
 614               	/* function rf_auto_ack_enable size 30 (29) */
 616               	.Lscope10:
 618               		.stabd	78,0,0
 620               	.global	rf_auto_ack_disable
 622               	rf_auto_ack_disable:
 623               		.stabd	46,0,0
 209:../../src/radio/cc2420/source/basic_rf.c **** }
 210:../../src/radio/cc2420/source/basic_rf.c **** 
 211:../../src/radio/cc2420/source/basic_rf.c **** void rf_auto_ack_disable()
 212:../../src/radio/cc2420/source/basic_rf.c **** {
 625               	.LM42:
 626               	.LFBB11:
 627               	/* prologue: frame size=0 */
 628               	/* prologue end (size=0) */
 213:../../src/radio/cc2420/source/basic_rf.c ****     auto_ack_enable=0;
 630               	.LM43:
 631 01e8 1092 0000 		sts auto_ack_enable,__zero_reg__
 214:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (~0x0010);
 633               	.LM44:
 634 01ec 2091 0000 		lds r18,mdmctrl0
 635 01f0 3091 0000 		lds r19,(mdmctrl0)+1
 636 01f4 2F7E      		andi r18,lo8(-17)
 637 01f6 3093 0000 		sts (mdmctrl0)+1,r19
 638 01fa 2093 0000 		sts mdmctrl0,r18
 215:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);  
 640               	.LM45:
 641 01fe 4098      		cbi 40-0x20,0
 642 0200 81E1      		ldi r24,lo8(17)
 643 0202 8EBD      		out 78-0x20,r24
 644               	.L134:
 646               	.LM46:
 647 0204 0DB4      		in __tmp_reg__,77-0x20
 648 0206 07FE      		sbrs __tmp_reg__,7
 649 0208 00C0      		rjmp .L134
 650 020a 832F      		mov r24,r19
 651 020c 9927      		clr r25
 652 020e 8EBD      		out 78-0x20,r24
 653               	.L136:
 654 0210 0DB4      		in __tmp_reg__,77-0x20
 655 0212 07FE      		sbrs __tmp_reg__,7
 656 0214 00C0      		rjmp .L136
 657 0216 2EBD      		out 78-0x20,r18
 658               	.L138:
 659 0218 0DB4      		in __tmp_reg__,77-0x20
 660 021a 07FE      		sbrs __tmp_reg__,7
 661 021c 00C0      		rjmp .L138
 662 021e 409A      		sbi 40-0x20,0
 663               	/* epilogue: frame size=0 */
 664 0220 0895      		ret
 665               	/* epilogue end (size=1) */
 666               	/* function rf_auto_ack_disable size 30 (29) */
 668               	.Lscope11:
 670               		.stabd	78,0,0
 672               	.global	rf_busy
 674               	rf_busy:
 675               		.stabd	46,0,0
 216:../../src/radio/cc2420/source/basic_rf.c **** }
 217:../../src/radio/cc2420/source/basic_rf.c **** 
 218:../../src/radio/cc2420/source/basic_rf.c **** 
 219:../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_set_my_mac(uint16_t my_mac)
 220:../../src/radio/cc2420/source/basic_rf.c **** {
 221:../../src/radio/cc2420/source/basic_rf.c **** uint8_t n;
 222:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.myAddr = my_mac;
 223:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 224:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&my_mac, CC2420RAM_SHORTADDR, 2, n);
 225:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 226:../../src/radio/cc2420/source/basic_rf.c **** }
 227:../../src/radio/cc2420/source/basic_rf.c **** 
 228:../../src/radio/cc2420/source/basic_rf.c **** 
 229:../../src/radio/cc2420/source/basic_rf.c **** 
 230:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_rx(RF_RX_INFO *pRRI, uint8_t channel )
 231:../../src/radio/cc2420/source/basic_rf.c **** {
 232:../../src/radio/cc2420/source/basic_rf.c **** 
 233:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 234:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 235:../../src/radio/cc2420/source/basic_rf.c **** #endif
 236:../../src/radio/cc2420/source/basic_rf.c **** 
 237:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHRX);
 238:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHRX);
 239:../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 240:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.pRxInfo = pRRI;
 241:../../src/radio/cc2420/source/basic_rf.c **** 
 242:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 243:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 244:../../src/radio/cc2420/source/basic_rf.c **** #endif
 245:../../src/radio/cc2420/source/basic_rf.c **** }
 246:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 247:../../src/radio/cc2420/source/basic_rf.c **** //  void rf_init(RF_RX_INFO *pRRI, uint8_t channel, WORD panId, WORD myAddr)
 248:../../src/radio/cc2420/source/basic_rf.c **** //
 249:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 250:../../src/radio/cc2420/source/basic_rf.c **** //      Initializes CC2420 for radio communication via the basic RF library functions. Turns on the
 251:../../src/radio/cc2420/source/basic_rf.c **** //		voltage regulator, resets the CC2420, turns on the crystal oscillator, writes all necessary
 252:../../src/radio/cc2420/source/basic_rf.c **** //		registers and protocol addresses (for automatic address recognition). Note that the crystal
 253:../../src/radio/cc2420/source/basic_rf.c **** //		oscillator will remain on (forever).
 254:../../src/radio/cc2420/source/basic_rf.c **** //
 255:../../src/radio/cc2420/source/basic_rf.c **** //  ARGUMENTS:
 256:../../src/radio/cc2420/source/basic_rf.c **** //      RF_RX_INFO *pRRI
 257:../../src/radio/cc2420/source/basic_rf.c **** //          A pointer the RF_RX_INFO data structure to be used during the first packet reception.
 258:../../src/radio/cc2420/source/basic_rf.c **** //			The structure can be switched upon packet reception.
 259:../../src/radio/cc2420/source/basic_rf.c **** //      uint8_t channel
 260:../../src/radio/cc2420/source/basic_rf.c **** //          The RF channel to be used (11 = 2405 MHz to 26 = 2480 MHz)
 261:../../src/radio/cc2420/source/basic_rf.c **** //      WORD panId
 262:../../src/radio/cc2420/source/basic_rf.c **** //          The personal area network identification number
 263:../../src/radio/cc2420/source/basic_rf.c **** //      WORD myAddr
 264:../../src/radio/cc2420/source/basic_rf.c **** //          The 16-bit short address which is used by this node. Must together with the PAN ID form
 265:../../src/radio/cc2420/source/basic_rf.c **** //			unique 32-bit identifier to avoid addressing conflicts. Normally, in a 802.15.4 network, the
 266:../../src/radio/cc2420/source/basic_rf.c **** //			short address will be given to associated nodes by the PAN coordinator.
 267:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 268:../../src/radio/cc2420/source/basic_rf.c **** void rf_init(RF_RX_INFO *pRRI, uint8_t channel, uint16_t panId, uint16_t myAddr) {
 269:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t n;
 270:../../src/radio/cc2420/source/basic_rf.c **** 
 271:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 272:../../src/radio/cc2420/source/basic_rf.c ****    int8_t v;
 273:../../src/radio/cc2420/source/basic_rf.c ****     radio_sem = nrk_sem_create(1,RADIO_PRIORITY_CEILING);
 274:../../src/radio/cc2420/source/basic_rf.c ****     if (radio_sem == NULL)
 275:../../src/radio/cc2420/source/basic_rf.c ****       nrk_kernel_error_add (NRK_SEMAPHORE_CREATE_ERROR, nrk_get_pid ());
 276:../../src/radio/cc2420/source/basic_rf.c **** 
 277:../../src/radio/cc2420/source/basic_rf.c ****   v = nrk_sem_pend (radio_sem);
 278:../../src/radio/cc2420/source/basic_rf.c ****   if (v == NRK_ERROR) {
 279:../../src/radio/cc2420/source/basic_rf.c ****     nrk_kprintf (PSTR ("CC2420 ERROR:  Access to semaphore failed\r\n"));
 280:../../src/radio/cc2420/source/basic_rf.c ****   }
 281:../../src/radio/cc2420/source/basic_rf.c **** #endif
 282:../../src/radio/cc2420/source/basic_rf.c **** 
 283:../../src/radio/cc2420/source/basic_rf.c ****     // Make sure that the voltage regulator is on, and that the reset pin is inactive
 284:../../src/radio/cc2420/source/basic_rf.c ****     SET_VREG_ACTIVE();
 285:../../src/radio/cc2420/source/basic_rf.c ****     halWait(1000);
 286:../../src/radio/cc2420/source/basic_rf.c ****     SET_RESET_ACTIVE();
 287:../../src/radio/cc2420/source/basic_rf.c ****     halWait(1);
 288:../../src/radio/cc2420/source/basic_rf.c ****     SET_RESET_INACTIVE();
 289:../../src/radio/cc2420/source/basic_rf.c ****     halWait(100);
 290:../../src/radio/cc2420/source/basic_rf.c **** 
 291:../../src/radio/cc2420/source/basic_rf.c ****     // Initialize the FIFOP external interrupt
 292:../../src/radio/cc2420/source/basic_rf.c ****     //FIFOP_INT_INIT();
 293:../../src/radio/cc2420/source/basic_rf.c ****     //ENABLE_FIFOP_INT();
 294:../../src/radio/cc2420/source/basic_rf.c **** 	//rf_rx_callback = NULL;
 295:../../src/radio/cc2420/source/basic_rf.c **** 
 296:../../src/radio/cc2420/source/basic_rf.c ****     // Turn off all interrupts while we're accessing the CC2420 registers
 297:../../src/radio/cc2420/source/basic_rf.c **** 	DISABLE_GLOBAL_INT();
 298:../../src/radio/cc2420/source/basic_rf.c **** 
 299:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SXOSCON);
 300:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0=0x02E2;
 301:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);  // Std Preamble, CRC, no auto ack, no hw addr decod
 302:../../src/radio/cc2420/source/basic_rf.c ****     //FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AF2);  // Turn on automatic packet acknowledgment
 303:../../src/radio/cc2420/source/basic_rf.c **** 						// Turn on hw addre decoding 
 304:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0500); // Set the correlation threshold = 20
 305:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_IOCFG0, 0x007F);   // Set the FIFOP threshold to maximum
 306:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL0, 0x01C4); // Turn off "Security"
 307:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_RXCTRL1, 0x1A56); // All default except
 308:../../src/radio/cc2420/source/basic_rf.c **** 					    // reference bias current to RX
 309:../../src/radio/cc2420/source/basic_rf.c **** 					    // bandpass filter is set to 3uA 
 310:../../src/radio/cc2420/source/basic_rf.c **** 
 311:../../src/radio/cc2420/source/basic_rf.c **** /*
 312:../../src/radio/cc2420/source/basic_rf.c ****     // FIXME: remove later for auto ack
 313:../../src/radio/cc2420/source/basic_rf.c ****     myAddr=MY_MAC;
 314:../../src/radio/cc2420/source/basic_rf.c ****     panId=0x02;
 315:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AF2);  // Turn on automatic packet acknowledgment
 316:../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AE2);  // Turn on automatic packet acknowledgment
 317:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 318:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 319:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&myAddr, CC2420RAM_SHORTADDR, 2, n);
 320:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 321:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 322:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 323:../../src/radio/cc2420/source/basic_rf.c ****     
 324:../../src/radio/cc2420/source/basic_rf.c ****    printf( "myAddr=%d\r\n",myAddr );
 325:../../src/radio/cc2420/source/basic_rf.c **** */
 326:../../src/radio/cc2420/source/basic_rf.c **** 
 327:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 328:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 329:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 330:../../src/radio/cc2420/source/basic_rf.c **** 
 331:../../src/radio/cc2420/source/basic_rf.c ****   	ENABLE_GLOBAL_INT();
 332:../../src/radio/cc2420/source/basic_rf.c **** 
 333:../../src/radio/cc2420/source/basic_rf.c ****     // Set the RF channel
 334:../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 335:../../src/radio/cc2420/source/basic_rf.c **** 
 336:../../src/radio/cc2420/source/basic_rf.c ****     // Turn interrupts back on
 337:../../src/radio/cc2420/source/basic_rf.c **** 	ENABLE_GLOBAL_INT();
 338:../../src/radio/cc2420/source/basic_rf.c **** 
 339:../../src/radio/cc2420/source/basic_rf.c **** 	// Set the protocol configuration
 340:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.pRxInfo = pRRI;
 341:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.panId = panId;
 342:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.myAddr = myAddr;
 343:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.txSeqNumber = 0;
 344:../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.receiveOn = FALSE;
 345:../../src/radio/cc2420/source/basic_rf.c **** 
 346:../../src/radio/cc2420/source/basic_rf.c **** 	// Wait for the crystal oscillator to become stable
 347:../../src/radio/cc2420/source/basic_rf.c ****     halRfWaitForCrystalOscillator();
 348:../../src/radio/cc2420/source/basic_rf.c **** 
 349:../../src/radio/cc2420/source/basic_rf.c **** 	// Write the short address and the PAN ID to the CC2420 RAM (requires that the XOSC is on and stab
 350:../../src/radio/cc2420/source/basic_rf.c ****    //	DISABLE_GLOBAL_INT();
 351:../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_WRITE_RAM_LE(&myAddr, CC2420RAM_SHORTADDR, 2, n);
 352:../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 353:../../src/radio/cc2420/source/basic_rf.c ****   //	ENABLE_GLOBAL_INT();
 354:../../src/radio/cc2420/source/basic_rf.c **** 
 355:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 356:../../src/radio/cc2420/source/basic_rf.c ****   v = nrk_sem_post (radio_sem);
 357:../../src/radio/cc2420/source/basic_rf.c ****   if (v == NRK_ERROR) {
 358:../../src/radio/cc2420/source/basic_rf.c ****     nrk_kprintf (PSTR ("CC2420 ERROR:  Release of semaphore failed\r\n"));
 359:../../src/radio/cc2420/source/basic_rf.c ****     _nrk_errno_set (2);
 360:../../src/radio/cc2420/source/basic_rf.c ****   }
 361:../../src/radio/cc2420/source/basic_rf.c **** #endif
 362:../../src/radio/cc2420/source/basic_rf.c **** 
 363:../../src/radio/cc2420/source/basic_rf.c **** auto_ack_enable=0;
 364:../../src/radio/cc2420/source/basic_rf.c **** security_enable=0;
 365:../../src/radio/cc2420/source/basic_rf.c **** last_pkt_encrypted=0;
 366:../../src/radio/cc2420/source/basic_rf.c **** } // rf_init() 
 367:../../src/radio/cc2420/source/basic_rf.c **** 
 368:../../src/radio/cc2420/source/basic_rf.c **** 
 369:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 370:../../src/radio/cc2420/source/basic_rf.c **** //  void rf_rx_on(void)
 371:../../src/radio/cc2420/source/basic_rf.c **** //
 372:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 373:../../src/radio/cc2420/source/basic_rf.c **** //      Enables the CC2420 receiver and the FIFOP interrupt. When a packet is received through this
 374:../../src/radio/cc2420/source/basic_rf.c **** //      interrupt, it will call rf_rx_callback(...), which must be defined by the application
 375:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 376:../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_on(void) {
 377:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 378:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 379:../../src/radio/cc2420/source/basic_rf.c **** #endif
 380:../../src/radio/cc2420/source/basic_rf.c ****     	rfSettings.receiveOn = TRUE;
 381:../../src/radio/cc2420/source/basic_rf.c **** 
 382:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 383:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCON);
 384:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_spin_wait_us(OSC_STARTUP_DELAY);
 385:../../src/radio/cc2420/source/basic_rf.c **** #endif
 386:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRXON);
 387:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 388:../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 389:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 390:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 391:../../src/radio/cc2420/source/basic_rf.c **** #endif
 392:../../src/radio/cc2420/source/basic_rf.c **** 	FIFOP_INT_INIT();
 393:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_FIFOP_INT();
 394:../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_on() 
 395:../../src/radio/cc2420/source/basic_rf.c **** 
 396:../../src/radio/cc2420/source/basic_rf.c **** void rf_polling_rx_on(void) {
 397:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 398:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 399:../../src/radio/cc2420/source/basic_rf.c **** #endif
 400:../../src/radio/cc2420/source/basic_rf.c ****     	rfSettings.receiveOn = TRUE;
 401:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 402:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCON);
 403:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_spin_wait_us(OSC_STARTUP_DELAY);
 404:../../src/radio/cc2420/source/basic_rf.c **** #endif
 405:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRXON);
 406:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 407:../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 408:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 409:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 410:../../src/radio/cc2420/source/basic_rf.c **** #endif
 411:../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_on() 
 412:../../src/radio/cc2420/source/basic_rf.c **** 
 413:../../src/radio/cc2420/source/basic_rf.c **** 
 414:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
 415:../../src/radio/cc2420/source/basic_rf.c **** // Here is a sample of the rf_rx_callback() that should
 416:../../src/radio/cc2420/source/basic_rf.c **** // be placed in your application
 417:../../src/radio/cc2420/source/basic_rf.c **** 
 418:../../src/radio/cc2420/source/basic_rf.c **** RF_RX_INFO* rf_rx_callback(RF_RX_INFO *pRRI) {
 419:../../src/radio/cc2420/source/basic_rf.c **** 	// Its okay to leave this empty...    
 420:../../src/radio/cc2420/source/basic_rf.c **** 	return pRRI;
 421:../../src/radio/cc2420/source/basic_rf.c **** }  
 422:../../src/radio/cc2420/source/basic_rf.c **** ***********************************************************/
 423:../../src/radio/cc2420/source/basic_rf.c **** 
 424:../../src/radio/cc2420/source/basic_rf.c **** 
 425:../../src/radio/cc2420/source/basic_rf.c **** 
 426:../../src/radio/cc2420/source/basic_rf.c **** 
 427:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 428:../../src/radio/cc2420/source/basic_rf.c **** //  void rf_rx_off(void)
 429:../../src/radio/cc2420/source/basic_rf.c **** //
 430:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 431:../../src/radio/cc2420/source/basic_rf.c **** //      Disables the CC2420 receiver and the FIFOP interrupt.
 432:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 433:../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_off(void) {
 434:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 435:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 436:../../src/radio/cc2420/source/basic_rf.c **** #endif
 437:../../src/radio/cc2420/source/basic_rf.c **** 	// XXX
 438:../../src/radio/cc2420/source/basic_rf.c ****     	//SET_VREG_INACTIVE();	
 439:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.receiveOn = FALSE;
 440:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRFOFF);
 441:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 442:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCOFF);
 443:../../src/radio/cc2420/source/basic_rf.c **** #endif
 444:../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 445:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 446:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 447:../../src/radio/cc2420/source/basic_rf.c **** #endif
 448:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_FIFOP_INT();
 449:../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_off() 
 450:../../src/radio/cc2420/source/basic_rf.c **** 
 451:../../src/radio/cc2420/source/basic_rf.c **** 
 452:../../src/radio/cc2420/source/basic_rf.c **** /**************************************************************************
 453:../../src/radio/cc2420/source/basic_rf.c **** This function is the same as normal TX, only it waits until the last
 454:../../src/radio/cc2420/source/basic_rf.c **** second to send the duty out with the high speed timer.  And by duty, I mean
 455:../../src/radio/cc2420/source/basic_rf.c **** the packet BIATCH...
 456:../../src/radio/cc2420/source/basic_rf.c **** **************************************************************************/
 457:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_tx_tdma_packet(RF_TX_INFO *pRTI, uint16_t slot_start_time, uint16_t tx_guard_time) {
 458:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 459:../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t packetLength;
 460:../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t success;
 461:../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t spiStatusByte;
 462:../../src/radio/cc2420/source/basic_rf.c ****    	uint8_t checksum,i;
 463:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t timestamp;
 464:../../src/radio/cc2420/source/basic_rf.c **** 
 465:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 466:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend (radio_sem);
 467:../../src/radio/cc2420/source/basic_rf.c **** #endif
 468:../../src/radio/cc2420/source/basic_rf.c **** 	timestamp=_nrk_os_timer_get();
 469:../../src/radio/cc2420/source/basic_rf.c **** 	// XXX 2 below are hacks...
 470:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 471:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCON);
 472:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_spin_wait_us(OSC_STARTUP_DELAY);
 473:../../src/radio/cc2420/source/basic_rf.c **** #endif
 474:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 475:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 476:../../src/radio/cc2420/source/basic_rf.c ****     // Wait until the transceiver is idle
 477:../../src/radio/cc2420/source/basic_rf.c ****      while (FIFOP_IS_1 || SFD_IS_1);
 478:../../src/radio/cc2420/source/basic_rf.c ****     // Turn off global interrupts to avoid interference on the SPI interface
 479:../../src/radio/cc2420/source/basic_rf.c ****       DISABLE_GLOBAL_INT();
 480:../../src/radio/cc2420/source/basic_rf.c **** 	// Flush the TX FIFO just in case...
 481:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 482:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 483:../../src/radio/cc2420/source/basic_rf.c **** 
 484:../../src/radio/cc2420/source/basic_rf.c ****     checksum=0;
 485:../../src/radio/cc2420/source/basic_rf.c ****     for(i=0; i<pRTI->length; i++ )
 486:../../src/radio/cc2420/source/basic_rf.c ****     {
 487:../../src/radio/cc2420/source/basic_rf.c **** 	// lets do our own payload checksum because we don't trust the CRC
 488:../../src/radio/cc2420/source/basic_rf.c **** 	checksum+=pRTI->pPayload[i];
 489:../../src/radio/cc2420/source/basic_rf.c ****     }
 490:../../src/radio/cc2420/source/basic_rf.c ****     packetLength = pRTI->length + RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD;
 491:../../src/radio/cc2420/source/basic_rf.c ****     //nrk_set_led(3);
 492:../../src/radio/cc2420/source/basic_rf.c ****     //do { } while(_nrk_get_high_speed_timer()<(tx_guard_time));
 493:../../src/radio/cc2420/source/basic_rf.c ****     
 494:../../src/radio/cc2420/source/basic_rf.c ****     // Write the packet to the TX FIFO (the FCS is appended automatically when AUTOCRC is enabled)
 495:../../src/radio/cc2420/source/basic_rf.c ****     // These are only the MAC AGNOSTIC parameters...
 496:../../src/radio/cc2420/source/basic_rf.c ****     // Slots for example are at a higher layer since they assume TDMA
 497:../../src/radio/cc2420/source/basic_rf.c ****     
 498:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*)&packetLength, 1);               // Packet length
 499:../../src/radio/cc2420/source/basic_rf.c ****     frameControlField = pRTI->ackRequest ? RF_FCF_ACK : RF_FCF_NOACK;
 500:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &frameControlField, 2);         // Frame control field
 501:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.txSeqNumber, 1);    // Sequence number
 502:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.panId, 2);          // Dest. PAN ID
 503:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &pRTI->destAddr, 2);            // Dest. address
 504:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.myAddr, 2);         // Source address
 505:../../src/radio/cc2420/source/basic_rf.c **** 
 506:../../src/radio/cc2420/source/basic_rf.c ****     nrk_high_speed_timer_wait(slot_start_time,tx_guard_time);
 507:../../src/radio/cc2420/source/basic_rf.c ****     //nrk_clr_led(3);
 508:../../src/radio/cc2420/source/basic_rf.c ****     /*
 509:../../src/radio/cc2420/source/basic_rf.c **** 	DISABLE_GLOBAL_INT();
 510:../../src/radio/cc2420/source/basic_rf.c ****      nrk_set_led(3);
 511:../../src/radio/cc2420/source/basic_rf.c ****     last=0;
 512:../../src/radio/cc2420/source/basic_rf.c **** 	do {
 513:../../src/radio/cc2420/source/basic_rf.c **** 	if(last==_nrk_get_high_speed_timer())
 514:../../src/radio/cc2420/source/basic_rf.c **** 		{
 515:../../src/radio/cc2420/source/basic_rf.c **** 		//while(1)
 516:../../src/radio/cc2420/source/basic_rf.c **** 		//printf( "TX ERROR %d vs %d\r\n",_nrk_get_high_speed_timer(),tx_guard_time );
 517:../../src/radio/cc2420/source/basic_rf.c **** 		break;
 518:../../src/radio/cc2420/source/basic_rf.c **** 		}	
 519:../../src/radio/cc2420/source/basic_rf.c **** 	last=_nrk_get_high_speed_timer();
 520:../../src/radio/cc2420/source/basic_rf.c **** 	}
 521:../../src/radio/cc2420/source/basic_rf.c **** 	while((volatile)last<(tx_guard_time));
 522:../../src/radio/cc2420/source/basic_rf.c ****      
 523:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 524:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_clr_led(3);
 525:../../src/radio/cc2420/source/basic_rf.c **** */
 526:../../src/radio/cc2420/source/basic_rf.c **** /*
 527:../../src/radio/cc2420/source/basic_rf.c ****     // Turn on RX if necessary
 528:../../src/radio/cc2420/source/basic_rf.c ****     if (!rfSettings.receiveOn) {
 529:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SRXON);
 530:../../src/radio/cc2420/source/basic_rf.c **** 		}
 531:../../src/radio/cc2420/source/basic_rf.c **** 
 532:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the RSSI value to become valid
 533:../../src/radio/cc2420/source/basic_rf.c ****     do {
 534:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_UPD_STATUS(spiStatusByte);
 535:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_RSSI_VALID)));
 536:../../src/radio/cc2420/source/basic_rf.c **** 
 537:../../src/radio/cc2420/source/basic_rf.c **** 	// TX begins after the CCA check has passed
 538:../../src/radio/cc2420/source/basic_rf.c ****     do {
 539:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_STXONCCA);
 540:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_UPD_STATUS(spiStatusByte);
 541:../../src/radio/cc2420/source/basic_rf.c **** 		halWait(100);
 542:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_TX_ACTIVE)));
 543:../../src/radio/cc2420/source/basic_rf.c **** */
 544:../../src/radio/cc2420/source/basic_rf.c **** if (pRTI->cca == TRUE)
 545:../../src/radio/cc2420/source/basic_rf.c ****     {
 546:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t cnt;
 547:../../src/radio/cc2420/source/basic_rf.c ****       if (!rfSettings.receiveOn)
 548:../../src/radio/cc2420/source/basic_rf.c **** 	{
 549:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_SRXON);
 550:../../src/radio/cc2420/source/basic_rf.c **** 	}
 551:../../src/radio/cc2420/source/basic_rf.c **** 
 552:../../src/radio/cc2420/source/basic_rf.c ****       // Wait for the RSSI value to become valid
 553:../../src/radio/cc2420/source/basic_rf.c ****       do
 554:../../src/radio/cc2420/source/basic_rf.c **** 	{
 555:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 556:../../src/radio/cc2420/source/basic_rf.c **** 	}
 557:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_RSSI_VALID)));
 558:../../src/radio/cc2420/source/basic_rf.c **** 
 559:../../src/radio/cc2420/source/basic_rf.c ****       // TX begins after the CCA check has passed
 560:../../src/radio/cc2420/source/basic_rf.c ****       cnt = 0;
 561:../../src/radio/cc2420/source/basic_rf.c ****       do
 562:../../src/radio/cc2420/source/basic_rf.c **** 	{
 563:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_STXONCCA);
 564:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 565:../../src/radio/cc2420/source/basic_rf.c **** 	  cnt++;
 566:../../src/radio/cc2420/source/basic_rf.c **** 	  if (cnt > 100)
 567:../../src/radio/cc2420/source/basic_rf.c **** 	    {
 568:../../src/radio/cc2420/source/basic_rf.c **** 	      ENABLE_GLOBAL_INT ();
 569:../../src/radio/cc2420/source/basic_rf.c **** 		nrk_sem_post(radio_sem);
 570:../../src/radio/cc2420/source/basic_rf.c **** 	      return FALSE;
 571:../../src/radio/cc2420/source/basic_rf.c **** 	    }
 572:../../src/radio/cc2420/source/basic_rf.c **** 	  halWait (100);
 573:../../src/radio/cc2420/source/basic_rf.c **** 	}
 574:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_TX_ACTIVE)));
 575:../../src/radio/cc2420/source/basic_rf.c ****     }
 576:../../src/radio/cc2420/source/basic_rf.c ****   else
 577:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE (CC2420_STXON);
 578:../../src/radio/cc2420/source/basic_rf.c **** 	 //nrk_gpio_set(DEBUG_0);
 579:../../src/radio/cc2420/source/basic_rf.c **** 
 580:../../src/radio/cc2420/source/basic_rf.c **** 
 581:../../src/radio/cc2420/source/basic_rf.c ****     // Fill in the rest of the packet now
 582:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) pRTI->pPayload, pRTI->length);  // Payload
 583:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &checksum, 1);         // Checksum
 584:../../src/radio/cc2420/source/basic_rf.c **** 
 585:../../src/radio/cc2420/source/basic_rf.c **** 
 586:../../src/radio/cc2420/source/basic_rf.c **** 
 587:../../src/radio/cc2420/source/basic_rf.c ****     //nrk_spin_wait_us(200);
 588:../../src/radio/cc2420/source/basic_rf.c **** //  FASTSPI_STROBE(CC2420_STXON);
 589:../../src/radio/cc2420/source/basic_rf.c ****    // Wait for the transmission to begin before exiting (makes sure that this function cannot be ca
 590:../../src/radio/cc2420/source/basic_rf.c **** 	// a second time, and thereby cancelling the first transmission (observe the FIFOP + SFD test abov
 591:../../src/radio/cc2420/source/basic_rf.c **** 	while (!SFD_IS_1);
 592:../../src/radio/cc2420/source/basic_rf.c **** 	success = TRUE;
 593:../../src/radio/cc2420/source/basic_rf.c **** 
 594:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn interrupts back on
 595:../../src/radio/cc2420/source/basic_rf.c **** //	ENABLE_GLOBAL_INT();
 596:../../src/radio/cc2420/source/basic_rf.c **** 
 597:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the acknowledge to be received, if any
 598:../../src/radio/cc2420/source/basic_rf.c ****     /*if (pRTI->ackRequest) {
 599:../../src/radio/cc2420/source/basic_rf.c **** 		rfSettings.ackReceived = FALSE;
 600:../../src/radio/cc2420/source/basic_rf.c **** 
 601:../../src/radio/cc2420/source/basic_rf.c **** 		// Wait for the SFD to go low again
 602:../../src/radio/cc2420/source/basic_rf.c **** 		while (SFD_IS_1);
 603:../../src/radio/cc2420/source/basic_rf.c ****         // We'll enter RX automatically, so just wait until we can be sure that the ack reception s
 604:../../src/radio/cc2420/source/basic_rf.c ****         // The timeout consists of a 12-symbol turnaround time, the ack packet duration, and a smal
 605:../../src/radio/cc2420/source/basic_rf.c ****         halWait((12 * RF_SYMBOL_DURATION) + (RF_ACK_DURATION) + (2 * RF_SYMBOL_DURATION) + 100);
 606:../../src/radio/cc2420/source/basic_rf.c **** 
 607:../../src/radio/cc2420/source/basic_rf.c **** 		// If an acknowledgment has been received (by the FIFOP interrupt), the ackReceived flag should b
 608:../../src/radio/cc2420/source/basic_rf.c **** 		success = rfSettings.ackReceived;
 609:../../src/radio/cc2420/source/basic_rf.c ****     }*/
 610:../../src/radio/cc2420/source/basic_rf.c **** 
 611:../../src/radio/cc2420/source/basic_rf.c ****     
 612:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn off the receiver if it should not continue to be enabled
 613:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 614:../../src/radio/cc2420/source/basic_rf.c ****     // XXX hack, temp out
 615:../../src/radio/cc2420/source/basic_rf.c ****     //if (!rfSettings.receiveOn) { while (SFD_IS_1); /*FASTSPI_STROBE(CC2420_SRFOFF);*/ }
 616:../../src/radio/cc2420/source/basic_rf.c ****     // while (SFD_IS_1); 
 617:../../src/radio/cc2420/source/basic_rf.c ****     while (SFD_IS_1); // wait for packet to finish
 618:../../src/radio/cc2420/source/basic_rf.c ****     	
 619:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 620:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 621:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 622:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 623:../../src/radio/cc2420/source/basic_rf.c **** 
 624:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 625:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_STROBE(CC2420_SXOSCOFF);
 626:../../src/radio/cc2420/source/basic_rf.c **** #endif
 627:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 628:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 629:../../src/radio/cc2420/source/basic_rf.c ****     
 630:../../src/radio/cc2420/source/basic_rf.c **** 
 631:../../src/radio/cc2420/source/basic_rf.c ****     // Increment the sequence number, and return the result
 632:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.txSeqNumber++;
 633:../../src/radio/cc2420/source/basic_rf.c **** //	while (SFD_IS_1);
 634:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 635:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 636:../../src/radio/cc2420/source/basic_rf.c **** #endif
 637:../../src/radio/cc2420/source/basic_rf.c **** 
 638:../../src/radio/cc2420/source/basic_rf.c ****     return success;
 639:../../src/radio/cc2420/source/basic_rf.c **** 
 640:../../src/radio/cc2420/source/basic_rf.c **** }
 641:../../src/radio/cc2420/source/basic_rf.c **** 
 642:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 643:../../src/radio/cc2420/source/basic_rf.c **** //  BYTE rf_tx_packet(RF_TX_INFO *pRTI)
 644:../../src/radio/cc2420/source/basic_rf.c **** //
 645:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 646:../../src/radio/cc2420/source/basic_rf.c **** //		Transmits a packet using the IEEE 802.15.4 MAC data packet format with short addresses. CCA is
 647:../../src/radio/cc2420/source/basic_rf.c **** //		measured only once before backet transmission (not compliant with 802.15.4 CSMA-CA).
 648:../../src/radio/cc2420/source/basic_rf.c **** //		The function returns:
 649:../../src/radio/cc2420/source/basic_rf.c **** //			- When pRTI->ackRequest is FALSE: After the transmission has begun (SFD gone high)
 650:../../src/radio/cc2420/source/basic_rf.c **** //			- When pRTI->ackRequest is TRUE: After the acknowledgment has been received/declared missing.
 651:../../src/radio/cc2420/source/basic_rf.c **** //		The acknowledgment is received through the FIFOP interrupt.
 652:../../src/radio/cc2420/source/basic_rf.c **** //
 653:../../src/radio/cc2420/source/basic_rf.c **** //  ARGUMENTS:
 654:../../src/radio/cc2420/source/basic_rf.c **** //      RF_TX_INFO *pRTI
 655:../../src/radio/cc2420/source/basic_rf.c **** //          The transmission structure, which contains all relevant info about the packet.
 656:../../src/radio/cc2420/source/basic_rf.c **** //
 657:../../src/radio/cc2420/source/basic_rf.c **** //  RETURN VALUE:
 658:../../src/radio/cc2420/source/basic_rf.c **** //		uint8_t
 659:../../src/radio/cc2420/source/basic_rf.c **** //			Successful transmission (acknowledgment received)
 660:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 661:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_tx_packet(RF_TX_INFO *pRTI) {
 662:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 663:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t packetLength, length;
 664:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t success;
 665:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t spiStatusByte;
 666:../../src/radio/cc2420/source/basic_rf.c ****    uint8_t checksum,i;
 667:../../src/radio/cc2420/source/basic_rf.c **** 	
 668:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 669:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 670:../../src/radio/cc2420/source/basic_rf.c **** #endif
 671:../../src/radio/cc2420/source/basic_rf.c **** 
 672:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 673:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_STROBE(CC2420_SXOSCON);
 674:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_spin_wait_us(OSC_STARTUP_DELAY);
 675:../../src/radio/cc2420/source/basic_rf.c **** #endif
 676:../../src/radio/cc2420/source/basic_rf.c **** if(security_enable)
 677:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_STXENC);
 678:../../src/radio/cc2420/source/basic_rf.c **** 
 679:../../src/radio/cc2420/source/basic_rf.c ****     checksum=0;
 680:../../src/radio/cc2420/source/basic_rf.c ****     for(i=0; i<pRTI->length; i++ )
 681:../../src/radio/cc2420/source/basic_rf.c ****     {
 682:../../src/radio/cc2420/source/basic_rf.c **** 	// lets do our own payload checksum because we don't trust the CRC
 683:../../src/radio/cc2420/source/basic_rf.c **** 	checksum+=pRTI->pPayload[i];
 684:../../src/radio/cc2420/source/basic_rf.c ****     }
 685:../../src/radio/cc2420/source/basic_rf.c ****     // Write the packet to the TX FIFO (the FCS is appended automatically when AUTOCRC is enabled)
 686:../../src/radio/cc2420/source/basic_rf.c **** 
 687:../../src/radio/cc2420/source/basic_rf.c ****     // These are only the MAC AGNOSTIC parameters...
 688:../../src/radio/cc2420/source/basic_rf.c ****     // Slots for example are at a slighly higher later since they assume TDMA
 689:../../src/radio/cc2420/source/basic_rf.c ****     packetLength = pRTI->length + RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD;
 690:../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable) packetLength+=4;  // for CTR counter
 691:../../src/radio/cc2420/source/basic_rf.c **** 
 692:../../src/radio/cc2420/source/basic_rf.c **** 
 693:../../src/radio/cc2420/source/basic_rf.c ****    	// XXX 2 below are hacks...
 694:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 695:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 696:../../src/radio/cc2420/source/basic_rf.c ****     // Wait until the transceiver is idle
 697:../../src/radio/cc2420/source/basic_rf.c ****     while (FIFOP_IS_1 || SFD_IS_1);
 698:../../src/radio/cc2420/source/basic_rf.c ****     // Turn off global interrupts to avoid interference on the SPI interface
 699:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 700:../../src/radio/cc2420/source/basic_rf.c **** 	// Flush the TX FIFO just in case...
 701:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHTX);
 702:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHTX);
 703:../../src/radio/cc2420/source/basic_rf.c **** 
 704:../../src/radio/cc2420/source/basic_rf.c **** /*
 705:../../src/radio/cc2420/source/basic_rf.c ****     // Turn on RX if necessary
 706:../../src/radio/cc2420/source/basic_rf.c ****     if (!rfSettings.receiveOn) {
 707:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SRXON);
 708:../../src/radio/cc2420/source/basic_rf.c **** 		}
 709:../../src/radio/cc2420/source/basic_rf.c **** 
 710:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the RSSI value to become valid
 711:../../src/radio/cc2420/source/basic_rf.c ****     do {
 712:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_UPD_STATUS(spiStatusByte);
 713:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_RSSI_VALID)));
 714:../../src/radio/cc2420/source/basic_rf.c **** 
 715:../../src/radio/cc2420/source/basic_rf.c **** 	// TX begins after the CCA check has passed
 716:../../src/radio/cc2420/source/basic_rf.c ****     do {
 717:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_STXONCCA);
 718:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_UPD_STATUS(spiStatusByte);
 719:../../src/radio/cc2420/source/basic_rf.c **** 		halWait(100);
 720:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_TX_ACTIVE)));
 721:../../src/radio/cc2420/source/basic_rf.c **** */
 722:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*)&packetLength, 1);               // Packet length
 723:../../src/radio/cc2420/source/basic_rf.c ****     frameControlField = RF_FCF_NOACK;   // default
 724:../../src/radio/cc2420/source/basic_rf.c ****     if(auto_ack_enable) frameControlField |= RF_ACK_BM;
 725:../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable) frameControlField |= RF_SEC_BM;
 726:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &frameControlField, 2);         // Frame control field
 727:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.txSeqNumber, 1);    // Sequence number
 728:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.panId, 2);          // Dest. PAN ID
 729:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &pRTI->destAddr, 2);            // Dest. address
 730:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.myAddr, 2);         // Source address
 731:../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable)
 732:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_FIFO((uint8_t*) &tx_ctr, 4);         // CTR counter 
 733:../../src/radio/cc2420/source/basic_rf.c ****    
 734:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) pRTI->pPayload, pRTI->length);  // Payload
 735:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &checksum, 1);         // Checksum
 736:../../src/radio/cc2420/source/basic_rf.c **** 
 737:../../src/radio/cc2420/source/basic_rf.c **** if (pRTI->cca == TRUE)
 738:../../src/radio/cc2420/source/basic_rf.c **** {
 739:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t cnt;
 740:../../src/radio/cc2420/source/basic_rf.c ****      if (!rfSettings.receiveOn)
 741:../../src/radio/cc2420/source/basic_rf.c **** 	{
 742:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_SRXON);
 743:../../src/radio/cc2420/source/basic_rf.c **** 	}
 744:../../src/radio/cc2420/source/basic_rf.c ****       
 745:../../src/radio/cc2420/source/basic_rf.c ****       // Wait for the RSSI value to become valid
 746:../../src/radio/cc2420/source/basic_rf.c ****       do
 747:../../src/radio/cc2420/source/basic_rf.c **** 	{
 748:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 749:../../src/radio/cc2420/source/basic_rf.c **** 	}
 750:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_RSSI_VALID)));      
 751:../../src/radio/cc2420/source/basic_rf.c ****       // TX begins after the CCA check has passed
 752:../../src/radio/cc2420/source/basic_rf.c ****       cnt = 0;
 753:../../src/radio/cc2420/source/basic_rf.c ****       do
 754:../../src/radio/cc2420/source/basic_rf.c **** 	{
 755:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_STXONCCA);
 756:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 757:../../src/radio/cc2420/source/basic_rf.c **** 	  cnt++;
 758:../../src/radio/cc2420/source/basic_rf.c **** 	  if (cnt > 100)
 759:../../src/radio/cc2420/source/basic_rf.c **** 	    {
 760:../../src/radio/cc2420/source/basic_rf.c **** 	      ENABLE_GLOBAL_INT ();
 761:../../src/radio/cc2420/source/basic_rf.c **** 	      nrk_sem_post(radio_sem);
 762:../../src/radio/cc2420/source/basic_rf.c **** 	      return FALSE;
 763:../../src/radio/cc2420/source/basic_rf.c **** 	    }
 764:../../src/radio/cc2420/source/basic_rf.c **** 	  halWait (100);
 765:../../src/radio/cc2420/source/basic_rf.c **** 	}
 766:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_TX_ACTIVE)));
 767:../../src/radio/cc2420/source/basic_rf.c ****     }
 768:../../src/radio/cc2420/source/basic_rf.c ****   else
 769:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE (CC2420_STXON); 
 770:../../src/radio/cc2420/source/basic_rf.c **** 
 771:../../src/radio/cc2420/source/basic_rf.c ****   ENABLE_GLOBAL_INT();
 772:../../src/radio/cc2420/source/basic_rf.c **** 	// Wait for the transmission to begin before exiting (makes sure that this function cannot be call
 773:../../src/radio/cc2420/source/basic_rf.c **** 	// a second time, and thereby cancelling the first transmission (observe the FIFOP + SFD test abov
 774:../../src/radio/cc2420/source/basic_rf.c ****   while (!SFD_IS_1);
 775:../../src/radio/cc2420/source/basic_rf.c ****   success = TRUE;
 776:../../src/radio/cc2420/source/basic_rf.c **** 
 777:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn interrupts back on
 778:../../src/radio/cc2420/source/basic_rf.c **** //	ENABLE_GLOBAL_INT();
 779:../../src/radio/cc2420/source/basic_rf.c **** 
 780:../../src/radio/cc2420/source/basic_rf.c ****     while (SFD_IS_1); // wait for packet to finish
 781:../../src/radio/cc2420/source/basic_rf.c **** 
 782:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the acknowledge to be received, if any
 783:../../src/radio/cc2420/source/basic_rf.c ****     if (auto_ack_enable) {
 784:../../src/radio/cc2420/source/basic_rf.c **** //		rfSettings.ackReceived = FALSE;
 785:../../src/radio/cc2420/source/basic_rf.c **** 
 786:../../src/radio/cc2420/source/basic_rf.c **** 		// Wait for the SFD to go low again
 787:../../src/radio/cc2420/source/basic_rf.c **** 		//	while (SFD_IS_1);
 788:../../src/radio/cc2420/source/basic_rf.c ****         // We'll enter RX automatically, so just wait until we can be sure that the 
 789:../../src/radio/cc2420/source/basic_rf.c **** 	// ack reception should have finished
 790:../../src/radio/cc2420/source/basic_rf.c ****         // The timeout consists of a 12-symbol turnaround time, the ack packet duration, 
 791:../../src/radio/cc2420/source/basic_rf.c **** 	// and a small margin
 792:../../src/radio/cc2420/source/basic_rf.c ****         halWait((12 * RF_SYMBOL_DURATION) + (RF_ACK_DURATION) + (2 * RF_SYMBOL_DURATION) + 100);
 793:../../src/radio/cc2420/source/basic_rf.c **** 
 794:../../src/radio/cc2420/source/basic_rf.c **** 	if(FIFO_IS_1)
 795:../../src/radio/cc2420/source/basic_rf.c **** 	{
 796:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 797:../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 798:../../src/radio/cc2420/source/basic_rf.c **** 	    success = TRUE;
 799:../../src/radio/cc2420/source/basic_rf.c **** 
 800:../../src/radio/cc2420/source/basic_rf.c **** 	}else
 801:../../src/radio/cc2420/source/basic_rf.c **** 	{
 802:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 803:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 804:../../src/radio/cc2420/source/basic_rf.c **** 	    success = FALSE;
 805:../../src/radio/cc2420/source/basic_rf.c **** 	}
 806:../../src/radio/cc2420/source/basic_rf.c **** 
 807:../../src/radio/cc2420/source/basic_rf.c ****     }
 808:../../src/radio/cc2420/source/basic_rf.c **** 
 809:../../src/radio/cc2420/source/basic_rf.c ****     
 810:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn off the receiver if it should not continue to be enabled
 811:../../src/radio/cc2420/source/basic_rf.c ****     
 812:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();	
 813:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 814:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 815:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHTX);
 816:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHTX);
 817:../../src/radio/cc2420/source/basic_rf.c ****     
 818:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
 819:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCOFF);
 820:../../src/radio/cc2420/source/basic_rf.c **** #endif
 821:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 822:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 823:../../src/radio/cc2420/source/basic_rf.c **** 
 824:../../src/radio/cc2420/source/basic_rf.c ****     // agr XXX hack to test time issue
 825:../../src/radio/cc2420/source/basic_rf.c ****     //rf_rx_on(); 
 826:../../src/radio/cc2420/source/basic_rf.c **** 
 827:../../src/radio/cc2420/source/basic_rf.c ****     // Increment the sequence number, and return the result
 828:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.txSeqNumber++;
 829:../../src/radio/cc2420/source/basic_rf.c **** //	while (SFD_IS_1);
 830:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 831:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 832:../../src/radio/cc2420/source/basic_rf.c **** #endif
 833:../../src/radio/cc2420/source/basic_rf.c ****     return success;
 834:../../src/radio/cc2420/source/basic_rf.c **** 
 835:../../src/radio/cc2420/source/basic_rf.c **** }
 836:../../src/radio/cc2420/source/basic_rf.c **** 
 837:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_busy()
 838:../../src/radio/cc2420/source/basic_rf.c **** {
 677               	.LM47:
 678               	.LFBB12:
 679               	/* prologue: frame size=0 */
 680               	/* prologue end (size=0) */
 839:../../src/radio/cc2420/source/basic_rf.c **** return SFD_IS_1;
 682               	.LM48:
 683 0222 89B1      		in r24,41-0x20
 684 0224 9927      		clr r25
 685 0226 66E0      		ldi r22,6
 686 0228 9695      	1:	lsr r25
 687 022a 8795      		ror r24
 688 022c 6A95      		dec r22
 689 022e 01F4      		brne 1b
 840:../../src/radio/cc2420/source/basic_rf.c **** }
 691               	.LM49:
 692 0230 8170      		andi r24,lo8(1)
 693 0232 9070      		andi r25,hi8(1)
 694               	/* epilogue: frame size=0 */
 695 0234 0895      		ret
 696               	/* epilogue end (size=1) */
 697               	/* function rf_busy size 10 (9) */
 699               	.Lscope12:
 701               		.stabd	78,0,0
 703               	.global	rf_rx_check_fifop
 705               	rf_rx_check_fifop:
 706               		.stabd	46,0,0
 841:../../src/radio/cc2420/source/basic_rf.c **** 
 842:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_rx_check_fifop()
 843:../../src/radio/cc2420/source/basic_rf.c **** {
 708               	.LM50:
 709               	.LFBB13:
 710               	/* prologue: frame size=0 */
 711               	/* prologue end (size=0) */
 844:../../src/radio/cc2420/source/basic_rf.c **** return FIFOP_IS_1;
 713               	.LM51:
 714 0236 8CB1      		in r24,44-0x20
 715 0238 9927      		clr r25
 716 023a 87FD      		sbrc r24,7
 717 023c 9095      		com r25
 845:../../src/radio/cc2420/source/basic_rf.c **** }
 719               	.LM52:
 720 023e 8827      		clr r24
 721 0240 990F      		lsl r25
 722 0242 881F      		rol r24
 723 0244 9927      		clr r25
 724               	/* epilogue: frame size=0 */
 725 0246 0895      		ret
 726               	/* epilogue end (size=1) */
 727               	/* function rf_rx_check_fifop size 9 (8) */
 729               	.Lscope13:
 731               		.stabd	78,0,0
 733               	.global	rf_rx_check_sfd
 735               	rf_rx_check_sfd:
 736               		.stabd	46,0,0
 846:../../src/radio/cc2420/source/basic_rf.c **** 
 847:../../src/radio/cc2420/source/basic_rf.c **** 
 848:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_rx_check_sfd()
 849:../../src/radio/cc2420/source/basic_rf.c **** {
 738               	.LM53:
 739               	.LFBB14:
 740               	/* prologue: frame size=0 */
 741               	/* prologue end (size=0) */
 850:../../src/radio/cc2420/source/basic_rf.c **** return SFD_IS_1;
 743               	.LM54:
 744 0248 89B1      		in r24,41-0x20
 745 024a 9927      		clr r25
 746 024c E6E0      		ldi r30,6
 747 024e 9695      	1:	lsr r25
 748 0250 8795      		ror r24
 749 0252 EA95      		dec r30
 750 0254 01F4      		brne 1b
 851:../../src/radio/cc2420/source/basic_rf.c **** }
 752               	.LM55:
 753 0256 8170      		andi r24,lo8(1)
 754 0258 9070      		andi r25,hi8(1)
 755               	/* epilogue: frame size=0 */
 756 025a 0895      		ret
 757               	/* epilogue end (size=1) */
 758               	/* function rf_rx_check_sfd size 10 (9) */
 760               	.Lscope14:
 762               		.stabd	78,0,0
 764               	.global	rf_rx_packet
 766               	rf_rx_packet:
 767               		.stabd	46,0,0
 852:../../src/radio/cc2420/source/basic_rf.c **** uint16_t tmp_blah;
 853:../../src/radio/cc2420/source/basic_rf.c **** 
 854:../../src/radio/cc2420/source/basic_rf.c **** int8_t rf_polling_rx_packet()
 855:../../src/radio/cc2420/source/basic_rf.c **** {
 856:../../src/radio/cc2420/source/basic_rf.c **** uint8_t tmp;
 857:../../src/radio/cc2420/source/basic_rf.c **** 	
 858:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 859:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 860:../../src/radio/cc2420/source/basic_rf.c **** #endif
 861:../../src/radio/cc2420/source/basic_rf.c **** 
 862:../../src/radio/cc2420/source/basic_rf.c ****     if(FIFOP_IS_1 )
 863:../../src/radio/cc2420/source/basic_rf.c ****     {
 864:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 865:../../src/radio/cc2420/source/basic_rf.c **** 	int8_t length;
 866:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t pFooter[2];
 867:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t checksum,rx_checksum,i;
 868:../../src/radio/cc2420/source/basic_rf.c **** 			
 869:../../src/radio/cc2420/source/basic_rf.c **** 	last_pkt_encrypted=0;
 870:../../src/radio/cc2420/source/basic_rf.c **** 
 871:../../src/radio/cc2420/source/basic_rf.c **** //	FASTSPI_STROBE(CC2420_SRXON);
 872:../../src/radio/cc2420/source/basic_rf.c **** //	FASTSPI_STROBE(CC2420_SFLUSHRX);
 873:../../src/radio/cc2420/source/basic_rf.c ****     
 874:../../src/radio/cc2420/source/basic_rf.c **** //	while(!SFD_IS_1);
 875:../../src/radio/cc2420/source/basic_rf.c **** //  XXX Need to make sure SFD has gone down to be sure packet finished!
 876:../../src/radio/cc2420/source/basic_rf.c **** //	while(SFD_IS_1);
 877:../../src/radio/cc2420/source/basic_rf.c ****     // Clean up and exit in case of FIFO overflow, which is indicated by FIFOP = 1 and FIFO = 0
 878:../../src/radio/cc2420/source/basic_rf.c **** 	if((FIFOP_IS_1) && (!(FIFO_IS_1))) {	   
 879:../../src/radio/cc2420/source/basic_rf.c **** 	    // always read 1 byte before flush (data sheet pg 62)
 880:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 881:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 882:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 883:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 884:../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 885:../../src/radio/cc2420/source/basic_rf.c **** #endif
 886:../../src/radio/cc2420/source/basic_rf.c **** 	    return -1;
 887:../../src/radio/cc2420/source/basic_rf.c **** 	}
 888:../../src/radio/cc2420/source/basic_rf.c **** 
 889:../../src/radio/cc2420/source/basic_rf.c **** 	// Payload length
 890:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 891:../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 892:../../src/radio/cc2420/source/basic_rf.c ****     // Ignore the packet if the length is too short
 893:../../src/radio/cc2420/source/basic_rf.c ****     if(length<=0){  
 894:../../src/radio/cc2420/source/basic_rf.c **** 	    // always read 1 byte before flush (data sheet pg 62)
 895:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 896:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 897:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 898:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 899:../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 900:../../src/radio/cc2420/source/basic_rf.c **** #endif
 901:../../src/radio/cc2420/source/basic_rf.c **** 	return -2;
 902:../../src/radio/cc2420/source/basic_rf.c **** 	}
 903:../../src/radio/cc2420/source/basic_rf.c ****     if (length < (RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD)/*RF_ACK_PACKET_SIZE*/ || (length-RF_
 904:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_READ_FIFO_GARBAGE(length);
 905:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 906:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 907:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 908:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 909:../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 910:../../src/radio/cc2420/source/basic_rf.c **** #endif
 911:../../src/radio/cc2420/source/basic_rf.c **** 	return -3;
 912:../../src/radio/cc2420/source/basic_rf.c **** 	//printf_u( "Bad length: %d %d\n",length, rfSettings.pRxInfo->max_length );
 913:../../src/radio/cc2420/source/basic_rf.c ****     // Otherwise, if the length is valid, then proceed with the rest of the packet
 914:../../src/radio/cc2420/source/basic_rf.c ****     } else {
 915:../../src/radio/cc2420/source/basic_rf.c ****         // Register the payload length
 916:../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.pRxInfo->length = length - RF_PACKET_OVERHEAD_SIZE - CHECKSUM_OVERHEAD;
 917:../../src/radio/cc2420/source/basic_rf.c ****         // Read the frame control field and the data sequence number
 918:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &frameControlField, 2);
 919:../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.pRxInfo->ackRequest = !!(frameControlField & RF_FCF_ACK_BM);
 920:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_READ_FIFO_BYTE(rfSettings.pRxInfo->seqNumber);
 921:../../src/radio/cc2420/source/basic_rf.c **** 
 922:../../src/radio/cc2420/source/basic_rf.c **** 		// Is this an acknowledgment packet?
 923:../../src/radio/cc2420/source/basic_rf.c **** /*
 924:../../src/radio/cc2420/source/basic_rf.c ****     	if ((length == RF_ACK_PACKET_SIZE) && (frameControlField == RF_ACK_FCF) && (rfSettings.pRxInfo
 925:../../src/radio/cc2420/source/basic_rf.c **** 
 926:../../src/radio/cc2420/source/basic_rf.c ****  	       	// Read the footer and check for CRC OK
 927:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) pFooter, 2);
 928:../../src/radio/cc2420/source/basic_rf.c **** 
 929:../../src/radio/cc2420/source/basic_rf.c **** 			// Indicate the successful ack reception (this flag is polled by the transmission routine)
 930:../../src/radio/cc2420/source/basic_rf.c **** 			if (pFooter[1] & RF_CRC_OK_BM) rfSettings.ackReceived = TRUE;
 931:../../src/radio/cc2420/source/basic_rf.c ****  
 932:../../src/radio/cc2420/source/basic_rf.c **** 		// Too small to be a valid packet?
 933:../../src/radio/cc2420/source/basic_rf.c **** 		} else if (length < RF_PACKET_OVERHEAD_SIZE) {
 934:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_GARBAGE(length - 3);
 935:../../src/radio/cc2420/source/basic_rf.c **** 
 936:../../src/radio/cc2420/source/basic_rf.c **** 		// Receive the rest of the packet
 937:../../src/radio/cc2420/source/basic_rf.c **** 		} else {
 938:../../src/radio/cc2420/source/basic_rf.c **** */
 939:../../src/radio/cc2420/source/basic_rf.c **** 			// Skip the destination PAN and address (that's taken care of by harware address recognition!)
 940:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_GARBAGE(4);
 941:../../src/radio/cc2420/source/basic_rf.c **** 
 942:../../src/radio/cc2420/source/basic_rf.c **** 			// Read the source address
 943:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &rfSettings.pRxInfo->srcAddr, 2);
 944:../../src/radio/cc2420/source/basic_rf.c **** 
 945:../../src/radio/cc2420/source/basic_rf.c **** 		        if(frameControlField & RF_SEC_BM)
 946:../../src/radio/cc2420/source/basic_rf.c **** 			{
 947:../../src/radio/cc2420/source/basic_rf.c **** 				uint8_t n;
 948:../../src/radio/cc2420/source/basic_rf.c **** 				// READ rx_ctr and set it
 949:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &rx_ctr, 4);
 950:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_WRITE_RAM(&rx_ctr[0],(CC2420RAM_RXNONCE+9),2,n); 
 951:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_WRITE_RAM(&rx_ctr[2],(CC2420RAM_RXNONCE+11),2,n); 
 952:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_STROBE(CC2420_SRXDEC);  // if packet is encrypted then decrypt 
 953:../../src/radio/cc2420/source/basic_rf.c **** 				last_pkt_encrypted=1;
 954:../../src/radio/cc2420/source/basic_rf.c ****         			rfSettings.pRxInfo->length -= 4;
 955:../../src/radio/cc2420/source/basic_rf.c **** 			}
 956:../../src/radio/cc2420/source/basic_rf.c **** 	
 957:../../src/radio/cc2420/source/basic_rf.c **** 			// Read the packet payload
 958:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT(rfSettings.pRxInfo->pPayload, rfSettings.pRxInfo->length);
 959:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT(&rx_checksum, 1 );
 960:../../src/radio/cc2420/source/basic_rf.c **** 
 961:../../src/radio/cc2420/source/basic_rf.c **** 			// Read the footer to get the RSSI value
 962:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) pFooter, 2);
 963:../../src/radio/cc2420/source/basic_rf.c **** 			rfSettings.pRxInfo->rssi = pFooter[0];
 964:../../src/radio/cc2420/source/basic_rf.c **** 			checksum=0;	
 965:../../src/radio/cc2420/source/basic_rf.c **** 			for(i=0; i<rfSettings.pRxInfo->length; i++ )
 966:../../src/radio/cc2420/source/basic_rf.c **** 			{
 967:../../src/radio/cc2420/source/basic_rf.c **** 				checksum+=rfSettings.pRxInfo->pPayload[i];
 968:../../src/radio/cc2420/source/basic_rf.c **** 				//printf( "%d ", rfSettings.pRxInfo->pPayload[i]);
 969:../../src/radio/cc2420/source/basic_rf.c **** 			}
 970:../../src/radio/cc2420/source/basic_rf.c **** 
 971:../../src/radio/cc2420/source/basic_rf.c **** 			if(checksum!=rx_checksum) {
 972:../../src/radio/cc2420/source/basic_rf.c **** 				//printf( "Checksum failed %d %d\r",rx_checksum, checksum );
 973:../../src/radio/cc2420/source/basic_rf.c **** 	    			// always read 1 byte before flush (data sheet pg 62)
 974:../../src/radio/cc2420/source/basic_rf.c **** 	   			FASTSPI_READ_FIFO_BYTE(tmp);  
 975:../../src/radio/cc2420/source/basic_rf.c **** 	    			FASTSPI_STROBE(CC2420_SFLUSHRX);
 976:../../src/radio/cc2420/source/basic_rf.c **** 	    			FASTSPI_STROBE(CC2420_SFLUSHRX);
 977:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 978:../../src/radio/cc2420/source/basic_rf.c **** 	    			nrk_sem_post(radio_sem);
 979:../../src/radio/cc2420/source/basic_rf.c **** #endif
 980:../../src/radio/cc2420/source/basic_rf.c **** 				return -4;
 981:../../src/radio/cc2420/source/basic_rf.c **** 			}	
 982:../../src/radio/cc2420/source/basic_rf.c **** 			if (pFooter[1] & RF_CRC_OK_BM) {
 983:../../src/radio/cc2420/source/basic_rf.c **** 				//rfSettings.pRxInfo = rf_rx_callback(rfSettings.pRxInfo);
 984:../../src/radio/cc2420/source/basic_rf.c **** 				rx_ready++;
 985:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 986:../../src/radio/cc2420/source/basic_rf.c **** 	    			nrk_sem_post(radio_sem);
 987:../../src/radio/cc2420/source/basic_rf.c **** #endif
 988:../../src/radio/cc2420/source/basic_rf.c **** 				return 1;
 989:../../src/radio/cc2420/source/basic_rf.c **** 			} else
 990:../../src/radio/cc2420/source/basic_rf.c **** 	    		{
 991:../../src/radio/cc2420/source/basic_rf.c **** 	    		// always read 1 byte before flush (data sheet pg 62)
 992:../../src/radio/cc2420/source/basic_rf.c **** 	   		FASTSPI_READ_FIFO_BYTE(tmp);  
 993:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_STROBE(CC2420_SFLUSHRX);
 994:../../src/radio/cc2420/source/basic_rf.c **** 	    		FASTSPI_STROBE(CC2420_SFLUSHRX);
 995:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 996:../../src/radio/cc2420/source/basic_rf.c **** 	    		nrk_sem_post(radio_sem);
 997:../../src/radio/cc2420/source/basic_rf.c **** #endif
 998:../../src/radio/cc2420/source/basic_rf.c **** 			return -5;
 999:../../src/radio/cc2420/source/basic_rf.c **** 			}
1000:../../src/radio/cc2420/source/basic_rf.c **** //		}
1001:../../src/radio/cc2420/source/basic_rf.c ****     
1002:../../src/radio/cc2420/source/basic_rf.c **** 	}
1003:../../src/radio/cc2420/source/basic_rf.c **** 
1004:../../src/radio/cc2420/source/basic_rf.c **** 
1005:../../src/radio/cc2420/source/basic_rf.c ****     }
1006:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1007:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1008:../../src/radio/cc2420/source/basic_rf.c **** #endif
1009:../../src/radio/cc2420/source/basic_rf.c **** return 0;
1010:../../src/radio/cc2420/source/basic_rf.c **** }
1011:../../src/radio/cc2420/source/basic_rf.c **** 
1012:../../src/radio/cc2420/source/basic_rf.c **** int8_t rf_rx_packet()
1013:../../src/radio/cc2420/source/basic_rf.c **** {
 769               	.LM56:
 770               	.LFBB15:
 771               	/* prologue: frame size=0 */
 772               	/* prologue end (size=0) */
1014:../../src/radio/cc2420/source/basic_rf.c **** int8_t tmp;
1015:../../src/radio/cc2420/source/basic_rf.c **** if(rx_ready>0) { tmp=rx_ready; rx_ready=0; return tmp;}
 774               	.LM57:
 775 025c 8091 0000 		lds r24,rx_ready
 776 0260 8823      		tst r24
 777 0262 01F4      		brne .L155
 779               	.LM58:
 780 0264 80E0      		ldi r24,lo8(0)
 781 0266 90E0      		ldi r25,hi8(0)
 782 0268 0895      		ret
 783               	.L155:
 784 026a 8091 0000 		lds r24,rx_ready
 785 026e 1092 0000 		sts rx_ready,__zero_reg__
 786 0272 9927      		clr r25
 787 0274 87FD      		sbrc r24,7
 788 0276 9095      		com r25
1016:../../src/radio/cc2420/source/basic_rf.c **** return 0;
1017:../../src/radio/cc2420/source/basic_rf.c **** }
 790               	.LM59:
 791 0278 0895      		ret
 792               	/* epilogue: frame size=0 */
 793               	/* epilogue: noreturn */
 794               	/* epilogue end (size=0) */
 795               	/* function rf_rx_packet size 15 (15) */
 797               	.Lscope15:
 799               		.stabd	78,0,0
 801               	.global	rf_flush_rx_fifo
 803               	rf_flush_rx_fifo:
 804               		.stabd	46,0,0
1018:../../src/radio/cc2420/source/basic_rf.c **** 
1019:../../src/radio/cc2420/source/basic_rf.c **** 
1020:../../src/radio/cc2420/source/basic_rf.c **** inline void rf_flush_rx_fifo()
1021:../../src/radio/cc2420/source/basic_rf.c **** {
 806               	.LM60:
 807               	.LFBB16:
 808               	/* prologue: frame size=0 */
 809               	/* prologue end (size=0) */
1022:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SFLUSHRX);
 811               	.LM61:
 812 027a 4098      		cbi 40-0x20,0
 813 027c 88E0      		ldi r24,lo8(8)
 814 027e 8EBD      		out 78-0x20,r24
 815               	.L160:
 817               	.LM62:
 818 0280 0DB4      		in __tmp_reg__,77-0x20
 819 0282 07FE      		sbrs __tmp_reg__,7
 820 0284 00C0      		rjmp .L160
 821 0286 409A      		sbi 40-0x20,0
1023:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SFLUSHRX);
 823               	.LM63:
 824 0288 4098      		cbi 40-0x20,0
 825 028a 88E0      		ldi r24,lo8(8)
 826 028c 8EBD      		out 78-0x20,r24
 827               	.L162:
 828 028e 0DB4      		in __tmp_reg__,77-0x20
 829 0290 07FE      		sbrs __tmp_reg__,7
 830 0292 00C0      		rjmp .L162
 831 0294 409A      		sbi 40-0x20,0
 832               	/* epilogue: frame size=0 */
 833 0296 0895      		ret
 834               	/* epilogue end (size=1) */
 835               	/* function rf_flush_rx_fifo size 15 (14) */
 837               	.Lscope16:
 839               		.stabd	78,0,0
 841               	.global	rf_rx_set_serial
 843               	rf_rx_set_serial:
 844               		.stabd	46,0,0
1024:../../src/radio/cc2420/source/basic_rf.c **** }
1025:../../src/radio/cc2420/source/basic_rf.c **** 
1026:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_cca_thresh(int8_t t)
1027:../../src/radio/cc2420/source/basic_rf.c **** {
1028:../../src/radio/cc2420/source/basic_rf.c **** // default is -32
1029:../../src/radio/cc2420/source/basic_rf.c **** // Higher number is less sensitive
1030:../../src/radio/cc2420/source/basic_rf.c **** uint16_t val;
1031:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1032:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1033:../../src/radio/cc2420/source/basic_rf.c **** #endif
1034:../../src/radio/cc2420/source/basic_rf.c **** 
1035:../../src/radio/cc2420/source/basic_rf.c **** val=(t<<8) | 0x80;
1036:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_SETREG(CC2420_RSSI, val); 
1037:../../src/radio/cc2420/source/basic_rf.c **** 
1038:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1039:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1040:../../src/radio/cc2420/source/basic_rf.c **** #endif
1041:../../src/radio/cc2420/source/basic_rf.c **** }
1042:../../src/radio/cc2420/source/basic_rf.c **** 
1043:../../src/radio/cc2420/source/basic_rf.c **** void rf_test_mode()
1044:../../src/radio/cc2420/source/basic_rf.c **** {
1045:../../src/radio/cc2420/source/basic_rf.c **** 
1046:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1047:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1048:../../src/radio/cc2420/source/basic_rf.c **** #endif
1049:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); //stop radio
1050:../../src/radio/cc2420/source/basic_rf.c **** 	// NOTE ON SETTING CC2420_MDMCTRL1
1051:../../src/radio/cc2420/source/basic_rf.c **** 	// 
1052:../../src/radio/cc2420/source/basic_rf.c **** 	// RF studio" uses TX_MODE=3 (CC2420_MDMCTRL1=0x050C)
1053:../../src/radio/cc2420/source/basic_rf.c **** 	// to send an unmodulated carrier; data sheet says TX_MODE 
1054:../../src/radio/cc2420/source/basic_rf.c **** 	// can be 2 or 3. So it should not matter...
1055:../../src/radio/cc2420/source/basic_rf.c **** 	// HOWEVER, using (TX_MODE=3) sometimes causes problems when 
1056:../../src/radio/cc2420/source/basic_rf.c **** 	// going back to "data" mode!
1057:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0508); // MDMCTRL1 with TX_MODE=2
1058:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_SETREG(CC2420_DACTST, 0x1800); // send unmodulated carrier
1059:../../src/radio/cc2420/source/basic_rf.c **** 	rf_flush_rx_fifo();
1060:../../src/radio/cc2420/source/basic_rf.c **** 
1061:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1062:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1063:../../src/radio/cc2420/source/basic_rf.c **** #endif
1064:../../src/radio/cc2420/source/basic_rf.c **** }
1065:../../src/radio/cc2420/source/basic_rf.c **** 
1066:../../src/radio/cc2420/source/basic_rf.c **** 
1067:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1068:../../src/radio/cc2420/source/basic_rf.c ****  * set the radio into "normal" mode (buffered TXFIFO) and go into (data) receive */
1069:../../src/radio/cc2420/source/basic_rf.c **** void rf_data_mode() {
1070:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1071:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1072:../../src/radio/cc2420/source/basic_rf.c **** #endif
1073:../../src/radio/cc2420/source/basic_rf.c **** 
1074:../../src/radio/cc2420/source/basic_rf.c **** 
1075:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); //stop radio
1076:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0500); // default MDMCTRL1 value
1077:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_SETREG(CC2420_DACTST, 0); // default value
1078:../../src/radio/cc2420/source/basic_rf.c ****         rf_flush_rx_fifo();
1079:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1080:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1081:../../src/radio/cc2420/source/basic_rf.c **** #endif
1082:../../src/radio/cc2420/source/basic_rf.c **** }
1083:../../src/radio/cc2420/source/basic_rf.c **** 
1084:../../src/radio/cc2420/source/basic_rf.c **** 
1085:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1086:../../src/radio/cc2420/source/basic_rf.c ****  * Set the radio into serial unbuffered RX mode
1087:../../src/radio/cc2420/source/basic_rf.c ****  * RX data is received through sampling the FIFO pin, timing is done using FIFOP 
1088:../../src/radio/cc2420/source/basic_rf.c ****  * Use rf_rx_on() to start rcv, then wait for SFD / FIFOP. Sample during each high edge of FIFOP
1089:../../src/radio/cc2420/source/basic_rf.c ****  * This can be undone by using rf_data_mode()
1090:../../src/radio/cc2420/source/basic_rf.c ****  */
1091:../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_set_serial()
1092:../../src/radio/cc2420/source/basic_rf.c **** {
 846               	.LM64:
 847               	.LFBB17:
 848               	/* prologue: frame size=0 */
 849               	/* prologue end (size=0) */
1093:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SRFOFF);           // stop radio
 851               	.LM65:
 852 0298 4098      		cbi 40-0x20,0
 853 029a 86E0      		ldi r24,lo8(6)
 854 029c 8EBD      		out 78-0x20,r24
 855               	.L170:
 857               	.LM66:
 858 029e 0DB4      		in __tmp_reg__,77-0x20
 859 02a0 07FE      		sbrs __tmp_reg__,7
 860 02a2 00C0      		rjmp .L170
 861 02a4 409A      		sbi 40-0x20,0
1094:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0501); // Set RX_MODE to 1
 863               	.LM67:
 864 02a6 4098      		cbi 40-0x20,0
 865 02a8 82E1      		ldi r24,lo8(18)
 866 02aa 8EBD      		out 78-0x20,r24
 867               	.L172:
 868 02ac 0DB4      		in __tmp_reg__,77-0x20
 869 02ae 07FE      		sbrs __tmp_reg__,7
 870 02b0 00C0      		rjmp .L172
 871 02b2 85E0      		ldi r24,lo8(5)
 872 02b4 8EBD      		out 78-0x20,r24
 873               	.L174:
 874 02b6 0DB4      		in __tmp_reg__,77-0x20
 875 02b8 07FE      		sbrs __tmp_reg__,7
 876 02ba 00C0      		rjmp .L174
 877 02bc 81E0      		ldi r24,lo8(1)
 878 02be 8EBD      		out 78-0x20,r24
 879               	.L176:
 880 02c0 0DB4      		in __tmp_reg__,77-0x20
 881 02c2 07FE      		sbrs __tmp_reg__,7
 882 02c4 00C0      		rjmp .L176
 883 02c6 409A      		sbi 40-0x20,0
1095:../../src/radio/cc2420/source/basic_rf.c ****     rf_flush_rx_fifo();
 885               	.LM68:
 886 02c8 0E94 0000 		call rf_flush_rx_fifo
 887               	/* epilogue: frame size=0 */
 888 02cc 0895      		ret
 889               	/* epilogue end (size=1) */
 890               	/* function rf_rx_set_serial size 27 (26) */
 892               	.Lscope17:
 894               		.stabd	78,0,0
 896               	.global	rf_tx_set_serial
 898               	rf_tx_set_serial:
 899               		.stabd	46,0,0
1096:../../src/radio/cc2420/source/basic_rf.c **** }
1097:../../src/radio/cc2420/source/basic_rf.c **** 
1098:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1099:../../src/radio/cc2420/source/basic_rf.c ****  * Put the radio in serial TX mode, where data is sampled from the FIFO
1100:../../src/radio/cc2420/source/basic_rf.c ****  * pin to send after SFD, and timing is done using FIFOP
1101:../../src/radio/cc2420/source/basic_rf.c ****  * use rf_carrier_on() to start, set FIFO to first bit, then wait for it
1102:../../src/radio/cc2420/source/basic_rf.c ****  * to go up and down, then set next bit etc.
1103:../../src/radio/cc2420/source/basic_rf.c ****  * NOTE: You must set the FIFO pin to output mode in order to do this!
1104:../../src/radio/cc2420/source/basic_rf.c ****  * This can be undone by calling rf_data_mode()
1105:../../src/radio/cc2420/source/basic_rf.c ****  */
1106:../../src/radio/cc2420/source/basic_rf.c **** void rf_tx_set_serial()
1107:../../src/radio/cc2420/source/basic_rf.c **** {
 901               	.LM69:
 902               	.LFBB18:
 903               	/* prologue: frame size=0 */
 904               	/* prologue end (size=0) */
1108:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0504); // set TXMODE to 1
 906               	.LM70:
 907 02ce 4098      		cbi 40-0x20,0
 908 02d0 82E1      		ldi r24,lo8(18)
 909 02d2 8EBD      		out 78-0x20,r24
 910               	.L188:
 912               	.LM71:
 913 02d4 0DB4      		in __tmp_reg__,77-0x20
 914 02d6 07FE      		sbrs __tmp_reg__,7
 915 02d8 00C0      		rjmp .L188
 916 02da 85E0      		ldi r24,lo8(5)
 917 02dc 8EBD      		out 78-0x20,r24
 918               	.L190:
 919 02de 0DB4      		in __tmp_reg__,77-0x20
 920 02e0 07FE      		sbrs __tmp_reg__,7
 921 02e2 00C0      		rjmp .L190
 922 02e4 84E0      		ldi r24,lo8(4)
 923 02e6 8EBD      		out 78-0x20,r24
 924               	.L192:
 925 02e8 0DB4      		in __tmp_reg__,77-0x20
 926 02ea 07FE      		sbrs __tmp_reg__,7
 927 02ec 00C0      		rjmp .L192
 928 02ee 409A      		sbi 40-0x20,0
1109:../../src/radio/cc2420/source/basic_rf.c ****     rf_flush_rx_fifo();
 930               	.LM72:
 931 02f0 0E94 0000 		call rf_flush_rx_fifo
 932               	/* epilogue: frame size=0 */
 933 02f4 0895      		ret
 934               	/* epilogue end (size=1) */
 935               	/* function rf_tx_set_serial size 20 (19) */
 937               	.Lscope18:
 939               		.stabd	78,0,0
 942               	.global	rf_set_preamble_length
 944               	rf_set_preamble_length:
 945               		.stabd	46,0,0
1110:../../src/radio/cc2420/source/basic_rf.c **** }
1111:../../src/radio/cc2420/source/basic_rf.c **** 
1112:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1113:../../src/radio/cc2420/source/basic_rf.c ****  * Specifies the number of symbols to be part of preamble
1114:../../src/radio/cc2420/source/basic_rf.c ****  * arg is equal to number of bytes - 1.
1115:../../src/radio/cc2420/source/basic_rf.c ****  * (3 bytes is 802.15.4 compliant, so length arg would be 2)
1116:../../src/radio/cc2420/source/basic_rf.c ****  * Length arg supports values 0 to 15. See the datasheet of course for more details
1117:../../src/radio/cc2420/source/basic_rf.c ****  */
1118:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_preamble_length(uint8_t length)
1119:../../src/radio/cc2420/source/basic_rf.c **** {
 947               	.LM73:
 948               	.LFBB19:
 949               	/* prologue: frame size=0 */
 950               	/* prologue end (size=0) */
1120:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (0xFFF0);  
1121:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= (length & 0x000F);  
 952               	.LM74:
 953 02f6 282F      		mov r18,r24
 954 02f8 3327      		clr r19
 955 02fa 2F70      		andi r18,lo8(15)
 956 02fc 3070      		andi r19,hi8(15)
 957 02fe 8091 0000 		lds r24,mdmctrl0
 958 0302 9091 0000 		lds r25,(mdmctrl0)+1
 959 0306 807F      		andi r24,lo8(-16)
 960 0308 282B      		or r18,r24
 961 030a 392B      		or r19,r25
 962 030c 3093 0000 		sts (mdmctrl0)+1,r19
 963 0310 2093 0000 		sts mdmctrl0,r18
1122:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 965               	.LM75:
 966 0314 4098      		cbi 40-0x20,0
 967 0316 81E1      		ldi r24,lo8(17)
 968 0318 8EBD      		out 78-0x20,r24
 969               	.L202:
 971               	.LM76:
 972 031a 0DB4      		in __tmp_reg__,77-0x20
 973 031c 07FE      		sbrs __tmp_reg__,7
 974 031e 00C0      		rjmp .L202
 975 0320 832F      		mov r24,r19
 976 0322 9927      		clr r25
 977 0324 8EBD      		out 78-0x20,r24
 978               	.L204:
 979 0326 0DB4      		in __tmp_reg__,77-0x20
 980 0328 07FE      		sbrs __tmp_reg__,7
 981 032a 00C0      		rjmp .L204
 982 032c 2EBD      		out 78-0x20,r18
 983               	.L206:
 984 032e 0DB4      		in __tmp_reg__,77-0x20
 985 0330 07FE      		sbrs __tmp_reg__,7
 986 0332 00C0      		rjmp .L206
 987 0334 409A      		sbi 40-0x20,0
 988               	/* epilogue: frame size=0 */
 989 0336 0895      		ret
 990               	/* epilogue end (size=1) */
 991               	/* function rf_set_preamble_length size 34 (33) */
 993               	.Lscope19:
 995               		.stabd	78,0,0
 998               	.global	rf_set_cca_mode
 1000               	rf_set_cca_mode:
 1001               		.stabd	46,0,0
1123:../../src/radio/cc2420/source/basic_rf.c **** }
1124:../../src/radio/cc2420/source/basic_rf.c **** 
1125:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1126:../../src/radio/cc2420/source/basic_rf.c ****  * Set the CCA mode
1127:../../src/radio/cc2420/source/basic_rf.c ****  * Accept 1-3 as argument
1128:../../src/radio/cc2420/source/basic_rf.c ****  */
1129:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_cca_mode(uint8_t mode)
1130:../../src/radio/cc2420/source/basic_rf.c **** {
 1003               	.LM77:
 1004               	.LFBB20:
 1005               	/* prologue: frame size=0 */
 1006               	/* prologue end (size=0) */
1131:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (0xFF3F);
1132:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= ((mode & 0x3) << 6);
 1008               	.LM78:
 1009 0338 282F      		mov r18,r24
 1010 033a 3327      		clr r19
 1011 033c 2370      		andi r18,lo8(3)
 1012 033e 3070      		andi r19,hi8(3)
 1013 0340 B6E0      		ldi r27,6
 1014 0342 220F      	1:	lsl r18
 1015 0344 331F      		rol r19
 1016 0346 BA95      		dec r27
 1017 0348 01F4      		brne 1b
 1018 034a 8091 0000 		lds r24,mdmctrl0
 1019 034e 9091 0000 		lds r25,(mdmctrl0)+1
 1020 0352 8F73      		andi r24,lo8(-193)
 1021 0354 282B      		or r18,r24
 1022 0356 392B      		or r19,r25
 1023 0358 3093 0000 		sts (mdmctrl0)+1,r19
 1024 035c 2093 0000 		sts mdmctrl0,r18
1133:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 1026               	.LM79:
 1027 0360 4098      		cbi 40-0x20,0
 1028 0362 81E1      		ldi r24,lo8(17)
 1029 0364 8EBD      		out 78-0x20,r24
 1030               	.L216:
 1032               	.LM80:
 1033 0366 0DB4      		in __tmp_reg__,77-0x20
 1034 0368 07FE      		sbrs __tmp_reg__,7
 1035 036a 00C0      		rjmp .L216
 1036 036c 832F      		mov r24,r19
 1037 036e 9927      		clr r25
 1038 0370 8EBD      		out 78-0x20,r24
 1039               	.L218:
 1040 0372 0DB4      		in __tmp_reg__,77-0x20
 1041 0374 07FE      		sbrs __tmp_reg__,7
 1042 0376 00C0      		rjmp .L218
 1043 0378 2EBD      		out 78-0x20,r18
 1044               	.L220:
 1045 037a 0DB4      		in __tmp_reg__,77-0x20
 1046 037c 07FE      		sbrs __tmp_reg__,7
 1047 037e 00C0      		rjmp .L220
 1048 0380 409A      		sbi 40-0x20,0
 1049               	/* epilogue: frame size=0 */
 1050 0382 0895      		ret
 1051               	/* epilogue end (size=1) */
 1052               	/* function rf_set_cca_mode size 39 (38) */
 1054               	.Lscope20:
 1056               		.stabd	78,0,0
 1058               	.global	__vector_8
 1060               	__vector_8:
 1061               		.stabd	46,0,0
1134:../../src/radio/cc2420/source/basic_rf.c **** }
1135:../../src/radio/cc2420/source/basic_rf.c **** 
1136:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1137:../../src/radio/cc2420/source/basic_rf.c ****  * start sending a carrier pulse
1138:../../src/radio/cc2420/source/basic_rf.c ****  * assumes wdrf_radio_test_mode() was called before doing this
1139:../../src/radio/cc2420/source/basic_rf.c ****  */
1140:../../src/radio/cc2420/source/basic_rf.c **** void rf_carrier_on()
1141:../../src/radio/cc2420/source/basic_rf.c **** {
1142:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1143:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1144:../../src/radio/cc2420/source/basic_rf.c **** #endif
1145:../../src/radio/cc2420/source/basic_rf.c ****      
1146:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
1147:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCON);
1148:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_spin_wait_us(OSC_STARTUP_DELAY);
1149:../../src/radio/cc2420/source/basic_rf.c **** #endif
1150:../../src/radio/cc2420/source/basic_rf.c **** 
1151:../../src/radio/cc2420/source/basic_rf.c **** 
1152:../../src/radio/cc2420/source/basic_rf.c **** 
1153:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_STXON); // tell radio to start sending
1154:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1155:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1156:../../src/radio/cc2420/source/basic_rf.c **** #endif
1157:../../src/radio/cc2420/source/basic_rf.c **** }
1158:../../src/radio/cc2420/source/basic_rf.c **** 
1159:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1160:../../src/radio/cc2420/source/basic_rf.c ****  * stop sending a carrier pulse; set the radio to idle state
1161:../../src/radio/cc2420/source/basic_rf.c ****  */
1162:../../src/radio/cc2420/source/basic_rf.c **** void rf_carrier_off()
1163:../../src/radio/cc2420/source/basic_rf.c **** {
1164:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1165:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1166:../../src/radio/cc2420/source/basic_rf.c **** #endif
1167:../../src/radio/cc2420/source/basic_rf.c ****      
1168:../../src/radio/cc2420/source/basic_rf.c **** #ifdef CC2420_OSC_OPT
1169:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SXOSCOFF);
1170:../../src/radio/cc2420/source/basic_rf.c **** #endif
1171:../../src/radio/cc2420/source/basic_rf.c **** 
1172:../../src/radio/cc2420/source/basic_rf.c **** 
1173:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); // stop radio
1174:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1175:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1176:../../src/radio/cc2420/source/basic_rf.c **** #endif
1177:../../src/radio/cc2420/source/basic_rf.c **** }
1178:../../src/radio/cc2420/source/basic_rf.c **** 
1179:../../src/radio/cc2420/source/basic_rf.c **** 
1180:../../src/radio/cc2420/source/basic_rf.c **** 
1181:../../src/radio/cc2420/source/basic_rf.c **** 
1182:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
1183:../../src/radio/cc2420/source/basic_rf.c **** //  SIGNAL(SIG_INTERRUPT0) - CC2420 FIFOP interrupt service routine
1184:../../src/radio/cc2420/source/basic_rf.c **** //
1185:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
1186:../../src/radio/cc2420/source/basic_rf.c **** //
1187:../../src/radio/cc2420/source/basic_rf.c **** //      Note: Packets are acknowledged automatically by CC2420 through the auto-acknowledgment feat
1188:../../src/radio/cc2420/source/basic_rf.c **** //  TODO: handle acknowledgements, not implemented before, so not a huge deal
1189:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
1190:../../src/radio/cc2420/source/basic_rf.c **** SIGNAL(INT7_vect){
 1063               	.LM81:
 1064               	.LFBB21:
 1065               	/* prologue: frame size=4 */
 1066 0384 1F92      		push __zero_reg__
 1067 0386 0F92      		push __tmp_reg__
 1068 0388 0FB6      		in __tmp_reg__,__SREG__
 1069 038a 0F92      		push __tmp_reg__
 1070 038c 1124      		clr __zero_reg__
 1071 038e 2F93      		push r18
 1072 0390 3F93      		push r19
 1073 0392 4F93      		push r20
 1074 0394 5F93      		push r21
 1075 0396 6F93      		push r22
 1076 0398 7F93      		push r23
 1077 039a 8F93      		push r24
 1078 039c 9F93      		push r25
 1079 039e AF93      		push r26
 1080 03a0 BF93      		push r27
 1081 03a2 EF93      		push r30
 1082 03a4 FF93      		push r31
 1083 03a6 CF93      		push r28
 1084 03a8 DF93      		push r29
 1085 03aa CDB7      		in r28,__SP_L__
 1086 03ac DEB7      		in r29,__SP_H__
 1087 03ae 2497      		sbiw r28,4
 1088 03b0 DEBF      		out __SP_H__,r29
 1089 03b2 CDBF      		out __SP_L__,r28
 1090               	/* prologue end (size=24) */
1191:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
1192:../../src/radio/cc2420/source/basic_rf.c **** 	int8_t length;
1193:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t pFooter[2];
1194:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t checksum, rx_checksum, i;
1195:../../src/radio/cc2420/source/basic_rf.c **** 
1196:../../src/radio/cc2420/source/basic_rf.c **** 	CLEAR_FIFOP_INT();
 1092               	.LM82:
 1093 03b4 80E8      		ldi r24,lo8(-128)
 1094 03b6 8CBB      		out 60-0x20,r24
1197:../../src/radio/cc2420/source/basic_rf.c **** 
1198:../../src/radio/cc2420/source/basic_rf.c **** 	// prevent fals positive
1199:../../src/radio/cc2420/source/basic_rf.c **** 	if(!(FIFOP_IS_1)){
 1096               	.LM83:
 1097 03b8 679B      		sbis 44-0x20,7
 1098 03ba 00C0      		rjmp .L331
1200:../../src/radio/cc2420/source/basic_rf.c **** 		return;
1201:../../src/radio/cc2420/source/basic_rf.c **** 	}
1202:../../src/radio/cc2420/source/basic_rf.c **** 
1203:../../src/radio/cc2420/source/basic_rf.c ****     // Clean up and exit in case of FIFO overflow, which is indicated by FIFOP = 1 and FIFO = 0
1204:../../src/radio/cc2420/source/basic_rf.c **** 	if((FIFOP_IS_1) && (!(FIFO_IS_1))) {
 1100               	.LM84:
 1101 03bc 679B      		sbis 44-0x20,7
 1102 03be 00C0      		rjmp .L232
 1103 03c0 3199      		sbic 38-0x20,1
 1104 03c2 00C0      		rjmp .L232
 1105               	.LBB2:
1205:../../src/radio/cc2420/source/basic_rf.c **** 		uint8_t tmp;
1206:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_BYTE(tmp);
 1107               	.LM85:
 1108 03c4 4098      		cbi 40-0x20,0
 1109 03c6 8FE7      		ldi r24,lo8(127)
 1110 03c8 8EBD      		out 78-0x20,r24
 1111               	.L235:
 1112 03ca 0DB4      		in __tmp_reg__,77-0x20
 1113 03cc 07FE      		sbrs __tmp_reg__,7
 1114 03ce 00C0      		rjmp .L235
 1115 03d0 1EBC      		out 78-0x20,__zero_reg__
 1116               	.L237:
 1117 03d2 0DB4      		in __tmp_reg__,77-0x20
 1118 03d4 07FE      		sbrs __tmp_reg__,7
 1119 03d6 00C0      		rjmp .L237
 1120 03d8 8EB5      		in r24,78-0x20
 1121 03da 409A      		sbi 40-0x20,0
1207:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 1123               	.LM86:
 1124 03dc 4098      		cbi 40-0x20,0
 1125 03de 88E0      		ldi r24,lo8(8)
 1126 03e0 8EBD      		out 78-0x20,r24
 1127               	.L239:
 1128 03e2 0DB4      		in __tmp_reg__,77-0x20
 1129 03e4 07FE      		sbrs __tmp_reg__,7
 1130 03e6 00C0      		rjmp .L239
 1131 03e8 409A      		sbi 40-0x20,0
1208:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 1133               	.LM87:
 1134 03ea 4098      		cbi 40-0x20,0
 1135 03ec 88E0      		ldi r24,lo8(8)
 1136 03ee 8EBD      		out 78-0x20,r24
 1137               	.L241:
 1138 03f0 0DB4      		in __tmp_reg__,77-0x20
 1139 03f2 07FE      		sbrs __tmp_reg__,7
 1140 03f4 00C0      		rjmp .L241
 1141 03f6 00C0      		rjmp .L406
 1142               	.L232:
 1143               	.LBE2:
1209:../../src/radio/cc2420/source/basic_rf.c **** 		return;
1210:../../src/radio/cc2420/source/basic_rf.c **** 	}
1211:../../src/radio/cc2420/source/basic_rf.c **** 
1212:../../src/radio/cc2420/source/basic_rf.c **** 	// Payload length
1213:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 1145               	.LM88:
 1146 03f8 4098      		cbi 40-0x20,0
 1147 03fa 8FE7      		ldi r24,lo8(127)
 1148 03fc 8EBD      		out 78-0x20,r24
 1149               	.L243:
 1150 03fe 0DB4      		in __tmp_reg__,77-0x20
 1151 0400 07FE      		sbrs __tmp_reg__,7
 1152 0402 00C0      		rjmp .L243
 1153 0404 1EBC      		out 78-0x20,__zero_reg__
 1154               	.L245:
 1155 0406 0DB4      		in __tmp_reg__,77-0x20
 1156 0408 07FE      		sbrs __tmp_reg__,7
 1157 040a 00C0      		rjmp .L245
 1158 040c 4EB5      		in r20,78-0x20
 1159 040e 409A      		sbi 40-0x20,0
1214:../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 1161               	.LM89:
 1162 0410 4F77      		andi r20,lo8(127)
1215:../../src/radio/cc2420/source/basic_rf.c **** 
1216:../../src/radio/cc2420/source/basic_rf.c **** 	// check packet isn't too short or too long
1217:../../src/radio/cc2420/source/basic_rf.c **** 	if(length < (RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD) || (length-RF_PACKET_OVERHEAD_SIZE) > rf
 1164               	.LM90:
 1165 0412 4C30      		cpi r20,lo8(12)
 1166 0414 04F0      		brlt .L247
 1167 0416 E091 0000 		lds r30,rfSettings
 1168 041a F091 0000 		lds r31,(rfSettings)+1
 1169 041e 242F      		mov r18,r20
 1170 0420 3327      		clr r19
 1171 0422 27FD      		sbrc r18,7
 1172 0424 3095      		com r19
 1173 0426 2B50      		subi r18,lo8(-(-11))
 1174 0428 3040      		sbci r19,hi8(-(-11))
 1175 042a 8481      		ldd r24,Z+4
 1176 042c 9927      		clr r25
 1177 042e 87FD      		sbrc r24,7
 1178 0430 9095      		com r25
 1179 0432 8217      		cp r24,r18
 1180 0434 9307      		cpc r25,r19
 1181 0436 04F4      		brge .L249
 1182               	.L247:
 1183               	.LBB3:
1218:../../src/radio/cc2420/source/basic_rf.c **** 		uint8_t tmp;
1219:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_GARBAGE(length);
 1185               	.LM91:
 1186 0438 4098      		cbi 40-0x20,0
 1187 043a 8FE7      		ldi r24,lo8(127)
 1188 043c 8EBD      		out 78-0x20,r24
 1189               	.L250:
 1190 043e 0DB4      		in __tmp_reg__,77-0x20
 1191 0440 07FE      		sbrs __tmp_reg__,7
 1192 0442 00C0      		rjmp .L250
 1193 0444 60E0      		ldi r22,lo8(0)
 1194 0446 70E0      		ldi r23,hi8(0)
 1195               	.LBB4:
 1196 0448 242F      		mov r18,r20
 1197 044a 3327      		clr r19
 1198 044c 27FD      		sbrc r18,7
 1199 044e 3095      		com r19
 1200 0450 00C0      		rjmp .L252
 1201               	.L253:
 1202 0452 1EBC      		out 78-0x20,__zero_reg__
 1203               	.L254:
 1204 0454 0DB4      		in __tmp_reg__,77-0x20
 1205 0456 07FE      		sbrs __tmp_reg__,7
 1206 0458 00C0      		rjmp .L254
 1207 045a 6F5F      		subi r22,lo8(-(1))
 1208 045c 7F4F      		sbci r23,hi8(-(1))
 1209               	.L252:
 1210 045e 862F      		mov r24,r22
 1211 0460 9927      		clr r25
 1212 0462 8217      		cp r24,r18
 1213 0464 9307      		cpc r25,r19
 1214 0466 04F4      		brge .L256
 1215 0468 3199      		sbic 38-0x20,1
 1216 046a 00C0      		rjmp .L253
 1217               	.L256:
 1218               	.LBE4:
 1219 046c 409A      		sbi 40-0x20,0
1220:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_BYTE(tmp);
 1221               	.LM92:
 1222 046e 4098      		cbi 40-0x20,0
 1223 0470 8FE7      		ldi r24,lo8(127)
 1224 0472 8EBD      		out 78-0x20,r24
 1225               	.L258:
 1226 0474 0DB4      		in __tmp_reg__,77-0x20
 1227 0476 07FE      		sbrs __tmp_reg__,7
 1228 0478 00C0      		rjmp .L258
 1229 047a 1EBC      		out 78-0x20,__zero_reg__
 1230               	.L260:
 1231 047c 0DB4      		in __tmp_reg__,77-0x20
 1232 047e 07FE      		sbrs __tmp_reg__,7
 1233 0480 00C0      		rjmp .L260
 1234 0482 8EB5      		in r24,78-0x20
 1235 0484 409A      		sbi 40-0x20,0
1221:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SFLUSHRX);
 1237               	.LM93:
 1238 0486 4098      		cbi 40-0x20,0
 1239 0488 88E0      		ldi r24,lo8(8)
 1240 048a 8EBD      		out 78-0x20,r24
 1241               	.L262:
 1242 048c 0DB4      		in __tmp_reg__,77-0x20
 1243 048e 07FE      		sbrs __tmp_reg__,7
 1244 0490 00C0      		rjmp .L262
 1245 0492 409A      		sbi 40-0x20,0
1222:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SFLUSHRX);
 1247               	.LM94:
 1248 0494 4098      		cbi 40-0x20,0
 1249 0496 88E0      		ldi r24,lo8(8)
 1250 0498 8EBD      		out 78-0x20,r24
 1251               	.L264:
 1252 049a 0DB4      		in __tmp_reg__,77-0x20
 1253 049c 07FE      		sbrs __tmp_reg__,7
 1254 049e 00C0      		rjmp .L264
 1255 04a0 00C0      		rjmp .L406
 1256               	.L249:
 1257               	.LBE3:
1223:../../src/radio/cc2420/source/basic_rf.c **** 		// printf("Bad length: %d\r\n",length);
1224:../../src/radio/cc2420/source/basic_rf.c **** 		return;
1225:../../src/radio/cc2420/source/basic_rf.c **** 	}
1226:../../src/radio/cc2420/source/basic_rf.c **** 
1227:../../src/radio/cc2420/source/basic_rf.c **** 	// fill in packet length
1228:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.pRxInfo->length = length - RF_PACKET_OVERHEAD_SIZE - CHECKSUM_OVERHEAD;
 1259               	.LM95:
 1260 04a2 E091 0000 		lds r30,rfSettings
 1261 04a6 F091 0000 		lds r31,(rfSettings)+1
 1262 04aa 4C50      		subi r20,lo8(-(-12))
 1263 04ac 4383      		std Z+3,r20
1229:../../src/radio/cc2420/source/basic_rf.c **** 
1230:../../src/radio/cc2420/source/basic_rf.c **** 	// get seq frame control and seqnum
1231:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_NO_WAIT((uint8_t *) &frameControlField, 2);
 1265               	.LM96:
 1266 04ae 4098      		cbi 40-0x20,0
 1267 04b0 8FE7      		ldi r24,lo8(127)
 1268 04b2 8EBD      		out 78-0x20,r24
 1269               	.L266:
 1270 04b4 0DB4      		in __tmp_reg__,77-0x20
 1271 04b6 07FE      		sbrs __tmp_reg__,7
 1272 04b8 00C0      		rjmp .L266
 1273 04ba FE01      		movw r30,r28
 1274 04bc 3196      		adiw r30,1
 1275               	.LBB5:
 1276 04be 9E01      		movw r18,r28
 1277 04c0 2D5F      		subi r18,lo8(-(3))
 1278 04c2 3F4F      		sbci r19,hi8(-(3))
 1279               	.L268:
 1280 04c4 1EBC      		out 78-0x20,__zero_reg__
 1281               	.L269:
 1282 04c6 0DB4      		in __tmp_reg__,77-0x20
 1283 04c8 07FE      		sbrs __tmp_reg__,7
 1284 04ca 00C0      		rjmp .L269
 1285 04cc 8EB5      		in r24,78-0x20
 1286 04ce 8193      		st Z+,r24
 1287 04d0 E217      		cp r30,r18
 1288 04d2 F307      		cpc r31,r19
 1289 04d4 01F4      		brne .L268
 1290               	.LBE5:
 1291 04d6 409A      		sbi 40-0x20,0
1232:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.pRxInfo->ackRequest = !!(frameControlField & RF_FCF_ACK_BM);
 1293               	.LM97:
 1294 04d8 E091 0000 		lds r30,rfSettings
 1295 04dc F091 0000 		lds r31,(rfSettings)+1
 1296 04e0 8981      		ldd r24,Y+1
 1297 04e2 9A81      		ldd r25,Y+2
 1298 04e4 25E0      		ldi r18,5
 1299 04e6 9695      	1:	lsr r25
 1300 04e8 8795      		ror r24
 1301 04ea 2A95      		dec r18
 1302 04ec 01F4      		brne 1b
 1303 04ee 8170      		andi r24,lo8(1)
 1304 04f0 8783      		std Z+7,r24
1233:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(rfSettings.pRxInfo->seqNumber);
 1306               	.LM98:
 1307 04f2 4098      		cbi 40-0x20,0
 1308 04f4 8FE7      		ldi r24,lo8(127)
 1309 04f6 8EBD      		out 78-0x20,r24
 1310               	.L272:
 1311 04f8 0DB4      		in __tmp_reg__,77-0x20
 1312 04fa 07FE      		sbrs __tmp_reg__,7
 1313 04fc 00C0      		rjmp .L272
 1314 04fe 1EBC      		out 78-0x20,__zero_reg__
 1315               	.L274:
 1316 0500 0DB4      		in __tmp_reg__,77-0x20
 1317 0502 07FE      		sbrs __tmp_reg__,7
 1318 0504 00C0      		rjmp .L274
 1319 0506 E091 0000 		lds r30,rfSettings
 1320 050a F091 0000 		lds r31,(rfSettings)+1
 1321 050e 8EB5      		in r24,78-0x20
 1322 0510 8083      		st Z,r24
 1323 0512 409A      		sbi 40-0x20,0
1234:../../src/radio/cc2420/source/basic_rf.c **** 
1235:../../src/radio/cc2420/source/basic_rf.c **** 	// don't need pan address
1236:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_GARBAGE(4);
 1325               	.LM99:
 1326 0514 4098      		cbi 40-0x20,0
 1327 0516 8FE7      		ldi r24,lo8(127)
 1328 0518 8EBD      		out 78-0x20,r24
 1329               	.L276:
 1330 051a 0DB4      		in __tmp_reg__,77-0x20
 1331 051c 07FE      		sbrs __tmp_reg__,7
 1332 051e 00C0      		rjmp .L276
 1333 0520 80E0      		ldi r24,lo8(0)
 1334 0522 00C0      		rjmp .L278
 1335               	.L279:
 1336               	.LBB6:
 1337 0524 1EBC      		out 78-0x20,__zero_reg__
 1338               	.L280:
 1339 0526 0DB4      		in __tmp_reg__,77-0x20
 1340 0528 07FE      		sbrs __tmp_reg__,7
 1341 052a 00C0      		rjmp .L280
 1342 052c 8F5F      		subi r24,lo8(-(1))
 1343 052e 8430      		cpi r24,lo8(4)
 1344 0530 01F0      		breq .L282
 1345               	.L278:
 1346 0532 3199      		sbic 38-0x20,1
 1347 0534 00C0      		rjmp .L279
 1348               	.L282:
 1349               	.LBE6:
 1350 0536 409A      		sbi 40-0x20,0
1237:../../src/radio/cc2420/source/basic_rf.c **** 
1238:../../src/radio/cc2420/source/basic_rf.c **** 	// get source address
1239:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_NO_WAIT((uint8_t *) &rfSettings.pRxInfo->srcAddr, 2);
 1352               	.LM100:
 1353 0538 4098      		cbi 40-0x20,0
 1354 053a 8FE7      		ldi r24,lo8(127)
 1355 053c 8EBD      		out 78-0x20,r24
 1356               	.L283:
 1357 053e 0DB4      		in __tmp_reg__,77-0x20
 1358 0540 07FE      		sbrs __tmp_reg__,7
 1359 0542 00C0      		rjmp .L283
 1360 0544 20E0      		ldi r18,lo8(0)
 1361 0546 30E0      		ldi r19,hi8(0)
 1362               	.L285:
 1363               	.LBB7:
 1364 0548 1EBC      		out 78-0x20,__zero_reg__
 1365               	.L286:
 1366 054a 0DB4      		in __tmp_reg__,77-0x20
 1367 054c 07FE      		sbrs __tmp_reg__,7
 1368 054e 00C0      		rjmp .L286
 1369 0550 E091 0000 		lds r30,rfSettings
 1370 0554 F091 0000 		lds r31,(rfSettings)+1
 1371 0558 E20F      		add r30,r18
 1372 055a F31F      		adc r31,r19
 1373 055c 8EB5      		in r24,78-0x20
 1374 055e 8183      		std Z+1,r24
 1375 0560 2F5F      		subi r18,lo8(-(1))
 1376 0562 3F4F      		sbci r19,hi8(-(1))
 1377 0564 2230      		cpi r18,2
 1378 0566 3105      		cpc r19,__zero_reg__
 1379 0568 01F4      		brne .L285
 1380               	.LBE7:
 1381 056a 409A      		sbi 40-0x20,0
1240:../../src/radio/cc2420/source/basic_rf.c **** 
1241:../../src/radio/cc2420/source/basic_rf.c **** 	// get payload, checksum, and footer
1242:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_NO_WAIT(rfSettings.pRxInfo->pPayload, rfSettings.pRxInfo->length);
 1383               	.LM101:
 1384 056c 4098      		cbi 40-0x20,0
 1385 056e 8FE7      		ldi r24,lo8(127)
 1386 0570 8EBD      		out 78-0x20,r24
 1387               	.L289:
 1388 0572 0DB4      		in __tmp_reg__,77-0x20
 1389 0574 07FE      		sbrs __tmp_reg__,7
 1390 0576 00C0      		rjmp .L289
 1391 0578 40E0      		ldi r20,lo8(0)
 1392 057a 50E0      		ldi r21,hi8(0)
 1393 057c 00C0      		rjmp .L291
 1394               	.L292:
 1395               	.LBB8:
 1396 057e 1EBC      		out 78-0x20,__zero_reg__
 1397               	.L293:
 1398 0580 0DB4      		in __tmp_reg__,77-0x20
 1399 0582 07FE      		sbrs __tmp_reg__,7
 1400 0584 00C0      		rjmp .L293
 1401 0586 E091 0000 		lds r30,rfSettings
 1402 058a F091 0000 		lds r31,(rfSettings)+1
 1403 058e 0580      		ldd __tmp_reg__,Z+5
 1404 0590 F681      		ldd r31,Z+6
 1405 0592 E02D      		mov r30,__tmp_reg__
 1406 0594 E60F      		add r30,r22
 1407 0596 F11D      		adc r31,__zero_reg__
 1408 0598 8EB5      		in r24,78-0x20
 1409 059a 8083      		st Z,r24
 1410 059c 4F5F      		subi r20,lo8(-(1))
 1411 059e 5F4F      		sbci r21,hi8(-(1))
 1412               	.L291:
 1413 05a0 642F      		mov r22,r20
 1414 05a2 E091 0000 		lds r30,rfSettings
 1415 05a6 F091 0000 		lds r31,(rfSettings)+1
 1416 05aa 242F      		mov r18,r20
 1417 05ac 3327      		clr r19
 1418 05ae 8381      		ldd r24,Z+3
 1419 05b0 9927      		clr r25
 1420 05b2 87FD      		sbrc r24,7
 1421 05b4 9095      		com r25
 1422 05b6 2817      		cp r18,r24
 1423 05b8 3907      		cpc r19,r25
 1424 05ba 04F0      		brlt .L292
 1425               	.LBE8:
 1426 05bc 409A      		sbi 40-0x20,0
1243:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_NO_WAIT(&rx_checksum, 1);
 1428               	.LM102:
 1429 05be 4098      		cbi 40-0x20,0
 1430 05c0 8FE7      		ldi r24,lo8(127)
 1431 05c2 8EBD      		out 78-0x20,r24
 1432               	.L296:
 1433 05c4 0DB4      		in __tmp_reg__,77-0x20
 1434 05c6 07FC      		sbrc __tmp_reg__,7
 1435 05c8 00C0      		rjmp .L393
 1436 05ca 00C0      		rjmp .L296
 1437               	.L298:
 1438               	.LBB9:
 1439 05cc 0DB4      		in __tmp_reg__,77-0x20
 1440 05ce 07FE      		sbrs __tmp_reg__,7
 1441 05d0 00C0      		rjmp .L298
 1442 05d2 5EB5      		in r21,78-0x20
 1443               	.LBE9:
 1444 05d4 409A      		sbi 40-0x20,0
1244:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_NO_WAIT((uint8_t *) pFooter, 2);
 1446               	.LM103:
 1447 05d6 4098      		cbi 40-0x20,0
 1448 05d8 8FE7      		ldi r24,lo8(127)
 1449 05da 8EBD      		out 78-0x20,r24
 1450 05dc 00C0      		rjmp .L300
 1451               	.L393:
 1452               	.LBB10:
 1454               	.LM104:
 1455 05de 1EBC      		out 78-0x20,__zero_reg__
 1456 05e0 00C0      		rjmp .L298
 1457               	.L300:
 1458               	.LBE10:
 1460               	.LM105:
 1461 05e2 0DB4      		in __tmp_reg__,77-0x20
 1462 05e4 07FE      		sbrs __tmp_reg__,7
 1463 05e6 00C0      		rjmp .L300
 1464 05e8 FE01      		movw r30,r28
 1465 05ea 3396      		adiw r30,3
 1466               	.LBB11:
 1467 05ec 9E01      		movw r18,r28
 1468 05ee 2B5F      		subi r18,lo8(-(5))
 1469 05f0 3F4F      		sbci r19,hi8(-(5))
 1470               	.L302:
 1471 05f2 1EBC      		out 78-0x20,__zero_reg__
 1472               	.L303:
 1473 05f4 0DB4      		in __tmp_reg__,77-0x20
 1474 05f6 07FE      		sbrs __tmp_reg__,7
 1475 05f8 00C0      		rjmp .L303
 1476 05fa 8EB5      		in r24,78-0x20
 1477 05fc 8193      		st Z+,r24
 1478 05fe E217      		cp r30,r18
 1479 0600 F307      		cpc r31,r19
 1480 0602 01F4      		brne .L302
 1481               	.LBE11:
 1482 0604 409A      		sbi 40-0x20,0
1245:../../src/radio/cc2420/source/basic_rf.c **** 	// signal strength
1246:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.pRxInfo->rssi = pFooter[0];
 1484               	.LM106:
 1485 0606 E091 0000 		lds r30,rfSettings
 1486 060a F091 0000 		lds r31,(rfSettings)+1
 1487 060e 8B81      		ldd r24,Y+3
 1488 0610 8087      		std Z+8,r24
 1489 0612 40E0      		ldi r20,lo8(0)
 1490 0614 20E0      		ldi r18,lo8(0)
 1491 0616 30E0      		ldi r19,hi8(0)
 1492 0618 00C0      		rjmp .L306
 1493               	.L307:
1247:../../src/radio/cc2420/source/basic_rf.c **** 
1248:../../src/radio/cc2420/source/basic_rf.c **** 	// calculate checksum
1249:../../src/radio/cc2420/source/basic_rf.c **** 	checksum = 0;
1250:../../src/radio/cc2420/source/basic_rf.c **** 	for(i=0; i<rfSettings.pRxInfo->length; i++){
1251:../../src/radio/cc2420/source/basic_rf.c **** 		checksum += rfSettings.pRxInfo->pPayload[i];
 1495               	.LM107:
 1496 061a E091 0000 		lds r30,rfSettings
 1497 061e F091 0000 		lds r31,(rfSettings)+1
 1498 0622 8581      		ldd r24,Z+5
 1499 0624 9681      		ldd r25,Z+6
 1500 0626 A80F      		add r26,r24
 1501 0628 B91F      		adc r27,r25
 1502 062a 8C91      		ld r24,X
 1503 062c 480F      		add r20,r24
 1504               	.L306:
 1505 062e 822F      		mov r24,r18
 1507               	.LM108:
 1508 0630 E091 0000 		lds r30,rfSettings
 1509 0634 F091 0000 		lds r31,(rfSettings)+1
 1510 0638 2F5F      		subi r18,lo8(-(1))
 1511 063a 3F4F      		sbci r19,hi8(-(1))
 1512 063c A82F      		mov r26,r24
 1513 063e BB27      		clr r27
 1514 0640 8381      		ldd r24,Z+3
 1515 0642 9927      		clr r25
 1516 0644 87FD      		sbrc r24,7
 1517 0646 9095      		com r25
 1518 0648 A817      		cp r26,r24
 1519 064a B907      		cpc r27,r25
 1520 064c 04F0      		brlt .L307
1252:../../src/radio/cc2420/source/basic_rf.c **** 	}
1253:../../src/radio/cc2420/source/basic_rf.c **** 
1254:../../src/radio/cc2420/source/basic_rf.c **** 	// check checksum
1255:../../src/radio/cc2420/source/basic_rf.c **** 	if(checksum != rx_checksum){
 1522               	.LM109:
 1523 064e 4517      		cp r20,r21
 1524 0650 01F0      		breq .L309
 1525               	.LBB12:
1256:../../src/radio/cc2420/source/basic_rf.c **** 		uint8_t tmp;
1257:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_BYTE(tmp);
 1527               	.LM110:
 1528 0652 4098      		cbi 40-0x20,0
 1529 0654 8FE7      		ldi r24,lo8(127)
 1530 0656 8EBD      		out 78-0x20,r24
 1531               	.L311:
 1532 0658 0DB4      		in __tmp_reg__,77-0x20
 1533 065a 07FE      		sbrs __tmp_reg__,7
 1534 065c 00C0      		rjmp .L311
 1535 065e 1EBC      		out 78-0x20,__zero_reg__
 1536               	.L313:
 1537 0660 0DB4      		in __tmp_reg__,77-0x20
 1538 0662 07FE      		sbrs __tmp_reg__,7
 1539 0664 00C0      		rjmp .L313
 1540 0666 8EB5      		in r24,78-0x20
 1541 0668 409A      		sbi 40-0x20,0
1258:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SFLUSHRX);
 1543               	.LM111:
 1544 066a 4098      		cbi 40-0x20,0
 1545 066c 88E0      		ldi r24,lo8(8)
 1546 066e 8EBD      		out 78-0x20,r24
 1547               	.L315:
 1548 0670 0DB4      		in __tmp_reg__,77-0x20
 1549 0672 07FE      		sbrs __tmp_reg__,7
 1550 0674 00C0      		rjmp .L315
 1551 0676 409A      		sbi 40-0x20,0
1259:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SFLUSHRX);
 1553               	.LM112:
 1554 0678 4098      		cbi 40-0x20,0
 1555 067a 88E0      		ldi r24,lo8(8)
 1556 067c 8EBD      		out 78-0x20,r24
 1557               	.L317:
 1558 067e 0DB4      		in __tmp_reg__,77-0x20
 1559 0680 07FE      		sbrs __tmp_reg__,7
 1560 0682 00C0      		rjmp .L317
 1561 0684 00C0      		rjmp .L406
 1562               	.L309:
 1563               	.LBE12:
1260:../../src/radio/cc2420/source/basic_rf.c **** 		//printf("Checksum fail: %d %d\r\n", checksum, rx_checksum);
1261:../../src/radio/cc2420/source/basic_rf.c **** 		return;
1262:../../src/radio/cc2420/source/basic_rf.c **** 	}
1263:../../src/radio/cc2420/source/basic_rf.c **** 
1264:../../src/radio/cc2420/source/basic_rf.c **** 	// if success mark read and do callback
1265:../../src/radio/cc2420/source/basic_rf.c **** 	if(pFooter[1] * RF_CRC_OK_BM){
 1565               	.LM113:
 1566 0686 8C81      		ldd r24,Y+4
 1567 0688 8823      		tst r24
 1568 068a 01F0      		breq .L319
1266:../../src/radio/cc2420/source/basic_rf.c **** 		//printf("%p\r\n", _rf_rx_callback);
1267:../../src/radio/cc2420/source/basic_rf.c **** 		if(_rf_rx_callback != NULL){
 1570               	.LM114:
 1571 068c E091 0000 		lds r30,_rf_rx_callback
 1572 0690 F091 0000 		lds r31,(_rf_rx_callback)+1
 1573 0694 3097      		sbiw r30,0
 1574 0696 01F0      		breq .L321
1268:../../src/radio/cc2420/source/basic_rf.c **** 			//printf("call\r\n");
1269:../../src/radio/cc2420/source/basic_rf.c **** 			rfSettings.pRxInfo = _rf_rx_callback(rfSettings.pRxInfo);
 1576               	.LM115:
 1577 0698 8091 0000 		lds r24,rfSettings
 1578 069c 9091 0000 		lds r25,(rfSettings)+1
 1579 06a0 0995      		icall
 1580 06a2 9093 0000 		sts (rfSettings)+1,r25
 1581 06a6 8093 0000 		sts rfSettings,r24
 1582               	.L321:
1270:../../src/radio/cc2420/source/basic_rf.c **** 		}
1271:../../src/radio/cc2420/source/basic_rf.c **** 		rx_ready++;
 1584               	.LM116:
 1585 06aa 8091 0000 		lds r24,rx_ready
 1586 06ae 8F5F      		subi r24,lo8(-(1))
 1587 06b0 8093 0000 		sts rx_ready,r24
 1588 06b4 00C0      		rjmp .L331
 1589               	.L319:
 1590               	.LBB13:
1272:../../src/radio/cc2420/source/basic_rf.c **** 		return;
1273:../../src/radio/cc2420/source/basic_rf.c **** 	}else{
1274:../../src/radio/cc2420/source/basic_rf.c **** 		uint8_t tmp;
1275:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_BYTE(tmp);
 1592               	.LM117:
 1593 06b6 4098      		cbi 40-0x20,0
 1594 06b8 8FE7      		ldi r24,lo8(127)
 1595 06ba 8EBD      		out 78-0x20,r24
 1596               	.L323:
 1597 06bc 0DB4      		in __tmp_reg__,77-0x20
 1598 06be 07FE      		sbrs __tmp_reg__,7
 1599 06c0 00C0      		rjmp .L323
 1600 06c2 1EBC      		out 78-0x20,__zero_reg__
 1601               	.L325:
 1602 06c4 0DB4      		in __tmp_reg__,77-0x20
 1603 06c6 07FE      		sbrs __tmp_reg__,7
 1604 06c8 00C0      		rjmp .L325
 1605 06ca 8EB5      		in r24,78-0x20
 1606 06cc 409A      		sbi 40-0x20,0
1276:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SFLUSHRX);
 1608               	.LM118:
 1609 06ce 4098      		cbi 40-0x20,0
 1610 06d0 88E0      		ldi r24,lo8(8)
 1611 06d2 8EBD      		out 78-0x20,r24
 1612               	.L327:
 1613 06d4 0DB4      		in __tmp_reg__,77-0x20
 1614 06d6 07FE      		sbrs __tmp_reg__,7
 1615 06d8 00C0      		rjmp .L327
 1616 06da 409A      		sbi 40-0x20,0
1277:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SFLUSHRX);
 1618               	.LM119:
 1619 06dc 4098      		cbi 40-0x20,0
 1620 06de 88E0      		ldi r24,lo8(8)
 1621 06e0 8EBD      		out 78-0x20,r24
 1622               	.L329:
 1623 06e2 0DB4      		in __tmp_reg__,77-0x20
 1624 06e4 07FE      		sbrs __tmp_reg__,7
 1625 06e6 00C0      		rjmp .L329
 1626               	.L406:
 1627 06e8 409A      		sbi 40-0x20,0
 1628               	.L331:
 1629               	.LBE13:
 1630               	/* epilogue: frame size=4 */
 1631 06ea 2496      		adiw r28,4
 1632 06ec F894      		cli
 1633 06ee DEBF      		out __SP_H__,r29
 1634 06f0 CDBF      		out __SP_L__,r28
 1635 06f2 DF91      		pop r29
 1636 06f4 CF91      		pop r28
 1637 06f6 FF91      		pop r31
 1638 06f8 EF91      		pop r30
 1639 06fa BF91      		pop r27
 1640 06fc AF91      		pop r26
 1641 06fe 9F91      		pop r25
 1642 0700 8F91      		pop r24
 1643 0702 7F91      		pop r23
 1644 0704 6F91      		pop r22
 1645 0706 5F91      		pop r21
 1646 0708 4F91      		pop r20
 1647 070a 3F91      		pop r19
 1648 070c 2F91      		pop r18
 1649 070e 0F90      		pop __tmp_reg__
 1650 0710 0FBE      		out __SREG__,__tmp_reg__
 1651 0712 0F90      		pop __tmp_reg__
 1652 0714 1F90      		pop __zero_reg__
 1653 0716 1895      		reti
 1654               	/* epilogue end (size=23) */
 1655               	/* function __vector_8 size 458 (411) */
 1681               	.Lscope21:
 1683               		.stabd	78,0,0
 1685               	.global	rf_carrier_off
 1687               	rf_carrier_off:
 1688               		.stabd	46,0,0
 1690               	.LM120:
 1691               	.LFBB22:
 1692               	/* prologue: frame size=0 */
 1693               	/* prologue end (size=0) */
 1695               	.LM121:
 1696 0718 8091 0000 		lds r24,radio_sem
 1697 071c 9091 0000 		lds r25,(radio_sem)+1
 1698 0720 0E94 0000 		call nrk_sem_pend
 1700               	.LM122:
 1701 0724 4098      		cbi 40-0x20,0
 1702 0726 86E0      		ldi r24,lo8(6)
 1703 0728 8EBD      		out 78-0x20,r24
 1704               	.L408:
 1706               	.LM123:
 1707 072a 0DB4      		in __tmp_reg__,77-0x20
 1708 072c 07FE      		sbrs __tmp_reg__,7
 1709 072e 00C0      		rjmp .L408
 1710 0730 409A      		sbi 40-0x20,0
 1712               	.LM124:
 1713 0732 8091 0000 		lds r24,radio_sem
 1714 0736 9091 0000 		lds r25,(radio_sem)+1
 1715 073a 0E94 0000 		call nrk_sem_post
 1716               	/* epilogue: frame size=0 */
 1717 073e 0895      		ret
 1718               	/* epilogue end (size=1) */
 1719               	/* function rf_carrier_off size 20 (19) */
 1721               	.Lscope22:
 1723               		.stabd	78,0,0
 1725               	.global	rf_carrier_on
 1727               	rf_carrier_on:
 1728               		.stabd	46,0,0
 1730               	.LM125:
 1731               	.LFBB23:
 1732               	/* prologue: frame size=0 */
 1733               	/* prologue end (size=0) */
 1735               	.LM126:
 1736 0740 8091 0000 		lds r24,radio_sem
 1737 0744 9091 0000 		lds r25,(radio_sem)+1
 1738 0748 0E94 0000 		call nrk_sem_pend
 1740               	.LM127:
 1741 074c 4098      		cbi 40-0x20,0
 1742 074e 84E0      		ldi r24,lo8(4)
 1743 0750 8EBD      		out 78-0x20,r24
 1744               	.L414:
 1746               	.LM128:
 1747 0752 0DB4      		in __tmp_reg__,77-0x20
 1748 0754 07FE      		sbrs __tmp_reg__,7
 1749 0756 00C0      		rjmp .L414
 1750 0758 409A      		sbi 40-0x20,0
 1752               	.LM129:
 1753 075a 8091 0000 		lds r24,radio_sem
 1754 075e 9091 0000 		lds r25,(radio_sem)+1
 1755 0762 0E94 0000 		call nrk_sem_post
 1756               	/* epilogue: frame size=0 */
 1757 0766 0895      		ret
 1758               	/* epilogue end (size=1) */
 1759               	/* function rf_carrier_on size 20 (19) */
 1761               	.Lscope23:
 1763               		.stabd	78,0,0
 1765               	.global	rf_data_mode
 1767               	rf_data_mode:
 1768               		.stabd	46,0,0
 1770               	.LM130:
 1771               	.LFBB24:
 1772               	/* prologue: frame size=0 */
 1773               	/* prologue end (size=0) */
 1775               	.LM131:
 1776 0768 8091 0000 		lds r24,radio_sem
 1777 076c 9091 0000 		lds r25,(radio_sem)+1
 1778 0770 0E94 0000 		call nrk_sem_pend
 1780               	.LM132:
 1781 0774 4098      		cbi 40-0x20,0
 1782 0776 86E0      		ldi r24,lo8(6)
 1783 0778 8EBD      		out 78-0x20,r24
 1784               	.L420:
 1786               	.LM133:
 1787 077a 0DB4      		in __tmp_reg__,77-0x20
 1788 077c 07FE      		sbrs __tmp_reg__,7
 1789 077e 00C0      		rjmp .L420
 1790 0780 409A      		sbi 40-0x20,0
 1792               	.LM134:
 1793 0782 4098      		cbi 40-0x20,0
 1794 0784 82E1      		ldi r24,lo8(18)
 1795 0786 8EBD      		out 78-0x20,r24
 1796               	.L422:
 1797 0788 0DB4      		in __tmp_reg__,77-0x20
 1798 078a 07FE      		sbrs __tmp_reg__,7
 1799 078c 00C0      		rjmp .L422
 1800 078e 85E0      		ldi r24,lo8(5)
 1801 0790 8EBD      		out 78-0x20,r24
 1802               	.L424:
 1803 0792 0DB4      		in __tmp_reg__,77-0x20
 1804 0794 07FE      		sbrs __tmp_reg__,7
 1805 0796 00C0      		rjmp .L424
 1806 0798 1EBC      		out 78-0x20,__zero_reg__
 1807               	.L426:
 1808 079a 0DB4      		in __tmp_reg__,77-0x20
 1809 079c 07FE      		sbrs __tmp_reg__,7
 1810 079e 00C0      		rjmp .L426
 1811 07a0 409A      		sbi 40-0x20,0
 1813               	.LM135:
 1814 07a2 4098      		cbi 40-0x20,0
 1815 07a4 8EE2      		ldi r24,lo8(46)
 1816 07a6 8EBD      		out 78-0x20,r24
 1817               	.L428:
 1818 07a8 0DB4      		in __tmp_reg__,77-0x20
 1819 07aa 07FE      		sbrs __tmp_reg__,7
 1820 07ac 00C0      		rjmp .L428
 1821 07ae 1EBC      		out 78-0x20,__zero_reg__
 1822               	.L430:
 1823 07b0 0DB4      		in __tmp_reg__,77-0x20
 1824 07b2 07FE      		sbrs __tmp_reg__,7
 1825 07b4 00C0      		rjmp .L430
 1826 07b6 1EBC      		out 78-0x20,__zero_reg__
 1827               	.L432:
 1828 07b8 0DB4      		in __tmp_reg__,77-0x20
 1829 07ba 07FE      		sbrs __tmp_reg__,7
 1830 07bc 00C0      		rjmp .L432
 1831 07be 409A      		sbi 40-0x20,0
 1833               	.LM136:
 1834 07c0 0E94 0000 		call rf_flush_rx_fifo
 1836               	.LM137:
 1837 07c4 8091 0000 		lds r24,radio_sem
 1838 07c8 9091 0000 		lds r25,(radio_sem)+1
 1839 07cc 0E94 0000 		call nrk_sem_post
 1840               	/* epilogue: frame size=0 */
 1841 07d0 0895      		ret
 1842               	/* epilogue end (size=1) */
 1843               	/* function rf_data_mode size 53 (52) */
 1845               	.Lscope24:
 1847               		.stabd	78,0,0
 1849               	.global	rf_test_mode
 1851               	rf_test_mode:
 1852               		.stabd	46,0,0
 1854               	.LM138:
 1855               	.LFBB25:
 1856               	/* prologue: frame size=0 */
 1857               	/* prologue end (size=0) */
 1859               	.LM139:
 1860 07d2 8091 0000 		lds r24,radio_sem
 1861 07d6 9091 0000 		lds r25,(radio_sem)+1
 1862 07da 0E94 0000 		call nrk_sem_pend
 1864               	.LM140:
 1865 07de 4098      		cbi 40-0x20,0
 1866 07e0 86E0      		ldi r24,lo8(6)
 1867 07e2 8EBD      		out 78-0x20,r24
 1868               	.L450:
 1870               	.LM141:
 1871 07e4 0DB4      		in __tmp_reg__,77-0x20
 1872 07e6 07FE      		sbrs __tmp_reg__,7
 1873 07e8 00C0      		rjmp .L450
 1874 07ea 409A      		sbi 40-0x20,0
 1876               	.LM142:
 1877 07ec 4098      		cbi 40-0x20,0
 1878 07ee 82E1      		ldi r24,lo8(18)
 1879 07f0 8EBD      		out 78-0x20,r24
 1880               	.L452:
 1881 07f2 0DB4      		in __tmp_reg__,77-0x20
 1882 07f4 07FE      		sbrs __tmp_reg__,7
 1883 07f6 00C0      		rjmp .L452
 1884 07f8 85E0      		ldi r24,lo8(5)
 1885 07fa 8EBD      		out 78-0x20,r24
 1886               	.L454:
 1887 07fc 0DB4      		in __tmp_reg__,77-0x20
 1888 07fe 07FE      		sbrs __tmp_reg__,7
 1889 0800 00C0      		rjmp .L454
 1890 0802 88E0      		ldi r24,lo8(8)
 1891 0804 8EBD      		out 78-0x20,r24
 1892               	.L456:
 1893 0806 0DB4      		in __tmp_reg__,77-0x20
 1894 0808 07FE      		sbrs __tmp_reg__,7
 1895 080a 00C0      		rjmp .L456
 1896 080c 409A      		sbi 40-0x20,0
 1898               	.LM143:
 1899 080e 4098      		cbi 40-0x20,0
 1900 0810 8EE2      		ldi r24,lo8(46)
 1901 0812 8EBD      		out 78-0x20,r24
 1902               	.L458:
 1903 0814 0DB4      		in __tmp_reg__,77-0x20
 1904 0816 07FE      		sbrs __tmp_reg__,7
 1905 0818 00C0      		rjmp .L458
 1906 081a 88E1      		ldi r24,lo8(24)
 1907 081c 8EBD      		out 78-0x20,r24
 1908               	.L460:
 1909 081e 0DB4      		in __tmp_reg__,77-0x20
 1910 0820 07FE      		sbrs __tmp_reg__,7
 1911 0822 00C0      		rjmp .L460
 1912 0824 1EBC      		out 78-0x20,__zero_reg__
 1913               	.L462:
 1914 0826 0DB4      		in __tmp_reg__,77-0x20
 1915 0828 07FE      		sbrs __tmp_reg__,7
 1916 082a 00C0      		rjmp .L462
 1917 082c 409A      		sbi 40-0x20,0
 1919               	.LM144:
 1920 082e 0E94 0000 		call rf_flush_rx_fifo
 1922               	.LM145:
 1923 0832 8091 0000 		lds r24,radio_sem
 1924 0836 9091 0000 		lds r25,(radio_sem)+1
 1925 083a 0E94 0000 		call nrk_sem_post
 1926               	/* epilogue: frame size=0 */
 1927 083e 0895      		ret
 1928               	/* epilogue end (size=1) */
 1929               	/* function rf_test_mode size 55 (54) */
 1931               	.Lscope25:
 1933               		.stabd	78,0,0
 1936               	.global	rf_set_cca_thresh
 1938               	rf_set_cca_thresh:
 1939               		.stabd	46,0,0
 1941               	.LM146:
 1942               	.LFBB26:
 1943               	/* prologue: frame size=0 */
 1944 0840 0F93      		push r16
 1945 0842 1F93      		push r17
 1946               	/* prologue end (size=2) */
 1947 0844 082F      		mov r16,r24
 1949               	.LM147:
 1950 0846 8091 0000 		lds r24,radio_sem
 1951 084a 9091 0000 		lds r25,(radio_sem)+1
 1952 084e 0E94 0000 		call nrk_sem_pend
 1954               	.LM148:
 1955 0852 1127      		clr r17
 1956 0854 07FD      		sbrc r16,7
 1957 0856 1095      		com r17
 1958 0858 302F      		mov r19,r16
 1959 085a 2227      		clr r18
 1960 085c 2068      		ori r18,lo8(128)
 1962               	.LM149:
 1963 085e 4098      		cbi 40-0x20,0
 1964 0860 83E1      		ldi r24,lo8(19)
 1965 0862 8EBD      		out 78-0x20,r24
 1966               	.L480:
 1968               	.LM150:
 1969 0864 0DB4      		in __tmp_reg__,77-0x20
 1970 0866 07FE      		sbrs __tmp_reg__,7
 1971 0868 00C0      		rjmp .L480
 1972 086a 832F      		mov r24,r19
 1973 086c 9927      		clr r25
 1974 086e 8EBD      		out 78-0x20,r24
 1975               	.L482:
 1976 0870 0DB4      		in __tmp_reg__,77-0x20
 1977 0872 07FE      		sbrs __tmp_reg__,7
 1978 0874 00C0      		rjmp .L482
 1979 0876 2EBD      		out 78-0x20,r18
 1980               	.L484:
 1981 0878 0DB4      		in __tmp_reg__,77-0x20
 1982 087a 07FE      		sbrs __tmp_reg__,7
 1983 087c 00C0      		rjmp .L484
 1984 087e 409A      		sbi 40-0x20,0
 1986               	.LM151:
 1987 0880 8091 0000 		lds r24,radio_sem
 1988 0884 9091 0000 		lds r25,(radio_sem)+1
 1989 0888 0E94 0000 		call nrk_sem_post
 1990               	/* epilogue: frame size=0 */
 1991 088c 1F91      		pop r17
 1992 088e 0F91      		pop r16
 1993 0890 0895      		ret
 1994               	/* epilogue end (size=3) */
 1995               	/* function rf_set_cca_thresh size 41 (36) */
 2000               	.Lscope26:
 2002               		.stabd	78,0,0
 2004               	.global	rf_polling_rx_packet
 2006               	rf_polling_rx_packet:
 2007               		.stabd	46,0,0
 2009               	.LM152:
 2010               	.LFBB27:
 2011               	/* prologue: frame size=4 */
 2012 0892 CF93      		push r28
 2013 0894 DF93      		push r29
 2014 0896 CDB7      		in r28,__SP_L__
 2015 0898 DEB7      		in r29,__SP_H__
 2016 089a 2497      		sbiw r28,4
 2017 089c 0FB6      		in __tmp_reg__,__SREG__
 2018 089e F894      		cli
 2019 08a0 DEBF      		out __SP_H__,r29
 2020 08a2 0FBE      		out __SREG__,__tmp_reg__
 2021 08a4 CDBF      		out __SP_L__,r28
 2022               	/* prologue end (size=10) */
 2024               	.LM153:
 2025 08a6 8091 0000 		lds r24,radio_sem
 2026 08aa 9091 0000 		lds r25,(radio_sem)+1
 2027 08ae 0E94 0000 		call nrk_sem_pend
 2029               	.LM154:
 2030 08b2 679B      		sbis 44-0x20,7
 2031 08b4 00C0      		rjmp .L494
 2032               	.LBB14:
 2034               	.LM155:
 2035 08b6 1092 0000 		sts last_pkt_encrypted,__zero_reg__
 2037               	.LM156:
 2038 08ba 679B      		sbis 44-0x20,7
 2039 08bc 00C0      		rjmp .L496
 2040 08be 3199      		sbic 38-0x20,1
 2041 08c0 00C0      		rjmp .L496
 2043               	.LM157:
 2044 08c2 4098      		cbi 40-0x20,0
 2045 08c4 8FE7      		ldi r24,lo8(127)
 2046 08c6 8EBD      		out 78-0x20,r24
 2047               	.L499:
 2048 08c8 0DB4      		in __tmp_reg__,77-0x20
 2049 08ca 07FE      		sbrs __tmp_reg__,7
 2050 08cc 00C0      		rjmp .L499
 2051 08ce 1EBC      		out 78-0x20,__zero_reg__
 2052               	.L501:
 2053 08d0 0DB4      		in __tmp_reg__,77-0x20
 2054 08d2 07FE      		sbrs __tmp_reg__,7
 2055 08d4 00C0      		rjmp .L501
 2056 08d6 8EB5      		in r24,78-0x20
 2057 08d8 409A      		sbi 40-0x20,0
 2059               	.LM158:
 2060 08da 4098      		cbi 40-0x20,0
 2061 08dc 88E0      		ldi r24,lo8(8)
 2062 08de 8EBD      		out 78-0x20,r24
 2063               	.L503:
 2064 08e0 0DB4      		in __tmp_reg__,77-0x20
 2065 08e2 07FE      		sbrs __tmp_reg__,7
 2066 08e4 00C0      		rjmp .L503
 2067 08e6 409A      		sbi 40-0x20,0
 2069               	.LM159:
 2070 08e8 4098      		cbi 40-0x20,0
 2071 08ea 88E0      		ldi r24,lo8(8)
 2072 08ec 8EBD      		out 78-0x20,r24
 2073               	.L505:
 2074 08ee 0DB4      		in __tmp_reg__,77-0x20
 2075 08f0 07FE      		sbrs __tmp_reg__,7
 2076 08f2 00C0      		rjmp .L505
 2077 08f4 409A      		sbi 40-0x20,0
 2079               	.LM160:
 2080 08f6 8091 0000 		lds r24,radio_sem
 2081 08fa 9091 0000 		lds r25,(radio_sem)+1
 2082 08fe 0E94 0000 		call nrk_sem_post
 2083 0902 8FEF      		ldi r24,lo8(-1)
 2084 0904 9FEF      		ldi r25,hi8(-1)
 2085 0906 00C0      		rjmp .L507
 2086               	.L496:
 2088               	.LM161:
 2089 0908 4098      		cbi 40-0x20,0
 2090 090a 8FE7      		ldi r24,lo8(127)
 2091 090c 8EBD      		out 78-0x20,r24
 2092               	.L508:
 2093 090e 0DB4      		in __tmp_reg__,77-0x20
 2094 0910 07FE      		sbrs __tmp_reg__,7
 2095 0912 00C0      		rjmp .L508
 2096 0914 1EBC      		out 78-0x20,__zero_reg__
 2097               	.L510:
 2098 0916 0DB4      		in __tmp_reg__,77-0x20
 2099 0918 07FE      		sbrs __tmp_reg__,7
 2100 091a 00C0      		rjmp .L510
 2101 091c 4EB5      		in r20,78-0x20
 2102 091e 409A      		sbi 40-0x20,0
 2104               	.LM162:
 2105 0920 4F77      		andi r20,lo8(127)
 2107               	.LM163:
 2108 0922 01F4      		brne .L512
 2110               	.LM164:
 2111 0924 4098      		cbi 40-0x20,0
 2112 0926 8FE7      		ldi r24,lo8(127)
 2113 0928 8EBD      		out 78-0x20,r24
 2114               	.L514:
 2115 092a 0DB4      		in __tmp_reg__,77-0x20
 2116 092c 07FE      		sbrs __tmp_reg__,7
 2117 092e 00C0      		rjmp .L514
 2118 0930 1EBC      		out 78-0x20,__zero_reg__
 2119               	.L516:
 2120 0932 0DB4      		in __tmp_reg__,77-0x20
 2121 0934 07FE      		sbrs __tmp_reg__,7
 2122 0936 00C0      		rjmp .L516
 2123 0938 8EB5      		in r24,78-0x20
 2124 093a 409A      		sbi 40-0x20,0
 2126               	.LM165:
 2127 093c 4098      		cbi 40-0x20,0
 2128 093e 88E0      		ldi r24,lo8(8)
 2129 0940 8EBD      		out 78-0x20,r24
 2130               	.L518:
 2131 0942 0DB4      		in __tmp_reg__,77-0x20
 2132 0944 07FE      		sbrs __tmp_reg__,7
 2133 0946 00C0      		rjmp .L518
 2134 0948 409A      		sbi 40-0x20,0
 2136               	.LM166:
 2137 094a 4098      		cbi 40-0x20,0
 2138 094c 88E0      		ldi r24,lo8(8)
 2139 094e 8EBD      		out 78-0x20,r24
 2140               	.L520:
 2141 0950 0DB4      		in __tmp_reg__,77-0x20
 2142 0952 07FE      		sbrs __tmp_reg__,7
 2143 0954 00C0      		rjmp .L520
 2144 0956 409A      		sbi 40-0x20,0
 2146               	.LM167:
 2147 0958 8091 0000 		lds r24,radio_sem
 2148 095c 9091 0000 		lds r25,(radio_sem)+1
 2149 0960 0E94 0000 		call nrk_sem_post
 2150 0964 8EEF      		ldi r24,lo8(-2)
 2151 0966 9FEF      		ldi r25,hi8(-2)
 2152 0968 00C0      		rjmp .L507
 2153               	.L512:
 2155               	.LM168:
 2156 096a 4C30      		cpi r20,lo8(12)
 2157 096c 04F0      		brlt .L522
 2158 096e E091 0000 		lds r30,rfSettings
 2159 0972 F091 0000 		lds r31,(rfSettings)+1
 2160 0976 242F      		mov r18,r20
 2161 0978 3327      		clr r19
 2162 097a 27FD      		sbrc r18,7
 2163 097c 3095      		com r19
 2164 097e 2B50      		subi r18,lo8(-(-11))
 2165 0980 3040      		sbci r19,hi8(-(-11))
 2166 0982 8481      		ldd r24,Z+4
 2167 0984 9927      		clr r25
 2168 0986 87FD      		sbrc r24,7
 2169 0988 9095      		com r25
 2170 098a 8217      		cp r24,r18
 2171 098c 9307      		cpc r25,r19
 2172 098e 04F4      		brge .L524
 2173               	.L522:
 2175               	.LM169:
 2176 0990 4098      		cbi 40-0x20,0
 2177 0992 8FE7      		ldi r24,lo8(127)
 2178 0994 8EBD      		out 78-0x20,r24
 2179               	.L525:
 2180 0996 0DB4      		in __tmp_reg__,77-0x20
 2181 0998 07FE      		sbrs __tmp_reg__,7
 2182 099a 00C0      		rjmp .L525
 2183 099c 60E0      		ldi r22,lo8(0)
 2184 099e 70E0      		ldi r23,hi8(0)
 2185               	.LBB15:
 2186 09a0 242F      		mov r18,r20
 2187 09a2 3327      		clr r19
 2188 09a4 27FD      		sbrc r18,7
 2189 09a6 3095      		com r19
 2190 09a8 00C0      		rjmp .L527
 2191               	.L528:
 2192 09aa 1EBC      		out 78-0x20,__zero_reg__
 2193               	.L529:
 2194 09ac 0DB4      		in __tmp_reg__,77-0x20
 2195 09ae 07FE      		sbrs __tmp_reg__,7
 2196 09b0 00C0      		rjmp .L529
 2197 09b2 6F5F      		subi r22,lo8(-(1))
 2198 09b4 7F4F      		sbci r23,hi8(-(1))
 2199               	.L527:
 2200 09b6 862F      		mov r24,r22
 2201 09b8 9927      		clr r25
 2202 09ba 8217      		cp r24,r18
 2203 09bc 9307      		cpc r25,r19
 2204 09be 04F4      		brge .L531
 2205 09c0 3199      		sbic 38-0x20,1
 2206 09c2 00C0      		rjmp .L528
 2207               	.L531:
 2208               	.LBE15:
 2209 09c4 409A      		sbi 40-0x20,0
 2211               	.LM170:
 2212 09c6 4098      		cbi 40-0x20,0
 2213 09c8 8FE7      		ldi r24,lo8(127)
 2214 09ca 8EBD      		out 78-0x20,r24
 2215               	.L533:
 2216 09cc 0DB4      		in __tmp_reg__,77-0x20
 2217 09ce 07FE      		sbrs __tmp_reg__,7
 2218 09d0 00C0      		rjmp .L533
 2219 09d2 1EBC      		out 78-0x20,__zero_reg__
 2220               	.L535:
 2221 09d4 0DB4      		in __tmp_reg__,77-0x20
 2222 09d6 07FE      		sbrs __tmp_reg__,7
 2223 09d8 00C0      		rjmp .L535
 2224 09da 8EB5      		in r24,78-0x20
 2225 09dc 409A      		sbi 40-0x20,0
 2227               	.LM171:
 2228 09de 4098      		cbi 40-0x20,0
 2229 09e0 88E0      		ldi r24,lo8(8)
 2230 09e2 8EBD      		out 78-0x20,r24
 2231               	.L537:
 2232 09e4 0DB4      		in __tmp_reg__,77-0x20
 2233 09e6 07FE      		sbrs __tmp_reg__,7
 2234 09e8 00C0      		rjmp .L537
 2235 09ea 409A      		sbi 40-0x20,0
 2237               	.LM172:
 2238 09ec 4098      		cbi 40-0x20,0
 2239 09ee 88E0      		ldi r24,lo8(8)
 2240 09f0 8EBD      		out 78-0x20,r24
 2241               	.L539:
 2242 09f2 0DB4      		in __tmp_reg__,77-0x20
 2243 09f4 07FE      		sbrs __tmp_reg__,7
 2244 09f6 00C0      		rjmp .L539
 2245 09f8 409A      		sbi 40-0x20,0
 2247               	.LM173:
 2248 09fa 8091 0000 		lds r24,radio_sem
 2249 09fe 9091 0000 		lds r25,(radio_sem)+1
 2250 0a02 0E94 0000 		call nrk_sem_post
 2251 0a06 8DEF      		ldi r24,lo8(-3)
 2252 0a08 9FEF      		ldi r25,hi8(-3)
 2253 0a0a 00C0      		rjmp .L507
 2254               	.L524:
 2256               	.LM174:
 2257 0a0c E091 0000 		lds r30,rfSettings
 2258 0a10 F091 0000 		lds r31,(rfSettings)+1
 2259 0a14 4C50      		subi r20,lo8(-(-12))
 2260 0a16 4383      		std Z+3,r20
 2262               	.LM175:
 2263 0a18 4098      		cbi 40-0x20,0
 2264 0a1a 8FE7      		ldi r24,lo8(127)
 2265 0a1c 8EBD      		out 78-0x20,r24
 2266               	.L541:
 2267 0a1e 0DB4      		in __tmp_reg__,77-0x20
 2268 0a20 07FE      		sbrs __tmp_reg__,7
 2269 0a22 00C0      		rjmp .L541
 2270 0a24 FE01      		movw r30,r28
 2271 0a26 3196      		adiw r30,1
 2272               	.LBB16:
 2273 0a28 9E01      		movw r18,r28
 2274 0a2a 2D5F      		subi r18,lo8(-(3))
 2275 0a2c 3F4F      		sbci r19,hi8(-(3))
 2276               	.L543:
 2277 0a2e 1EBC      		out 78-0x20,__zero_reg__
 2278               	.L544:
 2279 0a30 0DB4      		in __tmp_reg__,77-0x20
 2280 0a32 07FE      		sbrs __tmp_reg__,7
 2281 0a34 00C0      		rjmp .L544
 2282 0a36 8EB5      		in r24,78-0x20
 2283 0a38 8193      		st Z+,r24
 2284 0a3a E217      		cp r30,r18
 2285 0a3c F307      		cpc r31,r19
 2286 0a3e 01F4      		brne .L543
 2287               	.LBE16:
 2288 0a40 409A      		sbi 40-0x20,0
 2290               	.LM176:
 2291 0a42 E091 0000 		lds r30,rfSettings
 2292 0a46 F091 0000 		lds r31,(rfSettings)+1
 2293 0a4a 8981      		ldd r24,Y+1
 2294 0a4c 9A81      		ldd r25,Y+2
 2295 0a4e 65E0      		ldi r22,5
 2296 0a50 9695      	1:	lsr r25
 2297 0a52 8795      		ror r24
 2298 0a54 6A95      		dec r22
 2299 0a56 01F4      		brne 1b
 2300 0a58 8170      		andi r24,lo8(1)
 2301 0a5a 8783      		std Z+7,r24
 2303               	.LM177:
 2304 0a5c 4098      		cbi 40-0x20,0
 2305 0a5e 8FE7      		ldi r24,lo8(127)
 2306 0a60 8EBD      		out 78-0x20,r24
 2307               	.L547:
 2308 0a62 0DB4      		in __tmp_reg__,77-0x20
 2309 0a64 07FE      		sbrs __tmp_reg__,7
 2310 0a66 00C0      		rjmp .L547
 2311 0a68 1EBC      		out 78-0x20,__zero_reg__
 2312               	.L549:
 2313 0a6a 0DB4      		in __tmp_reg__,77-0x20
 2314 0a6c 07FE      		sbrs __tmp_reg__,7
 2315 0a6e 00C0      		rjmp .L549
 2316 0a70 E091 0000 		lds r30,rfSettings
 2317 0a74 F091 0000 		lds r31,(rfSettings)+1
 2318 0a78 8EB5      		in r24,78-0x20
 2319 0a7a 8083      		st Z,r24
 2320 0a7c 409A      		sbi 40-0x20,0
 2322               	.LM178:
 2323 0a7e 4098      		cbi 40-0x20,0
 2324 0a80 8FE7      		ldi r24,lo8(127)
 2325 0a82 8EBD      		out 78-0x20,r24
 2326               	.L551:
 2327 0a84 0DB4      		in __tmp_reg__,77-0x20
 2328 0a86 07FE      		sbrs __tmp_reg__,7
 2329 0a88 00C0      		rjmp .L551
 2330 0a8a 80E0      		ldi r24,lo8(0)
 2331 0a8c 00C0      		rjmp .L553
 2332               	.L554:
 2333               	.LBB17:
 2334 0a8e 1EBC      		out 78-0x20,__zero_reg__
 2335               	.L555:
 2336 0a90 0DB4      		in __tmp_reg__,77-0x20
 2337 0a92 07FE      		sbrs __tmp_reg__,7
 2338 0a94 00C0      		rjmp .L555
 2339 0a96 8F5F      		subi r24,lo8(-(1))
 2340 0a98 8430      		cpi r24,lo8(4)
 2341 0a9a 01F0      		breq .L557
 2342               	.L553:
 2343 0a9c 3199      		sbic 38-0x20,1
 2344 0a9e 00C0      		rjmp .L554
 2345               	.L557:
 2346               	.LBE17:
 2347 0aa0 409A      		sbi 40-0x20,0
 2349               	.LM179:
 2350 0aa2 4098      		cbi 40-0x20,0
 2351 0aa4 8FE7      		ldi r24,lo8(127)
 2352 0aa6 8EBD      		out 78-0x20,r24
 2353               	.L558:
 2354 0aa8 0DB4      		in __tmp_reg__,77-0x20
 2355 0aaa 07FE      		sbrs __tmp_reg__,7
 2356 0aac 00C0      		rjmp .L558
 2357 0aae 20E0      		ldi r18,lo8(0)
 2358 0ab0 30E0      		ldi r19,hi8(0)
 2359               	.L560:
 2360               	.LBB18:
 2361 0ab2 1EBC      		out 78-0x20,__zero_reg__
 2362               	.L561:
 2363 0ab4 0DB4      		in __tmp_reg__,77-0x20
 2364 0ab6 07FE      		sbrs __tmp_reg__,7
 2365 0ab8 00C0      		rjmp .L561
 2366 0aba E091 0000 		lds r30,rfSettings
 2367 0abe F091 0000 		lds r31,(rfSettings)+1
 2368 0ac2 E20F      		add r30,r18
 2369 0ac4 F31F      		adc r31,r19
 2370 0ac6 8EB5      		in r24,78-0x20
 2371 0ac8 8183      		std Z+1,r24
 2372 0aca 2F5F      		subi r18,lo8(-(1))
 2373 0acc 3F4F      		sbci r19,hi8(-(1))
 2374 0ace 2230      		cpi r18,2
 2375 0ad0 3105      		cpc r19,__zero_reg__
 2376 0ad2 01F4      		brne .L560
 2377               	.LBE18:
 2378 0ad4 409A      		sbi 40-0x20,0
 2380               	.LM180:
 2381 0ad6 8981      		ldd r24,Y+1
 2382 0ad8 9A81      		ldd r25,Y+2
 2383 0ada 83FF      		sbrs r24,3
 2384 0adc 00C0      		rjmp .L564
 2385               	.LBB19:
 2387               	.LM181:
 2388 0ade 4098      		cbi 40-0x20,0
 2389 0ae0 8FE7      		ldi r24,lo8(127)
 2390 0ae2 8EBD      		out 78-0x20,r24
 2391               	.L566:
 2392 0ae4 0DB4      		in __tmp_reg__,77-0x20
 2393 0ae6 07FE      		sbrs __tmp_reg__,7
 2394 0ae8 00C0      		rjmp .L566
 2395 0aea E0E0      		ldi r30,lo8(rx_ctr)
 2396 0aec F0E0      		ldi r31,hi8(rx_ctr)
 2397               	.L568:
 2398               	.LBB20:
 2399 0aee 1EBC      		out 78-0x20,__zero_reg__
 2400               	.L569:
 2401 0af0 0DB4      		in __tmp_reg__,77-0x20
 2402 0af2 07FE      		sbrs __tmp_reg__,7
 2403 0af4 00C0      		rjmp .L569
 2404 0af6 8EB5      		in r24,78-0x20
 2405 0af8 8193      		st Z+,r24
 2406 0afa 80E0      		ldi r24,hi8(rx_ctr+4)
 2407 0afc E030      		cpi r30,lo8(rx_ctr+4)
 2408 0afe F807      		cpc r31,r24
 2409 0b00 01F4      		brne .L568
 2410               	.LBE20:
 2411 0b02 409A      		sbi 40-0x20,0
 2413               	.LM182:
 2414 0b04 4098      		cbi 40-0x20,0
 2415 0b06 89E9      		ldi r24,lo8(-103)
 2416 0b08 8EBD      		out 78-0x20,r24
 2417               	.L572:
 2418 0b0a 0DB4      		in __tmp_reg__,77-0x20
 2419 0b0c 07FE      		sbrs __tmp_reg__,7
 2420 0b0e 00C0      		rjmp .L572
 2421 0b10 80E8      		ldi r24,lo8(-128)
 2422 0b12 8EBD      		out 78-0x20,r24
 2423               	.L574:
 2424 0b14 0DB4      		in __tmp_reg__,77-0x20
 2425 0b16 07FE      		sbrs __tmp_reg__,7
 2426 0b18 00C0      		rjmp .L574
 2427 0b1a 92E0      		ldi r25,lo8(2)
 2428               	.L576:
 2429 0b1c 9150      		subi r25,lo8(-(-1))
 2430 0b1e E92F      		mov r30,r25
 2431 0b20 FF27      		clr r31
 2432 0b22 E050      		subi r30,lo8(-(rx_ctr))
 2433 0b24 F040      		sbci r31,hi8(-(rx_ctr))
 2434 0b26 8081      		ld r24,Z
 2435 0b28 8EBD      		out 78-0x20,r24
 2436               	.L577:
 2437 0b2a 0DB4      		in __tmp_reg__,77-0x20
 2438 0b2c 07FE      		sbrs __tmp_reg__,7
 2439 0b2e 00C0      		rjmp .L577
 2440 0b30 9923      		tst r25
 2441 0b32 01F4      		brne .L576
 2442 0b34 409A      		sbi 40-0x20,0
 2444               	.LM183:
 2445 0b36 4098      		cbi 40-0x20,0
 2446 0b38 8BE9      		ldi r24,lo8(-101)
 2447 0b3a 8EBD      		out 78-0x20,r24
 2448               	.L580:
 2449 0b3c 0DB4      		in __tmp_reg__,77-0x20
 2450 0b3e 07FE      		sbrs __tmp_reg__,7
 2451 0b40 00C0      		rjmp .L580
 2452 0b42 80E8      		ldi r24,lo8(-128)
 2453 0b44 8EBD      		out 78-0x20,r24
 2454               	.L582:
 2455 0b46 0DB4      		in __tmp_reg__,77-0x20
 2456 0b48 07FE      		sbrs __tmp_reg__,7
 2457 0b4a 00C0      		rjmp .L582
 2458 0b4c 92E0      		ldi r25,lo8(2)
 2459               	.L584:
 2460 0b4e 9150      		subi r25,lo8(-(-1))
 2461 0b50 E92F      		mov r30,r25
 2462 0b52 FF27      		clr r31
 2463 0b54 E050      		subi r30,lo8(-(rx_ctr+2))
 2464 0b56 F040      		sbci r31,hi8(-(rx_ctr+2))
 2465 0b58 8081      		ld r24,Z
 2466 0b5a 8EBD      		out 78-0x20,r24
 2467               	.L585:
 2468 0b5c 0DB4      		in __tmp_reg__,77-0x20
 2469 0b5e 07FE      		sbrs __tmp_reg__,7
 2470 0b60 00C0      		rjmp .L585
 2471 0b62 9923      		tst r25
 2472 0b64 01F4      		brne .L584
 2473 0b66 409A      		sbi 40-0x20,0
 2475               	.LM184:
 2476 0b68 4098      		cbi 40-0x20,0
 2477 0b6a 8CE0      		ldi r24,lo8(12)
 2478 0b6c 8EBD      		out 78-0x20,r24
 2479               	.L588:
 2480 0b6e 0DB4      		in __tmp_reg__,77-0x20
 2481 0b70 07FE      		sbrs __tmp_reg__,7
 2482 0b72 00C0      		rjmp .L588
 2483 0b74 409A      		sbi 40-0x20,0
 2485               	.LM185:
 2486 0b76 81E0      		ldi r24,lo8(1)
 2487 0b78 8093 0000 		sts last_pkt_encrypted,r24
 2489               	.LM186:
 2490 0b7c E091 0000 		lds r30,rfSettings
 2491 0b80 F091 0000 		lds r31,(rfSettings)+1
 2492 0b84 8381      		ldd r24,Z+3
 2493 0b86 8450      		subi r24,lo8(-(-4))
 2494 0b88 8383      		std Z+3,r24
 2495               	.L564:
 2496               	.LBE19:
 2498               	.LM187:
 2499 0b8a 4098      		cbi 40-0x20,0
 2500 0b8c 8FE7      		ldi r24,lo8(127)
 2501 0b8e 8EBD      		out 78-0x20,r24
 2502               	.L590:
 2503 0b90 0DB4      		in __tmp_reg__,77-0x20
 2504 0b92 07FE      		sbrs __tmp_reg__,7
 2505 0b94 00C0      		rjmp .L590
 2506 0b96 40E0      		ldi r20,lo8(0)
 2507 0b98 50E0      		ldi r21,hi8(0)
 2508 0b9a 00C0      		rjmp .L592
 2509               	.L593:
 2510               	.LBB21:
 2511 0b9c 1EBC      		out 78-0x20,__zero_reg__
 2512               	.L594:
 2513 0b9e 0DB4      		in __tmp_reg__,77-0x20
 2514 0ba0 07FE      		sbrs __tmp_reg__,7
 2515 0ba2 00C0      		rjmp .L594
 2516 0ba4 E091 0000 		lds r30,rfSettings
 2517 0ba8 F091 0000 		lds r31,(rfSettings)+1
 2518 0bac 0580      		ldd __tmp_reg__,Z+5
 2519 0bae F681      		ldd r31,Z+6
 2520 0bb0 E02D      		mov r30,__tmp_reg__
 2521 0bb2 E60F      		add r30,r22
 2522 0bb4 F11D      		adc r31,__zero_reg__
 2523 0bb6 8EB5      		in r24,78-0x20
 2524 0bb8 8083      		st Z,r24
 2525 0bba 4F5F      		subi r20,lo8(-(1))
 2526 0bbc 5F4F      		sbci r21,hi8(-(1))
 2527               	.L592:
 2528 0bbe 642F      		mov r22,r20
 2529 0bc0 E091 0000 		lds r30,rfSettings
 2530 0bc4 F091 0000 		lds r31,(rfSettings)+1
 2531 0bc8 242F      		mov r18,r20
 2532 0bca 3327      		clr r19
 2533 0bcc 8381      		ldd r24,Z+3
 2534 0bce 9927      		clr r25
 2535 0bd0 87FD      		sbrc r24,7
 2536 0bd2 9095      		com r25
 2537 0bd4 2817      		cp r18,r24
 2538 0bd6 3907      		cpc r19,r25
 2539 0bd8 04F0      		brlt .L593
 2540               	.LBE21:
 2541 0bda 409A      		sbi 40-0x20,0
 2543               	.LM188:
 2544 0bdc 4098      		cbi 40-0x20,0
 2545 0bde 8FE7      		ldi r24,lo8(127)
 2546 0be0 8EBD      		out 78-0x20,r24
 2547               	.L597:
 2548 0be2 0DB4      		in __tmp_reg__,77-0x20
 2549 0be4 07FC      		sbrc __tmp_reg__,7
 2550 0be6 00C0      		rjmp .L724
 2551 0be8 00C0      		rjmp .L597
 2552               	.L599:
 2553               	.LBB22:
 2554 0bea 0DB4      		in __tmp_reg__,77-0x20
 2555 0bec 07FE      		sbrs __tmp_reg__,7
 2556 0bee 00C0      		rjmp .L599
 2557 0bf0 5EB5      		in r21,78-0x20
 2558               	.LBE22:
 2559 0bf2 409A      		sbi 40-0x20,0
 2561               	.LM189:
 2562 0bf4 4098      		cbi 40-0x20,0
 2563 0bf6 8FE7      		ldi r24,lo8(127)
 2564 0bf8 8EBD      		out 78-0x20,r24
 2565 0bfa 00C0      		rjmp .L601
 2566               	.L724:
 2567               	.LBB23:
 2569               	.LM190:
 2570 0bfc 1EBC      		out 78-0x20,__zero_reg__
 2571 0bfe 00C0      		rjmp .L599
 2572               	.L601:
 2573               	.LBE23:
 2575               	.LM191:
 2576 0c00 0DB4      		in __tmp_reg__,77-0x20
 2577 0c02 07FE      		sbrs __tmp_reg__,7
 2578 0c04 00C0      		rjmp .L601
 2579 0c06 FE01      		movw r30,r28
 2580 0c08 3396      		adiw r30,3
 2581               	.LBB24:
 2582 0c0a 9E01      		movw r18,r28
 2583 0c0c 2B5F      		subi r18,lo8(-(5))
 2584 0c0e 3F4F      		sbci r19,hi8(-(5))
 2585               	.L603:
 2586 0c10 1EBC      		out 78-0x20,__zero_reg__
 2587               	.L604:
 2588 0c12 0DB4      		in __tmp_reg__,77-0x20
 2589 0c14 07FE      		sbrs __tmp_reg__,7
 2590 0c16 00C0      		rjmp .L604
 2591 0c18 8EB5      		in r24,78-0x20
 2592 0c1a 8193      		st Z+,r24
 2593 0c1c E217      		cp r30,r18
 2594 0c1e F307      		cpc r31,r19
 2595 0c20 01F4      		brne .L603
 2596               	.LBE24:
 2597 0c22 409A      		sbi 40-0x20,0
 2599               	.LM192:
 2600 0c24 E091 0000 		lds r30,rfSettings
 2601 0c28 F091 0000 		lds r31,(rfSettings)+1
 2602 0c2c 8B81      		ldd r24,Y+3
 2603 0c2e 8087      		std Z+8,r24
 2604 0c30 40E0      		ldi r20,lo8(0)
 2605 0c32 20E0      		ldi r18,lo8(0)
 2606 0c34 30E0      		ldi r19,hi8(0)
 2607 0c36 00C0      		rjmp .L607
 2608               	.L608:
 2610               	.LM193:
 2611 0c38 E091 0000 		lds r30,rfSettings
 2612 0c3c F091 0000 		lds r31,(rfSettings)+1
 2613 0c40 8581      		ldd r24,Z+5
 2614 0c42 9681      		ldd r25,Z+6
 2615 0c44 A80F      		add r26,r24
 2616 0c46 B91F      		adc r27,r25
 2617 0c48 8C91      		ld r24,X
 2618 0c4a 480F      		add r20,r24
 2619               	.L607:
 2620 0c4c 822F      		mov r24,r18
 2622               	.LM194:
 2623 0c4e E091 0000 		lds r30,rfSettings
 2624 0c52 F091 0000 		lds r31,(rfSettings)+1
 2625 0c56 2F5F      		subi r18,lo8(-(1))
 2626 0c58 3F4F      		sbci r19,hi8(-(1))
 2627 0c5a A82F      		mov r26,r24
 2628 0c5c BB27      		clr r27
 2629 0c5e 8381      		ldd r24,Z+3
 2630 0c60 9927      		clr r25
 2631 0c62 87FD      		sbrc r24,7
 2632 0c64 9095      		com r25
 2633 0c66 A817      		cp r26,r24
 2634 0c68 B907      		cpc r27,r25
 2635 0c6a 04F0      		brlt .L608
 2637               	.LM195:
 2638 0c6c 4517      		cp r20,r21
 2639 0c6e 01F0      		breq .L610
 2641               	.LM196:
 2642 0c70 4098      		cbi 40-0x20,0
 2643 0c72 8FE7      		ldi r24,lo8(127)
 2644 0c74 8EBD      		out 78-0x20,r24
 2645               	.L612:
 2646 0c76 0DB4      		in __tmp_reg__,77-0x20
 2647 0c78 07FE      		sbrs __tmp_reg__,7
 2648 0c7a 00C0      		rjmp .L612
 2649 0c7c 1EBC      		out 78-0x20,__zero_reg__
 2650               	.L614:
 2651 0c7e 0DB4      		in __tmp_reg__,77-0x20
 2652 0c80 07FE      		sbrs __tmp_reg__,7
 2653 0c82 00C0      		rjmp .L614
 2654 0c84 8EB5      		in r24,78-0x20
 2655 0c86 409A      		sbi 40-0x20,0
 2657               	.LM197:
 2658 0c88 4098      		cbi 40-0x20,0
 2659 0c8a 88E0      		ldi r24,lo8(8)
 2660 0c8c 8EBD      		out 78-0x20,r24
 2661               	.L616:
 2662 0c8e 0DB4      		in __tmp_reg__,77-0x20
 2663 0c90 07FE      		sbrs __tmp_reg__,7
 2664 0c92 00C0      		rjmp .L616
 2665 0c94 409A      		sbi 40-0x20,0
 2667               	.LM198:
 2668 0c96 4098      		cbi 40-0x20,0
 2669 0c98 88E0      		ldi r24,lo8(8)
 2670 0c9a 8EBD      		out 78-0x20,r24
 2671               	.L618:
 2672 0c9c 0DB4      		in __tmp_reg__,77-0x20
 2673 0c9e 07FE      		sbrs __tmp_reg__,7
 2674 0ca0 00C0      		rjmp .L618
 2675 0ca2 409A      		sbi 40-0x20,0
 2677               	.LM199:
 2678 0ca4 8091 0000 		lds r24,radio_sem
 2679 0ca8 9091 0000 		lds r25,(radio_sem)+1
 2680 0cac 0E94 0000 		call nrk_sem_post
 2681 0cb0 8CEF      		ldi r24,lo8(-4)
 2682 0cb2 9FEF      		ldi r25,hi8(-4)
 2683 0cb4 00C0      		rjmp .L507
 2684               	.L610:
 2686               	.LM200:
 2687 0cb6 8C81      		ldd r24,Y+4
 2688 0cb8 87FF      		sbrs r24,7
 2689 0cba 00C0      		rjmp .L620
 2691               	.LM201:
 2692 0cbc 8091 0000 		lds r24,rx_ready
 2693 0cc0 8F5F      		subi r24,lo8(-(1))
 2694 0cc2 8093 0000 		sts rx_ready,r24
 2696               	.LM202:
 2697 0cc6 8091 0000 		lds r24,radio_sem
 2698 0cca 9091 0000 		lds r25,(radio_sem)+1
 2699 0cce 0E94 0000 		call nrk_sem_post
 2700 0cd2 81E0      		ldi r24,lo8(1)
 2701 0cd4 90E0      		ldi r25,hi8(1)
 2702 0cd6 00C0      		rjmp .L507
 2703               	.L620:
 2705               	.LM203:
 2706 0cd8 4098      		cbi 40-0x20,0
 2707 0cda 8FE7      		ldi r24,lo8(127)
 2708 0cdc 8EBD      		out 78-0x20,r24
 2709               	.L622:
 2710 0cde 0DB4      		in __tmp_reg__,77-0x20
 2711 0ce0 07FE      		sbrs __tmp_reg__,7
 2712 0ce2 00C0      		rjmp .L622
 2713 0ce4 1EBC      		out 78-0x20,__zero_reg__
 2714               	.L624:
 2715 0ce6 0DB4      		in __tmp_reg__,77-0x20
 2716 0ce8 07FE      		sbrs __tmp_reg__,7
 2717 0cea 00C0      		rjmp .L624
 2718 0cec 8EB5      		in r24,78-0x20
 2719 0cee 409A      		sbi 40-0x20,0
 2721               	.LM204:
 2722 0cf0 4098      		cbi 40-0x20,0
 2723 0cf2 88E0      		ldi r24,lo8(8)
 2724 0cf4 8EBD      		out 78-0x20,r24
 2725               	.L626:
 2726 0cf6 0DB4      		in __tmp_reg__,77-0x20
 2727 0cf8 07FE      		sbrs __tmp_reg__,7
 2728 0cfa 00C0      		rjmp .L626
 2729 0cfc 409A      		sbi 40-0x20,0
 2731               	.LM205:
 2732 0cfe 4098      		cbi 40-0x20,0
 2733 0d00 88E0      		ldi r24,lo8(8)
 2734 0d02 8EBD      		out 78-0x20,r24
 2735               	.L628:
 2736 0d04 0DB4      		in __tmp_reg__,77-0x20
 2737 0d06 07FE      		sbrs __tmp_reg__,7
 2738 0d08 00C0      		rjmp .L628
 2739 0d0a 409A      		sbi 40-0x20,0
 2741               	.LM206:
 2742 0d0c 8091 0000 		lds r24,radio_sem
 2743 0d10 9091 0000 		lds r25,(radio_sem)+1
 2744 0d14 0E94 0000 		call nrk_sem_post
 2745 0d18 8BEF      		ldi r24,lo8(-5)
 2746 0d1a 9FEF      		ldi r25,hi8(-5)
 2747 0d1c 00C0      		rjmp .L507
 2748               	.L494:
 2749               	.LBE14:
 2751               	.LM207:
 2752 0d1e 8091 0000 		lds r24,radio_sem
 2753 0d22 9091 0000 		lds r25,(radio_sem)+1
 2754 0d26 0E94 0000 		call nrk_sem_post
 2755 0d2a 80E0      		ldi r24,lo8(0)
 2756 0d2c 90E0      		ldi r25,hi8(0)
 2757               	.L507:
 2758               	/* epilogue: frame size=4 */
 2759 0d2e 2496      		adiw r28,4
 2760 0d30 0FB6      		in __tmp_reg__,__SREG__
 2761 0d32 F894      		cli
 2762 0d34 DEBF      		out __SP_H__,r29
 2763 0d36 0FBE      		out __SREG__,__tmp_reg__
 2764 0d38 CDBF      		out __SP_L__,r28
 2765 0d3a DF91      		pop r29
 2766 0d3c CF91      		pop r28
 2767 0d3e 0895      		ret
 2768               	/* epilogue end (size=9) */
 2769               	/* function rf_polling_rx_packet size 600 (581) */
 2789               	.Lscope27:
 2791               		.stabd	78,0,0
 2793               	.global	rf_rx_off
 2795               	rf_rx_off:
 2796               		.stabd	46,0,0
 2798               	.LM208:
 2799               	.LFBB28:
 2800               	/* prologue: frame size=0 */
 2801               	/* prologue end (size=0) */
 2803               	.LM209:
 2804 0d40 8091 0000 		lds r24,radio_sem
 2805 0d44 9091 0000 		lds r25,(radio_sem)+1
 2806 0d48 0E94 0000 		call nrk_sem_pend
 2808               	.LM210:
 2809 0d4c 1092 0000 		sts rfSettings+8,__zero_reg__
 2811               	.LM211:
 2812 0d50 4098      		cbi 40-0x20,0
 2813 0d52 86E0      		ldi r24,lo8(6)
 2814 0d54 8EBD      		out 78-0x20,r24
 2815               	.L738:
 2817               	.LM212:
 2818 0d56 0DB4      		in __tmp_reg__,77-0x20
 2819 0d58 07FE      		sbrs __tmp_reg__,7
 2820 0d5a 00C0      		rjmp .L738
 2821 0d5c 409A      		sbi 40-0x20,0
 2823               	.LM213:
 2824 0d5e 1092 0000 		sts rx_ready,__zero_reg__
 2826               	.LM214:
 2827 0d62 8091 0000 		lds r24,radio_sem
 2828 0d66 9091 0000 		lds r25,(radio_sem)+1
 2829 0d6a 0E94 0000 		call nrk_sem_post
 2831               	.LM215:
 2832 0d6e EF98      		cbi 61-0x20,7
 2833               	/* epilogue: frame size=0 */
 2834 0d70 0895      		ret
 2835               	/* epilogue end (size=1) */
 2836               	/* function rf_rx_off size 25 (24) */
 2838               	.Lscope28:
 2840               		.stabd	78,0,0
 2842               	.global	rf_polling_rx_on
 2844               	rf_polling_rx_on:
 2845               		.stabd	46,0,0
 2847               	.LM216:
 2848               	.LFBB29:
 2849               	/* prologue: frame size=0 */
 2850               	/* prologue end (size=0) */
 2852               	.LM217:
 2853 0d72 8091 0000 		lds r24,radio_sem
 2854 0d76 9091 0000 		lds r25,(radio_sem)+1
 2855 0d7a 0E94 0000 		call nrk_sem_pend
 2857               	.LM218:
 2858 0d7e 81E0      		ldi r24,lo8(1)
 2859 0d80 8093 0000 		sts rfSettings+8,r24
 2861               	.LM219:
 2862 0d84 4098      		cbi 40-0x20,0
 2863 0d86 83E0      		ldi r24,lo8(3)
 2864 0d88 8EBD      		out 78-0x20,r24
 2865               	.L744:
 2867               	.LM220:
 2868 0d8a 0DB4      		in __tmp_reg__,77-0x20
 2869 0d8c 07FE      		sbrs __tmp_reg__,7
 2870 0d8e 00C0      		rjmp .L744
 2871 0d90 409A      		sbi 40-0x20,0
 2873               	.LM221:
 2874 0d92 4098      		cbi 40-0x20,0
 2875 0d94 88E0      		ldi r24,lo8(8)
 2876 0d96 8EBD      		out 78-0x20,r24
 2877               	.L746:
 2878 0d98 0DB4      		in __tmp_reg__,77-0x20
 2879 0d9a 07FE      		sbrs __tmp_reg__,7
 2880 0d9c 00C0      		rjmp .L746
 2881 0d9e 409A      		sbi 40-0x20,0
 2883               	.LM222:
 2884 0da0 1092 0000 		sts rx_ready,__zero_reg__
 2886               	.LM223:
 2887 0da4 8091 0000 		lds r24,radio_sem
 2888 0da8 9091 0000 		lds r25,(radio_sem)+1
 2889 0dac 0E94 0000 		call nrk_sem_post
 2890               	/* epilogue: frame size=0 */
 2891 0db0 0895      		ret
 2892               	/* epilogue end (size=1) */
 2893               	/* function rf_polling_rx_on size 32 (31) */
 2895               	.Lscope29:
 2897               		.stabd	78,0,0
 2899               	.global	rf_rx_on
 2901               	rf_rx_on:
 2902               		.stabd	46,0,0
 2904               	.LM224:
 2905               	.LFBB30:
 2906               	/* prologue: frame size=0 */
 2907               	/* prologue end (size=0) */
 2909               	.LM225:
 2910 0db2 8091 0000 		lds r24,radio_sem
 2911 0db6 9091 0000 		lds r25,(radio_sem)+1
 2912 0dba 0E94 0000 		call nrk_sem_pend
 2914               	.LM226:
 2915 0dbe 81E0      		ldi r24,lo8(1)
 2916 0dc0 8093 0000 		sts rfSettings+8,r24
 2918               	.LM227:
 2919 0dc4 4098      		cbi 40-0x20,0
 2920 0dc6 83E0      		ldi r24,lo8(3)
 2921 0dc8 8EBD      		out 78-0x20,r24
 2922               	.L754:
 2924               	.LM228:
 2925 0dca 0DB4      		in __tmp_reg__,77-0x20
 2926 0dcc 07FE      		sbrs __tmp_reg__,7
 2927 0dce 00C0      		rjmp .L754
 2928 0dd0 409A      		sbi 40-0x20,0
 2930               	.LM229:
 2931 0dd2 4098      		cbi 40-0x20,0
 2932 0dd4 88E0      		ldi r24,lo8(8)
 2933 0dd6 8EBD      		out 78-0x20,r24
 2934               	.L756:
 2935 0dd8 0DB4      		in __tmp_reg__,77-0x20
 2936 0dda 07FE      		sbrs __tmp_reg__,7
 2937 0ddc 00C0      		rjmp .L756
 2938 0dde 409A      		sbi 40-0x20,0
 2940               	.LM230:
 2941 0de0 1092 0000 		sts rx_ready,__zero_reg__
 2943               	.LM231:
 2944 0de4 8091 0000 		lds r24,radio_sem
 2945 0de8 9091 0000 		lds r25,(radio_sem)+1
 2946 0dec 0E94 0000 		call nrk_sem_post
 2948               	.LM232:
 2949 0df0 8091 6A00 		lds r24,106
 2950 0df4 806C      		ori r24,lo8(-64)
 2951 0df6 8093 6A00 		sts 106,r24
 2952 0dfa 80E8      		ldi r24,lo8(-128)
 2953 0dfc 8CBB      		out 60-0x20,r24
 2955               	.LM233:
 2956 0dfe EF9A      		sbi 61-0x20,7
 2957               	/* epilogue: frame size=0 */
 2958 0e00 0895      		ret
 2959               	/* epilogue end (size=1) */
 2960               	/* function rf_rx_on size 40 (39) */
 2962               	.Lscope30:
 2964               		.stabd	78,0,0
 2967               	.global	rf_tx_power
 2969               	rf_tx_power:
 2970               		.stabd	46,0,0
 2972               	.LM234:
 2973               	.LFBB31:
 2974               	/* prologue: frame size=0 */
 2975 0e02 1F93      		push r17
 2976               	/* prologue end (size=1) */
 2977 0e04 182F      		mov r17,r24
 2979               	.LM235:
 2980 0e06 8091 0000 		lds r24,radio_sem
 2981 0e0a 9091 0000 		lds r25,(radio_sem)+1
 2982 0e0e 0E94 0000 		call nrk_sem_pend
 2984               	.LM236:
 2985 0e12 212F      		mov r18,r17
 2986 0e14 3327      		clr r19
 2987 0e16 2F71      		andi r18,lo8(31)
 2988 0e18 3070      		andi r19,hi8(31)
 2989 0e1a 206E      		ori r18,lo8(-24352)
 2990 0e1c 306A      		ori r19,hi8(-24352)
 2992               	.LM237:
 2993 0e1e 4098      		cbi 40-0x20,0
 2994 0e20 85E1      		ldi r24,lo8(21)
 2995 0e22 8EBD      		out 78-0x20,r24
 2996               	.L764:
 2998               	.LM238:
 2999 0e24 0DB4      		in __tmp_reg__,77-0x20
 3000 0e26 07FE      		sbrs __tmp_reg__,7
 3001 0e28 00C0      		rjmp .L764
 3002 0e2a 832F      		mov r24,r19
 3003 0e2c 9927      		clr r25
 3004 0e2e 8EBD      		out 78-0x20,r24
 3005               	.L766:
 3006 0e30 0DB4      		in __tmp_reg__,77-0x20
 3007 0e32 07FE      		sbrs __tmp_reg__,7
 3008 0e34 00C0      		rjmp .L766
 3009 0e36 2EBD      		out 78-0x20,r18
 3010               	.L768:
 3011 0e38 0DB4      		in __tmp_reg__,77-0x20
 3012 0e3a 07FE      		sbrs __tmp_reg__,7
 3013 0e3c 00C0      		rjmp .L768
 3014 0e3e 409A      		sbi 40-0x20,0
 3016               	.LM239:
 3017 0e40 8091 0000 		lds r24,radio_sem
 3018 0e44 9091 0000 		lds r25,(radio_sem)+1
 3019 0e48 0E94 0000 		call nrk_sem_post
 3020               	/* epilogue: frame size=0 */
 3021 0e4c 1F91      		pop r17
 3022 0e4e 0895      		ret
 3023               	/* epilogue end (size=2) */
 3024               	/* function rf_tx_power size 39 (36) */
 3029               	.Lscope31:
 3031               		.stabd	78,0,0
 3034               	.global	rf_tx_packet
 3036               	rf_tx_packet:
 3037               		.stabd	46,0,0
 3039               	.LM240:
 3040               	.LFBB32:
 3041               	/* prologue: frame size=2 */
 3042 0e50 EF92      		push r14
 3043 0e52 FF92      		push r15
 3044 0e54 0F93      		push r16
 3045 0e56 1F93      		push r17
 3046 0e58 CF93      		push r28
 3047 0e5a DF93      		push r29
 3048 0e5c CDB7      		in r28,__SP_L__
 3049 0e5e DEB7      		in r29,__SP_H__
 3050 0e60 2297      		sbiw r28,2
 3051 0e62 0FB6      		in __tmp_reg__,__SREG__
 3052 0e64 F894      		cli
 3053 0e66 DEBF      		out __SP_H__,r29
 3054 0e68 0FBE      		out __SREG__,__tmp_reg__
 3055 0e6a CDBF      		out __SP_L__,r28
 3056               	/* prologue end (size=14) */
 3057 0e6c 8C01      		movw r16,r24
 3059               	.LM241:
 3060 0e6e 8091 0000 		lds r24,radio_sem
 3061 0e72 9091 0000 		lds r25,(radio_sem)+1
 3062 0e76 0E94 0000 		call nrk_sem_pend
 3064               	.LM242:
 3065 0e7a 5091 0000 		lds r21,security_enable
 3066 0e7e 5523      		tst r21
 3067 0e80 01F0      		breq .L778
 3069               	.LM243:
 3070 0e82 4098      		cbi 40-0x20,0
 3071 0e84 8DE0      		ldi r24,lo8(13)
 3072 0e86 8EBD      		out 78-0x20,r24
 3073               	.L780:
 3074 0e88 0DB4      		in __tmp_reg__,77-0x20
 3075 0e8a 07FE      		sbrs __tmp_reg__,7
 3076 0e8c 00C0      		rjmp .L780
 3077 0e8e 409A      		sbi 40-0x20,0
 3078               	.L778:
 3080               	.LM244:
 3081 0e90 F801      		movw r30,r16
 3082 0e92 4281      		ldd r20,Z+2
 3083 0e94 642F      		mov r22,r20
 3084 0e96 7727      		clr r23
 3085 0e98 67FD      		sbrc r22,7
 3086 0e9a 7095      		com r23
 3087 0e9c A0E0      		ldi r26,lo8(0)
 3088 0e9e 20E0      		ldi r18,lo8(0)
 3089 0ea0 30E0      		ldi r19,hi8(0)
 3090 0ea2 00C0      		rjmp .L782
 3091               	.L783:
 3093               	.LM245:
 3094 0ea4 F801      		movw r30,r16
 3095 0ea6 8381      		ldd r24,Z+3
 3096 0ea8 9481      		ldd r25,Z+4
 3097 0eaa E80E      		add r14,r24
 3098 0eac F91E      		adc r15,r25
 3099 0eae F701      		movw r30,r14
 3100 0eb0 8081      		ld r24,Z
 3101 0eb2 A80F      		add r26,r24
 3102               	.L782:
 3103 0eb4 822F      		mov r24,r18
 3104 0eb6 2F5F      		subi r18,lo8(-(1))
 3105 0eb8 3F4F      		sbci r19,hi8(-(1))
 3107               	.LM246:
 3108 0eba E82E      		mov r14,r24
 3109 0ebc FF24      		clr r15
 3110 0ebe E616      		cp r14,r22
 3111 0ec0 F706      		cpc r15,r23
 3112 0ec2 04F0      		brlt .L783
 3114               	.LM247:
 3115 0ec4 942F      		mov r25,r20
 3116 0ec6 945F      		subi r25,lo8(-(12))
 3118               	.LM248:
 3119 0ec8 5111      		cpse r21,__zero_reg__
 3120 0eca 9C5F      		subi r25,lo8(-(4))
 3121               	.L973:
 3123               	.LM249:
 3124 0ecc 6799      		sbic 44-0x20,7
 3125 0ece 00C0      		rjmp .L973
 3126 0ed0 4E99      		sbic 41-0x20,6
 3127 0ed2 00C0      		rjmp .L973
 3129               	.LM250:
 3130               	/* #APP */
 3131 0ed4 F894      		cli
 3132               		
 3134               	.LM251:
 3135               	/* #NOAPP */
 3136 0ed6 4098      		cbi 40-0x20,0
 3137 0ed8 89E0      		ldi r24,lo8(9)
 3138 0eda 8EBD      		out 78-0x20,r24
 3139               	.L789:
 3140 0edc 0DB4      		in __tmp_reg__,77-0x20
 3141 0ede 07FE      		sbrs __tmp_reg__,7
 3142 0ee0 00C0      		rjmp .L789
 3143 0ee2 409A      		sbi 40-0x20,0
 3145               	.LM252:
 3146 0ee4 4098      		cbi 40-0x20,0
 3147 0ee6 89E0      		ldi r24,lo8(9)
 3148 0ee8 8EBD      		out 78-0x20,r24
 3149               	.L791:
 3150 0eea 0DB4      		in __tmp_reg__,77-0x20
 3151 0eec 07FE      		sbrs __tmp_reg__,7
 3152 0eee 00C0      		rjmp .L791
 3153 0ef0 409A      		sbi 40-0x20,0
 3155               	.LM253:
 3156 0ef2 4098      		cbi 40-0x20,0
 3157 0ef4 8EE3      		ldi r24,lo8(62)
 3158 0ef6 8EBD      		out 78-0x20,r24
 3159               	.L793:
 3160 0ef8 0DB4      		in __tmp_reg__,77-0x20
 3161 0efa 07FC      		sbrc __tmp_reg__,7
 3162 0efc 00C0      		rjmp .L935
 3163 0efe 00C0      		rjmp .L793
 3164               	.L795:
 3165               	.LBB25:
 3166 0f00 0DB4      		in __tmp_reg__,77-0x20
 3167 0f02 07FC      		sbrc __tmp_reg__,7
 3168 0f04 00C0      		rjmp .L936
 3169 0f06 00C0      		rjmp .L795
 3170               	.L935:
 3171 0f08 9EBD      		out 78-0x20,r25
 3172 0f0a 00C0      		rjmp .L795
 3173               	.L797:
 3174               	.LBE25:
 3176               	.LM254:
 3177 0f0c 81E6      		ldi r24,lo8(-30623)
 3178 0f0e 98E8      		ldi r25,hi8(-30623)
 3179 0f10 9A83      		std Y+2,r25
 3180 0f12 8983      		std Y+1,r24
 3181               	.L798:
 3183               	.LM255:
 3184 0f14 5523      		tst r21
 3185 0f16 01F0      		breq .L799
 3186 0f18 8981      		ldd r24,Y+1
 3187 0f1a 9A81      		ldd r25,Y+2
 3188 0f1c 8860      		ori r24,lo8(8)
 3189 0f1e 9A83      		std Y+2,r25
 3190 0f20 8983      		std Y+1,r24
 3191               	.L799:
 3193               	.LM256:
 3194 0f22 4098      		cbi 40-0x20,0
 3195 0f24 8EE3      		ldi r24,lo8(62)
 3196 0f26 8EBD      		out 78-0x20,r24
 3197               	.L801:
 3198 0f28 0DB4      		in __tmp_reg__,77-0x20
 3199 0f2a 07FE      		sbrs __tmp_reg__,7
 3200 0f2c 00C0      		rjmp .L801
 3201 0f2e FE01      		movw r30,r28
 3202 0f30 3196      		adiw r30,1
 3203               	.LBB26:
 3204 0f32 9E01      		movw r18,r28
 3205 0f34 2D5F      		subi r18,lo8(-(3))
 3206 0f36 3F4F      		sbci r19,hi8(-(3))
 3207               	.L803:
 3208 0f38 8081      		ld r24,Z
 3209 0f3a 8EBD      		out 78-0x20,r24
 3210               	.L804:
 3211 0f3c 0DB4      		in __tmp_reg__,77-0x20
 3212 0f3e 07FE      		sbrs __tmp_reg__,7
 3213 0f40 00C0      		rjmp .L804
 3214 0f42 3196      		adiw r30,1
 3215 0f44 E217      		cp r30,r18
 3216 0f46 F307      		cpc r31,r19
 3217 0f48 01F4      		brne .L803
 3218               	.LBE26:
 3219 0f4a 409A      		sbi 40-0x20,0
 3221               	.LM257:
 3222 0f4c 4098      		cbi 40-0x20,0
 3223 0f4e 8EE3      		ldi r24,lo8(62)
 3224 0f50 8EBD      		out 78-0x20,r24
 3225               	.L807:
 3226 0f52 0DB4      		in __tmp_reg__,77-0x20
 3227 0f54 07FC      		sbrc __tmp_reg__,7
 3228 0f56 00C0      		rjmp .L940
 3229 0f58 00C0      		rjmp .L807
 3230               	.L809:
 3231               	.LBB27:
 3232 0f5a 0DB4      		in __tmp_reg__,77-0x20
 3233 0f5c 07FC      		sbrc __tmp_reg__,7
 3234 0f5e 00C0      		rjmp .L941
 3235 0f60 00C0      		rjmp .L809
 3236               	.L940:
 3237 0f62 8091 0000 		lds r24,rfSettings+2
 3238 0f66 8EBD      		out 78-0x20,r24
 3239 0f68 00C0      		rjmp .L809
 3240               	.L811:
 3241               	.LBE27:
 3243               	.LM258:
 3244 0f6a 0DB4      		in __tmp_reg__,77-0x20
 3245 0f6c 07FE      		sbrs __tmp_reg__,7
 3246 0f6e 00C0      		rjmp .L811
 3247 0f70 20E0      		ldi r18,lo8(0)
 3248 0f72 30E0      		ldi r19,hi8(0)
 3249               	.L813:
 3250               	.LBB28:
 3251 0f74 F901      		movw r30,r18
 3252 0f76 E050      		subi r30,lo8(-(rfSettings+4))
 3253 0f78 F040      		sbci r31,hi8(-(rfSettings+4))
 3254 0f7a 8081      		ld r24,Z
 3255 0f7c 8EBD      		out 78-0x20,r24
 3256               	.L814:
 3257 0f7e 0DB4      		in __tmp_reg__,77-0x20
 3258 0f80 07FE      		sbrs __tmp_reg__,7
 3259 0f82 00C0      		rjmp .L814
 3260 0f84 2F5F      		subi r18,lo8(-(1))
 3261 0f86 3F4F      		sbci r19,hi8(-(1))
 3262 0f88 2230      		cpi r18,2
 3263 0f8a 3105      		cpc r19,__zero_reg__
 3264 0f8c 01F4      		brne .L813
 3265               	.LBE28:
 3266 0f8e 409A      		sbi 40-0x20,0
 3268               	.LM259:
 3269 0f90 4098      		cbi 40-0x20,0
 3270 0f92 8EE3      		ldi r24,lo8(62)
 3271 0f94 8EBD      		out 78-0x20,r24
 3272               	.L817:
 3273 0f96 0DB4      		in __tmp_reg__,77-0x20
 3274 0f98 07FE      		sbrs __tmp_reg__,7
 3275 0f9a 00C0      		rjmp .L817
 3276 0f9c 20E0      		ldi r18,lo8(0)
 3277 0f9e 30E0      		ldi r19,hi8(0)
 3278               	.L819:
 3279               	.LBB29:
 3280 0fa0 F801      		movw r30,r16
 3281 0fa2 E20F      		add r30,r18
 3282 0fa4 F31F      		adc r31,r19
 3283 0fa6 8081      		ld r24,Z
 3284 0fa8 8EBD      		out 78-0x20,r24
 3285               	.L820:
 3286 0faa 0DB4      		in __tmp_reg__,77-0x20
 3287 0fac 07FE      		sbrs __tmp_reg__,7
 3288 0fae 00C0      		rjmp .L820
 3289 0fb0 2F5F      		subi r18,lo8(-(1))
 3290 0fb2 3F4F      		sbci r19,hi8(-(1))
 3291 0fb4 2230      		cpi r18,2
 3292 0fb6 3105      		cpc r19,__zero_reg__
 3293 0fb8 01F4      		brne .L819
 3294               	.LBE29:
 3295 0fba 409A      		sbi 40-0x20,0
 3297               	.LM260:
 3298 0fbc 4098      		cbi 40-0x20,0
 3299 0fbe 8EE3      		ldi r24,lo8(62)
 3300 0fc0 8EBD      		out 78-0x20,r24
 3301               	.L823:
 3302 0fc2 0DB4      		in __tmp_reg__,77-0x20
 3303 0fc4 07FE      		sbrs __tmp_reg__,7
 3304 0fc6 00C0      		rjmp .L823
 3305 0fc8 20E0      		ldi r18,lo8(0)
 3306 0fca 30E0      		ldi r19,hi8(0)
 3307               	.L825:
 3308               	.LBB30:
 3309 0fcc F901      		movw r30,r18
 3310 0fce E050      		subi r30,lo8(-(rfSettings+6))
 3311 0fd0 F040      		sbci r31,hi8(-(rfSettings+6))
 3312 0fd2 8081      		ld r24,Z
 3313 0fd4 8EBD      		out 78-0x20,r24
 3314               	.L826:
 3315 0fd6 0DB4      		in __tmp_reg__,77-0x20
 3316 0fd8 07FE      		sbrs __tmp_reg__,7
 3317 0fda 00C0      		rjmp .L826
 3318 0fdc 2F5F      		subi r18,lo8(-(1))
 3319 0fde 3F4F      		sbci r19,hi8(-(1))
 3320 0fe0 2230      		cpi r18,2
 3321 0fe2 3105      		cpc r19,__zero_reg__
 3322 0fe4 01F4      		brne .L825
 3323               	.LBE30:
 3324 0fe6 409A      		sbi 40-0x20,0
 3326               	.LM261:
 3327 0fe8 5523      		tst r21
 3328 0fea 01F0      		breq .L829
 3330               	.LM262:
 3331 0fec 4098      		cbi 40-0x20,0
 3332 0fee 8EE3      		ldi r24,lo8(62)
 3333 0ff0 8EBD      		out 78-0x20,r24
 3334               	.L831:
 3335 0ff2 0DB4      		in __tmp_reg__,77-0x20
 3336 0ff4 07FE      		sbrs __tmp_reg__,7
 3337 0ff6 00C0      		rjmp .L831
 3338 0ff8 E0E0      		ldi r30,lo8(tx_ctr)
 3339 0ffa F0E0      		ldi r31,hi8(tx_ctr)
 3340               	.L833:
 3341               	.LBB31:
 3342 0ffc 8081      		ld r24,Z
 3343 0ffe 8EBD      		out 78-0x20,r24
 3344               	.L834:
 3345 1000 0DB4      		in __tmp_reg__,77-0x20
 3346 1002 07FE      		sbrs __tmp_reg__,7
 3347 1004 00C0      		rjmp .L834
 3348 1006 3196      		adiw r30,1
 3349 1008 80E0      		ldi r24,hi8(tx_ctr+4)
 3350 100a E030      		cpi r30,lo8(tx_ctr+4)
 3351 100c F807      		cpc r31,r24
 3352 100e 01F4      		brne .L833
 3353               	.LBE31:
 3354 1010 409A      		sbi 40-0x20,0
 3355               	.L829:
 3357               	.LM263:
 3358 1012 4098      		cbi 40-0x20,0
 3359 1014 8EE3      		ldi r24,lo8(62)
 3360 1016 8EBD      		out 78-0x20,r24
 3361               	.L837:
 3362 1018 0DB4      		in __tmp_reg__,77-0x20
 3363 101a 07FE      		sbrs __tmp_reg__,7
 3364 101c 00C0      		rjmp .L837
 3365 101e 20E0      		ldi r18,lo8(0)
 3366 1020 30E0      		ldi r19,hi8(0)
 3367 1022 00C0      		rjmp .L839
 3368               	.L840:
 3369               	.LBB32:
 3370 1024 F801      		movw r30,r16
 3371 1026 8381      		ldd r24,Z+3
 3372 1028 9481      		ldd r25,Z+4
 3373 102a 480F      		add r20,r24
 3374 102c 591F      		adc r21,r25
 3375 102e FA01      		movw r30,r20
 3376 1030 8081      		ld r24,Z
 3377 1032 8EBD      		out 78-0x20,r24
 3378               	.L841:
 3379 1034 0DB4      		in __tmp_reg__,77-0x20
 3380 1036 07FE      		sbrs __tmp_reg__,7
 3381 1038 00C0      		rjmp .L841
 3382 103a 2F5F      		subi r18,lo8(-(1))
 3383 103c 3F4F      		sbci r19,hi8(-(1))
 3384               	.L839:
 3385 103e 422F      		mov r20,r18
 3386 1040 5527      		clr r21
 3387 1042 4617      		cp r20,r22
 3388 1044 5707      		cpc r21,r23
 3389 1046 04F0      		brlt .L840
 3390               	.LBE32:
 3391 1048 409A      		sbi 40-0x20,0
 3393               	.LM264:
 3394 104a 4098      		cbi 40-0x20,0
 3395 104c 8EE3      		ldi r24,lo8(62)
 3396 104e 8EBD      		out 78-0x20,r24
 3397               	.L844:
 3398 1050 0DB4      		in __tmp_reg__,77-0x20
 3399 1052 07FC      		sbrc __tmp_reg__,7
 3400 1054 00C0      		rjmp .L956
 3401 1056 00C0      		rjmp .L844
 3402               	.L846:
 3403               	.LBB33:
 3404 1058 0DB4      		in __tmp_reg__,77-0x20
 3405 105a 07FC      		sbrc __tmp_reg__,7
 3406 105c 00C0      		rjmp .L957
 3407 105e 00C0      		rjmp .L846
 3408               	.L956:
 3409 1060 AEBD      		out 78-0x20,r26
 3410 1062 00C0      		rjmp .L846
 3411               	.L848:
 3412               	.LBE33:
 3413               	.LBB34:
 3415               	.LM265:
 3416 1064 8091 0000 		lds r24,rfSettings+8
 3417 1068 8823      		tst r24
 3418 106a 01F4      		brne .L889
 3420               	.LM266:
 3421 106c 4098      		cbi 40-0x20,0
 3422 106e 83E0      		ldi r24,lo8(3)
 3423 1070 8EBD      		out 78-0x20,r24
 3424               	.L851:
 3425 1072 0DB4      		in __tmp_reg__,77-0x20
 3426 1074 07FE      		sbrs __tmp_reg__,7
 3427 1076 00C0      		rjmp .L851
 3428 1078 409A      		sbi 40-0x20,0
 3429               	.L889:
 3431               	.LM267:
 3432 107a 4098      		cbi 40-0x20,0
 3433 107c 1EBC      		out 78-0x20,__zero_reg__
 3434               	.L853:
 3435 107e 0DB4      		in __tmp_reg__,77-0x20
 3436 1080 07FE      		sbrs __tmp_reg__,7
 3437 1082 00C0      		rjmp .L853
 3438 1084 8EB5      		in r24,78-0x20
 3439 1086 409A      		sbi 40-0x20,0
 3441               	.LM268:
 3442 1088 81FF      		sbrs r24,1
 3443 108a 00C0      		rjmp .L889
 3444 108c 00E0      		ldi r16,lo8(0)
 3445               	.L856:
 3447               	.LM269:
 3448 108e 4098      		cbi 40-0x20,0
 3449 1090 85E0      		ldi r24,lo8(5)
 3450 1092 8EBD      		out 78-0x20,r24
 3451               	.L857:
 3452 1094 0DB4      		in __tmp_reg__,77-0x20
 3453 1096 07FE      		sbrs __tmp_reg__,7
 3454 1098 00C0      		rjmp .L857
 3455 109a 409A      		sbi 40-0x20,0
 3457               	.LM270:
 3458 109c 4098      		cbi 40-0x20,0
 3459 109e 1EBC      		out 78-0x20,__zero_reg__
 3460               	.L859:
 3461 10a0 0DB4      		in __tmp_reg__,77-0x20
 3462 10a2 07FE      		sbrs __tmp_reg__,7
 3463 10a4 00C0      		rjmp .L859
 3464 10a6 1EB5      		in r17,78-0x20
 3465 10a8 409A      		sbi 40-0x20,0
 3467               	.LM271:
 3468 10aa 0F5F      		subi r16,lo8(-(1))
 3470               	.LM272:
 3471 10ac 0536      		cpi r16,lo8(101)
 3472 10ae 01F4      		brne .L861
 3474               	.LM273:
 3475               	/* #APP */
 3476 10b0 7894      		sei
 3477               		
 3479               	.LM274:
 3480               	/* #NOAPP */
 3481 10b2 8091 0000 		lds r24,radio_sem
 3482 10b6 9091 0000 		lds r25,(radio_sem)+1
 3483 10ba 0E94 0000 		call nrk_sem_post
 3484 10be 80E0      		ldi r24,lo8(0)
 3485 10c0 90E0      		ldi r25,hi8(0)
 3486 10c2 00C0      		rjmp .L863
 3487               	.L861:
 3489               	.LM275:
 3490 10c4 84E6      		ldi r24,lo8(100)
 3491 10c6 90E0      		ldi r25,hi8(100)
 3492 10c8 0E94 0000 		call halWait
 3494               	.LM276:
 3495 10cc 13FD      		sbrc r17,3
 3496 10ce 00C0      		rjmp .L864
 3497 10d0 00C0      		rjmp .L856
 3498               	.L970:
 3499               	.LBE34:
 3501               	.LM277:
 3502 10d2 4098      		cbi 40-0x20,0
 3503 10d4 84E0      		ldi r24,lo8(4)
 3504 10d6 8EBD      		out 78-0x20,r24
 3505               	.L866:
 3506 10d8 0DB4      		in __tmp_reg__,77-0x20
 3507 10da 07FE      		sbrs __tmp_reg__,7
 3508 10dc 00C0      		rjmp .L866
 3509 10de 409A      		sbi 40-0x20,0
 3510               	.L864:
 3512               	.LM278:
 3513               	/* #APP */
 3514 10e0 7894      		sei
 3515               		
 3516               	/* #NOAPP */
 3517               	.L868:
 3519               	.LM279:
 3520 10e2 4E9B      		sbis 41-0x20,6
 3521 10e4 00C0      		rjmp .L868
 3522               	.L890:
 3524               	.LM280:
 3525 10e6 4E99      		sbic 41-0x20,6
 3526 10e8 00C0      		rjmp .L890
 3528               	.LM281:
 3529 10ea 8091 0000 		lds r24,auto_ack_enable
 3530 10ee 8823      		tst r24
 3531 10f0 01F0      		breq .L972
 3533               	.LM282:
 3534 10f2 84EA      		ldi r24,lo8(676)
 3535 10f4 92E0      		ldi r25,hi8(676)
 3536 10f6 0E94 0000 		call halWait
 3538               	.LM283:
 3539 10fa 319B      		sbis 38-0x20,1
 3540 10fc 00C0      		rjmp .L874
 3542               	.LM284:
 3543 10fe 4098      		cbi 40-0x20,0
 3544 1100 8FE7      		ldi r24,lo8(127)
 3545 1102 8EBD      		out 78-0x20,r24
 3546               	.L876:
 3547 1104 0DB4      		in __tmp_reg__,77-0x20
 3548 1106 07FE      		sbrs __tmp_reg__,7
 3549 1108 00C0      		rjmp .L876
 3550 110a 1EBC      		out 78-0x20,__zero_reg__
 3551               	.L878:
 3552 110c 0DB4      		in __tmp_reg__,77-0x20
 3553 110e 07FE      		sbrs __tmp_reg__,7
 3554 1110 00C0      		rjmp .L878
 3555 1112 8EB5      		in r24,78-0x20
 3556 1114 409A      		sbi 40-0x20,0
 3557               	.L972:
 3558 1116 11E0      		ldi r17,lo8(1)
 3559 1118 00C0      		rjmp .L873
 3560               	.L874:
 3562               	.LM285:
 3563 111a 4098      		cbi 40-0x20,0
 3564 111c 88E0      		ldi r24,lo8(8)
 3565 111e 8EBD      		out 78-0x20,r24
 3566               	.L880:
 3567 1120 0DB4      		in __tmp_reg__,77-0x20
 3568 1122 07FE      		sbrs __tmp_reg__,7
 3569 1124 00C0      		rjmp .L880
 3570 1126 409A      		sbi 40-0x20,0
 3572               	.LM286:
 3573 1128 4098      		cbi 40-0x20,0
 3574 112a 88E0      		ldi r24,lo8(8)
 3575 112c 8EBD      		out 78-0x20,r24
 3576               	.L882:
 3577 112e 0DB4      		in __tmp_reg__,77-0x20
 3578 1130 07FE      		sbrs __tmp_reg__,7
 3579 1132 00C0      		rjmp .L882
 3580 1134 409A      		sbi 40-0x20,0
 3581 1136 10E0      		ldi r17,lo8(0)
 3582               	.L873:
 3584               	.LM287:
 3585               	/* #APP */
 3586 1138 F894      		cli
 3587               		
 3589               	.LM288:
 3590               	/* #NOAPP */
 3591 113a 4098      		cbi 40-0x20,0
 3592 113c 86E0      		ldi r24,lo8(6)
 3593 113e 8EBD      		out 78-0x20,r24
 3594               	.L884:
 3595 1140 0DB4      		in __tmp_reg__,77-0x20
 3596 1142 07FE      		sbrs __tmp_reg__,7
 3597 1144 00C0      		rjmp .L884
 3598 1146 409A      		sbi 40-0x20,0
 3600               	.LM289:
 3601               	/* #APP */
 3602 1148 7894      		sei
 3603               		
 3605               	.LM290:
 3606               	/* #NOAPP */
 3607 114a 8091 0000 		lds r24,rfSettings+2
 3608 114e 8F5F      		subi r24,lo8(-(1))
 3609 1150 8093 0000 		sts rfSettings+2,r24
 3611               	.LM291:
 3612 1154 8091 0000 		lds r24,radio_sem
 3613 1158 9091 0000 		lds r25,(radio_sem)+1
 3614 115c 0E94 0000 		call nrk_sem_post
 3616               	.LM292:
 3617 1160 812F      		mov r24,r17
 3618 1162 9927      		clr r25
 3619 1164 00C0      		rjmp .L863
 3620               	.L936:
 3622               	.LM293:
 3623 1166 409A      		sbi 40-0x20,0
 3625               	.LM294:
 3626 1168 81E4      		ldi r24,lo8(-30655)
 3627 116a 98E8      		ldi r25,hi8(-30655)
 3628 116c 9A83      		std Y+2,r25
 3629 116e 8983      		std Y+1,r24
 3631               	.LM295:
 3632 1170 8091 0000 		lds r24,auto_ack_enable
 3633 1174 8823      		tst r24
 3634 1176 01F0      		breq .+2
 3635 1178 00C0      		rjmp .L797
 3636 117a 00C0      		rjmp .L798
 3637               	.L941:
 3639               	.LM296:
 3640 117c 409A      		sbi 40-0x20,0
 3642               	.LM297:
 3643 117e 4098      		cbi 40-0x20,0
 3644 1180 8EE3      		ldi r24,lo8(62)
 3645 1182 8EBD      		out 78-0x20,r24
 3646 1184 00C0      		rjmp .L811
 3647               	.L957:
 3649               	.LM298:
 3650 1186 409A      		sbi 40-0x20,0
 3652               	.LM299:
 3653 1188 F801      		movw r30,r16
 3654 118a 8581      		ldd r24,Z+5
 3655 118c 8823      		tst r24
 3656 118e 01F0      		breq .+2
 3657 1190 00C0      		rjmp .L848
 3658 1192 00C0      		rjmp .L970
 3659               	.L863:
 3660               	/* epilogue: frame size=2 */
 3661 1194 2296      		adiw r28,2
 3662 1196 0FB6      		in __tmp_reg__,__SREG__
 3663 1198 F894      		cli
 3664 119a DEBF      		out __SP_H__,r29
 3665 119c 0FBE      		out __SREG__,__tmp_reg__
 3666 119e CDBF      		out __SP_L__,r28
 3667 11a0 DF91      		pop r29
 3668 11a2 CF91      		pop r28
 3669 11a4 1F91      		pop r17
 3670 11a6 0F91      		pop r16
 3671 11a8 FF90      		pop r15
 3672 11aa EF90      		pop r14
 3673 11ac 0895      		ret
 3674               	/* epilogue end (size=13) */
 3675               	/* function rf_tx_packet size 447 (420) */
 3689               	.Lscope32:
 3691               		.stabd	78,0,0
 3696               	.global	rf_tx_tdma_packet
 3698               	rf_tx_tdma_packet:
 3699               		.stabd	46,0,0
 3701               	.LM300:
 3702               	.LFBB33:
 3703               	/* prologue: frame size=2 */
 3704 11ae BF92      		push r11
 3705 11b0 CF92      		push r12
 3706 11b2 DF92      		push r13
 3707 11b4 EF92      		push r14
 3708 11b6 FF92      		push r15
 3709 11b8 0F93      		push r16
 3710 11ba 1F93      		push r17
 3711 11bc CF93      		push r28
 3712 11be DF93      		push r29
 3713 11c0 CDB7      		in r28,__SP_L__
 3714 11c2 DEB7      		in r29,__SP_H__
 3715 11c4 2297      		sbiw r28,2
 3716 11c6 0FB6      		in __tmp_reg__,__SREG__
 3717 11c8 F894      		cli
 3718 11ca DEBF      		out __SP_H__,r29
 3719 11cc 0FBE      		out __SREG__,__tmp_reg__
 3720 11ce CDBF      		out __SP_L__,r28
 3721               	/* prologue end (size=17) */
 3722 11d0 8C01      		movw r16,r24
 3723 11d2 6B01      		movw r12,r22
 3724 11d4 7A01      		movw r14,r20
 3726               	.LM301:
 3727 11d6 8091 0000 		lds r24,radio_sem
 3728 11da 9091 0000 		lds r25,(radio_sem)+1
 3729 11de 0E94 0000 		call nrk_sem_pend
 3731               	.LM302:
 3732 11e2 0E94 0000 		call _nrk_os_timer_get
 3734               	.LM303:
 3735 11e6 4098      		cbi 40-0x20,0
 3736 11e8 88E0      		ldi r24,lo8(8)
 3737 11ea 8EBD      		out 78-0x20,r24
 3738               	.L975:
 3740               	.LM304:
 3741 11ec 0DB4      		in __tmp_reg__,77-0x20
 3742 11ee 07FE      		sbrs __tmp_reg__,7
 3743 11f0 00C0      		rjmp .L975
 3744 11f2 409A      		sbi 40-0x20,0
 3746               	.LM305:
 3747 11f4 4098      		cbi 40-0x20,0
 3748 11f6 88E0      		ldi r24,lo8(8)
 3749 11f8 8EBD      		out 78-0x20,r24
 3750               	.L977:
 3751 11fa 0DB4      		in __tmp_reg__,77-0x20
 3752 11fc 07FE      		sbrs __tmp_reg__,7
 3753 11fe 00C0      		rjmp .L977
 3754 1200 409A      		sbi 40-0x20,0
 3755               	.L1149:
 3757               	.LM306:
 3758 1202 6799      		sbic 44-0x20,7
 3759 1204 00C0      		rjmp .L1149
 3760 1206 4E99      		sbic 41-0x20,6
 3761 1208 00C0      		rjmp .L1149
 3763               	.LM307:
 3764               	/* #APP */
 3765 120a F894      		cli
 3766               		
 3768               	.LM308:
 3769               	/* #NOAPP */
 3770 120c 4098      		cbi 40-0x20,0
 3771 120e 89E0      		ldi r24,lo8(9)
 3772 1210 8EBD      		out 78-0x20,r24
 3773               	.L982:
 3774 1212 0DB4      		in __tmp_reg__,77-0x20
 3775 1214 07FE      		sbrs __tmp_reg__,7
 3776 1216 00C0      		rjmp .L982
 3777 1218 409A      		sbi 40-0x20,0
 3779               	.LM309:
 3780 121a 4098      		cbi 40-0x20,0
 3781 121c 89E0      		ldi r24,lo8(9)
 3782 121e 8EBD      		out 78-0x20,r24
 3783               	.L984:
 3784 1220 0DB4      		in __tmp_reg__,77-0x20
 3785 1222 07FE      		sbrs __tmp_reg__,7
 3786 1224 00C0      		rjmp .L984
 3787 1226 409A      		sbi 40-0x20,0
 3789               	.LM310:
 3790 1228 F801      		movw r30,r16
 3791 122a 6281      		ldd r22,Z+2
 3792 122c 462F      		mov r20,r22
 3793 122e 5527      		clr r21
 3794 1230 47FD      		sbrc r20,7
 3795 1232 5095      		com r21
 3796 1234 BB24      		clr r11
 3797 1236 20E0      		ldi r18,lo8(0)
 3798 1238 30E0      		ldi r19,hi8(0)
 3799 123a 00C0      		rjmp .L986
 3800               	.L987:
 3802               	.LM311:
 3803 123c F801      		movw r30,r16
 3804 123e 8381      		ldd r24,Z+3
 3805 1240 9481      		ldd r25,Z+4
 3806 1242 A80F      		add r26,r24
 3807 1244 B91F      		adc r27,r25
 3808 1246 8C91      		ld r24,X
 3809 1248 B80E      		add r11,r24
 3810               	.L986:
 3811 124a 822F      		mov r24,r18
 3812 124c 2F5F      		subi r18,lo8(-(1))
 3813 124e 3F4F      		sbci r19,hi8(-(1))
 3815               	.LM312:
 3816 1250 A82F      		mov r26,r24
 3817 1252 BB27      		clr r27
 3818 1254 A417      		cp r26,r20
 3819 1256 B507      		cpc r27,r21
 3820 1258 04F0      		brlt .L987
 3822               	.LM313:
 3823 125a 962F      		mov r25,r22
 3824 125c 945F      		subi r25,lo8(-(12))
 3826               	.LM314:
 3827 125e 4098      		cbi 40-0x20,0
 3828 1260 8EE3      		ldi r24,lo8(62)
 3829 1262 8EBD      		out 78-0x20,r24
 3830               	.L989:
 3831 1264 0DB4      		in __tmp_reg__,77-0x20
 3832 1266 07FC      		sbrc __tmp_reg__,7
 3833 1268 00C0      		rjmp .L1115
 3834 126a 00C0      		rjmp .L989
 3835               	.L991:
 3836               	.LBB35:
 3837 126c 0DB4      		in __tmp_reg__,77-0x20
 3838 126e 07FC      		sbrc __tmp_reg__,7
 3839 1270 00C0      		rjmp .L1116
 3840 1272 00C0      		rjmp .L991
 3841               	.L1115:
 3842 1274 9EBD      		out 78-0x20,r25
 3843 1276 00C0      		rjmp .L991
 3844               	.L993:
 3845 1278 81E6      		ldi r24,lo8(-30623)
 3846 127a 98E8      		ldi r25,hi8(-30623)
 3847               	.L994:
 3848               	.LBE35:
 3850               	.LM315:
 3851 127c 9A83      		std Y+2,r25
 3852 127e 8983      		std Y+1,r24
 3854               	.LM316:
 3855 1280 4098      		cbi 40-0x20,0
 3856 1282 8EE3      		ldi r24,lo8(62)
 3857 1284 8EBD      		out 78-0x20,r24
 3858               	.L995:
 3859 1286 0DB4      		in __tmp_reg__,77-0x20
 3860 1288 07FE      		sbrs __tmp_reg__,7
 3861 128a 00C0      		rjmp .L995
 3862 128c FE01      		movw r30,r28
 3863 128e 3196      		adiw r30,1
 3864               	.LBB36:
 3865 1290 9E01      		movw r18,r28
 3866 1292 2D5F      		subi r18,lo8(-(3))
 3867 1294 3F4F      		sbci r19,hi8(-(3))
 3868               	.L997:
 3869 1296 8081      		ld r24,Z
 3870 1298 8EBD      		out 78-0x20,r24
 3871               	.L998:
 3872 129a 0DB4      		in __tmp_reg__,77-0x20
 3873 129c 07FE      		sbrs __tmp_reg__,7
 3874 129e 00C0      		rjmp .L998
 3875 12a0 3196      		adiw r30,1
 3876 12a2 E217      		cp r30,r18
 3877 12a4 F307      		cpc r31,r19
 3878 12a6 01F4      		brne .L997
 3879               	.LBE36:
 3880 12a8 409A      		sbi 40-0x20,0
 3882               	.LM317:
 3883 12aa 4098      		cbi 40-0x20,0
 3884 12ac 8EE3      		ldi r24,lo8(62)
 3885 12ae 8EBD      		out 78-0x20,r24
 3886               	.L1001:
 3887 12b0 0DB4      		in __tmp_reg__,77-0x20
 3888 12b2 07FC      		sbrc __tmp_reg__,7
 3889 12b4 00C0      		rjmp .L1120
 3890 12b6 00C0      		rjmp .L1001
 3891               	.L1003:
 3892               	.LBB37:
 3893 12b8 0DB4      		in __tmp_reg__,77-0x20
 3894 12ba 07FC      		sbrc __tmp_reg__,7
 3895 12bc 00C0      		rjmp .L1121
 3896 12be 00C0      		rjmp .L1003
 3897               	.L1120:
 3898 12c0 8091 0000 		lds r24,rfSettings+2
 3899 12c4 8EBD      		out 78-0x20,r24
 3900 12c6 00C0      		rjmp .L1003
 3901               	.L1005:
 3902               	.LBE37:
 3904               	.LM318:
 3905 12c8 0DB4      		in __tmp_reg__,77-0x20
 3906 12ca 07FE      		sbrs __tmp_reg__,7
 3907 12cc 00C0      		rjmp .L1005
 3908 12ce 20E0      		ldi r18,lo8(0)
 3909 12d0 30E0      		ldi r19,hi8(0)
 3910               	.L1007:
 3911               	.LBB38:
 3912 12d2 F901      		movw r30,r18
 3913 12d4 E050      		subi r30,lo8(-(rfSettings+4))
 3914 12d6 F040      		sbci r31,hi8(-(rfSettings+4))
 3915 12d8 8081      		ld r24,Z
 3916 12da 8EBD      		out 78-0x20,r24
 3917               	.L1008:
 3918 12dc 0DB4      		in __tmp_reg__,77-0x20
 3919 12de 07FE      		sbrs __tmp_reg__,7
 3920 12e0 00C0      		rjmp .L1008
 3921 12e2 2F5F      		subi r18,lo8(-(1))
 3922 12e4 3F4F      		sbci r19,hi8(-(1))
 3923 12e6 2230      		cpi r18,2
 3924 12e8 3105      		cpc r19,__zero_reg__
 3925 12ea 01F4      		brne .L1007
 3926               	.LBE38:
 3927 12ec 409A      		sbi 40-0x20,0
 3929               	.LM319:
 3930 12ee 4098      		cbi 40-0x20,0
 3931 12f0 8EE3      		ldi r24,lo8(62)
 3932 12f2 8EBD      		out 78-0x20,r24
 3933               	.L1011:
 3934 12f4 0DB4      		in __tmp_reg__,77-0x20
 3935 12f6 07FE      		sbrs __tmp_reg__,7
 3936 12f8 00C0      		rjmp .L1011
 3937 12fa 20E0      		ldi r18,lo8(0)
 3938 12fc 30E0      		ldi r19,hi8(0)
 3939               	.L1013:
 3940               	.LBB39:
 3941 12fe F801      		movw r30,r16
 3942 1300 E20F      		add r30,r18
 3943 1302 F31F      		adc r31,r19
 3944 1304 8081      		ld r24,Z
 3945 1306 8EBD      		out 78-0x20,r24
 3946               	.L1014:
 3947 1308 0DB4      		in __tmp_reg__,77-0x20
 3948 130a 07FE      		sbrs __tmp_reg__,7
 3949 130c 00C0      		rjmp .L1014
 3950 130e 2F5F      		subi r18,lo8(-(1))
 3951 1310 3F4F      		sbci r19,hi8(-(1))
 3952 1312 2230      		cpi r18,2
 3953 1314 3105      		cpc r19,__zero_reg__
 3954 1316 01F4      		brne .L1013
 3955               	.LBE39:
 3956 1318 409A      		sbi 40-0x20,0
 3958               	.LM320:
 3959 131a 4098      		cbi 40-0x20,0
 3960 131c 8EE3      		ldi r24,lo8(62)
 3961 131e 8EBD      		out 78-0x20,r24
 3962               	.L1017:
 3963 1320 0DB4      		in __tmp_reg__,77-0x20
 3964 1322 07FE      		sbrs __tmp_reg__,7
 3965 1324 00C0      		rjmp .L1017
 3966 1326 20E0      		ldi r18,lo8(0)
 3967 1328 30E0      		ldi r19,hi8(0)
 3968               	.L1019:
 3969               	.LBB40:
 3970 132a F901      		movw r30,r18
 3971 132c E050      		subi r30,lo8(-(rfSettings+6))
 3972 132e F040      		sbci r31,hi8(-(rfSettings+6))
 3973 1330 8081      		ld r24,Z
 3974 1332 8EBD      		out 78-0x20,r24
 3975               	.L1020:
 3976 1334 0DB4      		in __tmp_reg__,77-0x20
 3977 1336 07FE      		sbrs __tmp_reg__,7
 3978 1338 00C0      		rjmp .L1020
 3979 133a 2F5F      		subi r18,lo8(-(1))
 3980 133c 3F4F      		sbci r19,hi8(-(1))
 3981 133e 2230      		cpi r18,2
 3982 1340 3105      		cpc r19,__zero_reg__
 3983 1342 01F4      		brne .L1019
 3984               	.LBE40:
 3985 1344 409A      		sbi 40-0x20,0
 3987               	.LM321:
 3988 1346 B701      		movw r22,r14
 3989 1348 C601      		movw r24,r12
 3990 134a 0E94 0000 		call nrk_high_speed_timer_wait
 3992               	.LM322:
 3993 134e F801      		movw r30,r16
 3994 1350 8581      		ldd r24,Z+5
 3995 1352 8823      		tst r24
 3996 1354 01F0      		breq .L1023
 3997               	.LBB41:
 3999               	.LM323:
 4000 1356 8091 0000 		lds r24,rfSettings+8
 4001 135a 8823      		tst r24
 4002 135c 01F4      		brne .L1071
 4004               	.LM324:
 4005 135e 4098      		cbi 40-0x20,0
 4006 1360 83E0      		ldi r24,lo8(3)
 4007 1362 8EBD      		out 78-0x20,r24
 4008               	.L1027:
 4009 1364 0DB4      		in __tmp_reg__,77-0x20
 4010 1366 07FE      		sbrs __tmp_reg__,7
 4011 1368 00C0      		rjmp .L1027
 4012 136a 409A      		sbi 40-0x20,0
 4013               	.L1071:
 4015               	.LM325:
 4016 136c 4098      		cbi 40-0x20,0
 4017 136e 1EBC      		out 78-0x20,__zero_reg__
 4018               	.L1029:
 4019 1370 0DB4      		in __tmp_reg__,77-0x20
 4020 1372 07FE      		sbrs __tmp_reg__,7
 4021 1374 00C0      		rjmp .L1029
 4022 1376 8EB5      		in r24,78-0x20
 4023 1378 409A      		sbi 40-0x20,0
 4025               	.LM326:
 4026 137a 81FF      		sbrs r24,1
 4027 137c 00C0      		rjmp .L1071
 4028 137e EE24      		clr r14
 4029               	.L1032:
 4031               	.LM327:
 4032 1380 4098      		cbi 40-0x20,0
 4033 1382 85E0      		ldi r24,lo8(5)
 4034 1384 8EBD      		out 78-0x20,r24
 4035               	.L1033:
 4036 1386 0DB4      		in __tmp_reg__,77-0x20
 4037 1388 07FE      		sbrs __tmp_reg__,7
 4038 138a 00C0      		rjmp .L1033
 4039 138c 409A      		sbi 40-0x20,0
 4041               	.LM328:
 4042 138e 4098      		cbi 40-0x20,0
 4043 1390 1EBC      		out 78-0x20,__zero_reg__
 4044               	.L1035:
 4045 1392 0DB4      		in __tmp_reg__,77-0x20
 4046 1394 07FE      		sbrs __tmp_reg__,7
 4047 1396 00C0      		rjmp .L1035
 4048 1398 FEB4      		in r15,78-0x20
 4049 139a 409A      		sbi 40-0x20,0
 4051               	.LM329:
 4052 139c E394      		inc r14
 4054               	.LM330:
 4055 139e F5E6      		ldi r31,lo8(101)
 4056 13a0 EF16      		cp r14,r31
 4057 13a2 01F4      		brne .L1037
 4059               	.LM331:
 4060               	/* #APP */
 4061 13a4 7894      		sei
 4062               		
 4064               	.LM332:
 4065               	/* #NOAPP */
 4066 13a6 8091 0000 		lds r24,radio_sem
 4067 13aa 9091 0000 		lds r25,(radio_sem)+1
 4068 13ae 0E94 0000 		call nrk_sem_post
 4069 13b2 80E0      		ldi r24,lo8(0)
 4070 13b4 90E0      		ldi r25,hi8(0)
 4071 13b6 00C0      		rjmp .L1039
 4072               	.L1037:
 4074               	.LM333:
 4075 13b8 84E6      		ldi r24,lo8(100)
 4076 13ba 90E0      		ldi r25,hi8(100)
 4077 13bc 0E94 0000 		call halWait
 4079               	.LM334:
 4080 13c0 F3FC      		sbrc r15,3
 4081 13c2 00C0      		rjmp .L1040
 4082 13c4 00C0      		rjmp .L1032
 4083               	.L1023:
 4084               	.LBE41:
 4086               	.LM335:
 4087 13c6 4098      		cbi 40-0x20,0
 4088 13c8 84E0      		ldi r24,lo8(4)
 4089 13ca 8EBD      		out 78-0x20,r24
 4090               	.L1041:
 4091 13cc 0DB4      		in __tmp_reg__,77-0x20
 4092 13ce 07FE      		sbrs __tmp_reg__,7
 4093 13d0 00C0      		rjmp .L1041
 4094 13d2 409A      		sbi 40-0x20,0
 4095               	.L1040:
 4097               	.LM336:
 4098 13d4 4098      		cbi 40-0x20,0
 4099 13d6 8EE3      		ldi r24,lo8(62)
 4100 13d8 8EBD      		out 78-0x20,r24
 4101               	.L1043:
 4102 13da 0DB4      		in __tmp_reg__,77-0x20
 4103 13dc 07FE      		sbrs __tmp_reg__,7
 4104 13de 00C0      		rjmp .L1043
 4105               	.LBB42:
 4106 13e0 F801      		movw r30,r16
 4107 13e2 8281      		ldd r24,Z+2
 4108 13e4 482F      		mov r20,r24
 4109 13e6 5527      		clr r21
 4110 13e8 47FD      		sbrc r20,7
 4111 13ea 5095      		com r21
 4112 13ec 20E0      		ldi r18,lo8(0)
 4113 13ee 30E0      		ldi r19,hi8(0)
 4114 13f0 00C0      		rjmp .L1045
 4115               	.L1046:
 4116 13f2 F801      		movw r30,r16
 4117 13f4 8381      		ldd r24,Z+3
 4118 13f6 9481      		ldd r25,Z+4
 4119 13f8 A80F      		add r26,r24
 4120 13fa B91F      		adc r27,r25
 4121 13fc 8C91      		ld r24,X
 4122 13fe 8EBD      		out 78-0x20,r24
 4123               	.L1047:
 4124 1400 0DB4      		in __tmp_reg__,77-0x20
 4125 1402 07FE      		sbrs __tmp_reg__,7
 4126 1404 00C0      		rjmp .L1047
 4127 1406 2F5F      		subi r18,lo8(-(1))
 4128 1408 3F4F      		sbci r19,hi8(-(1))
 4129               	.L1045:
 4130 140a A22F      		mov r26,r18
 4131 140c BB27      		clr r27
 4132 140e A417      		cp r26,r20
 4133 1410 B507      		cpc r27,r21
 4134 1412 04F0      		brlt .L1046
 4135               	.LBE42:
 4136 1414 409A      		sbi 40-0x20,0
 4138               	.LM337:
 4139 1416 4098      		cbi 40-0x20,0
 4140 1418 8EE3      		ldi r24,lo8(62)
 4141 141a 8EBD      		out 78-0x20,r24
 4142               	.L1050:
 4143 141c 0DB4      		in __tmp_reg__,77-0x20
 4144 141e 07FC      		sbrc __tmp_reg__,7
 4145 1420 00C0      		rjmp .L1139
 4146 1422 00C0      		rjmp .L1050
 4147               	.L1052:
 4148               	.LBB43:
 4149 1424 0DB4      		in __tmp_reg__,77-0x20
 4150 1426 07FC      		sbrc __tmp_reg__,7
 4151 1428 00C0      		rjmp .L1140
 4152 142a 00C0      		rjmp .L1052
 4153               	.L1139:
 4154 142c BEBC      		out 78-0x20,r11
 4155 142e 00C0      		rjmp .L1052
 4156               	.L1054:
 4157               	.LBE43:
 4159               	.LM338:
 4160 1430 4E9B      		sbis 41-0x20,6
 4161 1432 00C0      		rjmp .L1054
 4163               	.LM339:
 4164               	/* #APP */
 4165 1434 F894      		cli
 4166               		
 4167               	/* #NOAPP */
 4168               	.L1056:
 4170               	.LM340:
 4171 1436 4E99      		sbic 41-0x20,6
 4172 1438 00C0      		rjmp .L1056
 4174               	.LM341:
 4175 143a 4098      		cbi 40-0x20,0
 4176 143c 88E0      		ldi r24,lo8(8)
 4177 143e 8EBD      		out 78-0x20,r24
 4178               	.L1058:
 4179 1440 0DB4      		in __tmp_reg__,77-0x20
 4180 1442 07FE      		sbrs __tmp_reg__,7
 4181 1444 00C0      		rjmp .L1058
 4182 1446 409A      		sbi 40-0x20,0
 4184               	.LM342:
 4185 1448 4098      		cbi 40-0x20,0
 4186 144a 88E0      		ldi r24,lo8(8)
 4187 144c 8EBD      		out 78-0x20,r24
 4188               	.L1060:
 4189 144e 0DB4      		in __tmp_reg__,77-0x20
 4190 1450 07FE      		sbrs __tmp_reg__,7
 4191 1452 00C0      		rjmp .L1060
 4192 1454 409A      		sbi 40-0x20,0
 4194               	.LM343:
 4195 1456 4098      		cbi 40-0x20,0
 4196 1458 89E0      		ldi r24,lo8(9)
 4197 145a 8EBD      		out 78-0x20,r24
 4198               	.L1062:
 4199 145c 0DB4      		in __tmp_reg__,77-0x20
 4200 145e 07FE      		sbrs __tmp_reg__,7
 4201 1460 00C0      		rjmp .L1062
 4202 1462 409A      		sbi 40-0x20,0
 4204               	.LM344:
 4205 1464 4098      		cbi 40-0x20,0
 4206 1466 89E0      		ldi r24,lo8(9)
 4207 1468 8EBD      		out 78-0x20,r24
 4208               	.L1064:
 4209 146a 0DB4      		in __tmp_reg__,77-0x20
 4210 146c 07FE      		sbrs __tmp_reg__,7
 4211 146e 00C0      		rjmp .L1064
 4212 1470 409A      		sbi 40-0x20,0
 4214               	.LM345:
 4215 1472 4098      		cbi 40-0x20,0
 4216 1474 86E0      		ldi r24,lo8(6)
 4217 1476 8EBD      		out 78-0x20,r24
 4218               	.L1066:
 4219 1478 0DB4      		in __tmp_reg__,77-0x20
 4220 147a 07FE      		sbrs __tmp_reg__,7
 4221 147c 00C0      		rjmp .L1066
 4222 147e 409A      		sbi 40-0x20,0
 4224               	.LM346:
 4225               	/* #APP */
 4226 1480 7894      		sei
 4227               		
 4229               	.LM347:
 4230               	/* #NOAPP */
 4231 1482 8091 0000 		lds r24,rfSettings+2
 4232 1486 8F5F      		subi r24,lo8(-(1))
 4233 1488 8093 0000 		sts rfSettings+2,r24
 4235               	.LM348:
 4236 148c 8091 0000 		lds r24,radio_sem
 4237 1490 9091 0000 		lds r25,(radio_sem)+1
 4238 1494 0E94 0000 		call nrk_sem_post
 4239 1498 81E0      		ldi r24,lo8(1)
 4240 149a 90E0      		ldi r25,hi8(1)
 4241 149c 00C0      		rjmp .L1039
 4242               	.L1116:
 4244               	.LM349:
 4245 149e 409A      		sbi 40-0x20,0
 4247               	.LM350:
 4248 14a0 F801      		movw r30,r16
 4249 14a2 8681      		ldd r24,Z+6
 4250 14a4 8823      		tst r24
 4251 14a6 01F0      		breq .+2
 4252 14a8 00C0      		rjmp .L993
 4253 14aa 81E4      		ldi r24,lo8(-30655)
 4254 14ac 98E8      		ldi r25,hi8(-30655)
 4255 14ae 00C0      		rjmp .L994
 4256               	.L1121:
 4258               	.LM351:
 4259 14b0 409A      		sbi 40-0x20,0
 4261               	.LM352:
 4262 14b2 4098      		cbi 40-0x20,0
 4263 14b4 8EE3      		ldi r24,lo8(62)
 4264 14b6 8EBD      		out 78-0x20,r24
 4265 14b8 00C0      		rjmp .L1005
 4266               	.L1140:
 4268               	.LM353:
 4269 14ba 409A      		sbi 40-0x20,0
 4270 14bc 00C0      		rjmp .L1054
 4271               	.L1039:
 4272               	/* epilogue: frame size=2 */
 4273 14be 2296      		adiw r28,2
 4274 14c0 0FB6      		in __tmp_reg__,__SREG__
 4275 14c2 F894      		cli
 4276 14c4 DEBF      		out __SP_H__,r29
 4277 14c6 0FBE      		out __SREG__,__tmp_reg__
 4278 14c8 CDBF      		out __SP_L__,r28
 4279 14ca DF91      		pop r29
 4280 14cc CF91      		pop r28
 4281 14ce 1F91      		pop r17
 4282 14d0 0F91      		pop r16
 4283 14d2 FF90      		pop r15
 4284 14d4 EF90      		pop r14
 4285 14d6 DF90      		pop r13
 4286 14d8 CF90      		pop r12
 4287 14da BF90      		pop r11
 4288 14dc 0895      		ret
 4289               	/* epilogue end (size=16) */
 4290               	/* function rf_tx_tdma_packet size 420 (387) */
 4301               	.Lscope33:
 4303               		.stabd	78,0,0
 4306               	.global	rf_addr_decode_set_my_mac
 4308               	rf_addr_decode_set_my_mac:
 4309               		.stabd	46,0,0
 4311               	.LM354:
 4312               	.LFBB34:
 4313               	/* prologue: frame size=2 */
 4314 14de CF93      		push r28
 4315 14e0 DF93      		push r29
 4316 14e2 CDB7      		in r28,__SP_L__
 4317 14e4 DEB7      		in r29,__SP_H__
 4318 14e6 2297      		sbiw r28,2
 4319 14e8 0FB6      		in __tmp_reg__,__SREG__
 4320 14ea F894      		cli
 4321 14ec DEBF      		out __SP_H__,r29
 4322 14ee 0FBE      		out __SREG__,__tmp_reg__
 4323 14f0 CDBF      		out __SP_L__,r28
 4324               	/* prologue end (size=10) */
 4325 14f2 9A83      		std Y+2,r25
 4326 14f4 8983      		std Y+1,r24
 4328               	.LM355:
 4329 14f6 9093 0000 		sts (rfSettings+6)+1,r25
 4330 14fa 8093 0000 		sts rfSettings+6,r24
 4332               	.LM356:
 4333 14fe 84EF      		ldi r24,lo8(500)
 4334 1500 91E0      		ldi r25,hi8(500)
 4335 1502 0E94 0000 		call nrk_spin_wait_us
 4337               	.LM357:
 4338 1506 4098      		cbi 40-0x20,0
 4339 1508 8AEE      		ldi r24,lo8(-22)
 4340 150a 8EBD      		out 78-0x20,r24
 4341               	.L1151:
 4343               	.LM358:
 4344 150c 0DB4      		in __tmp_reg__,77-0x20
 4345 150e 07FE      		sbrs __tmp_reg__,7
 4346 1510 00C0      		rjmp .L1151
 4347 1512 80E8      		ldi r24,lo8(-128)
 4348 1514 8EBD      		out 78-0x20,r24
 4349               	.L1153:
 4350 1516 0DB4      		in __tmp_reg__,77-0x20
 4351 1518 07FE      		sbrs __tmp_reg__,7
 4352 151a 00C0      		rjmp .L1153
 4353 151c FE01      		movw r30,r28
 4354 151e 3196      		adiw r30,1
 4355 1520 9E01      		movw r18,r28
 4356 1522 2D5F      		subi r18,lo8(-(3))
 4357 1524 3F4F      		sbci r19,hi8(-(3))
 4358               	.L1155:
 4359 1526 8081      		ld r24,Z
 4360 1528 8EBD      		out 78-0x20,r24
 4361               	.L1156:
 4362 152a 0DB4      		in __tmp_reg__,77-0x20
 4363 152c 07FE      		sbrs __tmp_reg__,7
 4364 152e 00C0      		rjmp .L1156
 4365 1530 3196      		adiw r30,1
 4366 1532 E217      		cp r30,r18
 4367 1534 F307      		cpc r31,r19
 4368 1536 01F4      		brne .L1155
 4369 1538 409A      		sbi 40-0x20,0
 4371               	.LM359:
 4372 153a 84EF      		ldi r24,lo8(500)
 4373 153c 91E0      		ldi r25,hi8(500)
 4374 153e 0E94 0000 		call nrk_spin_wait_us
 4375               	/* epilogue: frame size=2 */
 4376 1542 2296      		adiw r28,2
 4377 1544 0FB6      		in __tmp_reg__,__SREG__
 4378 1546 F894      		cli
 4379 1548 DEBF      		out __SP_H__,r29
 4380 154a 0FBE      		out __SREG__,__tmp_reg__
 4381 154c CDBF      		out __SP_L__,r28
 4382 154e DF91      		pop r29
 4383 1550 CF91      		pop r28
 4384 1552 0895      		ret
 4385               	/* epilogue end (size=9) */
 4386               	/* function rf_addr_decode_set_my_mac size 59 (40) */
 4388               	.Lscope34:
 4390               		.stabd	78,0,0
 4393               	.global	rf_security_set_key
 4395               	rf_security_set_key:
 4396               		.stabd	46,0,0
 4398               	.LM360:
 4399               	.LFBB35:
 4400               	/* prologue: frame size=2 */
 4401 1554 6F92      		push r6
 4402 1556 7F92      		push r7
 4403 1558 8F92      		push r8
 4404 155a 9F92      		push r9
 4405 155c AF92      		push r10
 4406 155e BF92      		push r11
 4407 1560 CF92      		push r12
 4408 1562 DF92      		push r13
 4409 1564 EF92      		push r14
 4410 1566 FF92      		push r15
 4411 1568 0F93      		push r16
 4412 156a 1F93      		push r17
 4413 156c CF93      		push r28
 4414 156e DF93      		push r29
 4415 1570 CDB7      		in r28,__SP_L__
 4416 1572 DEB7      		in r29,__SP_H__
 4417 1574 2297      		sbiw r28,2
 4418 1576 0FB6      		in __tmp_reg__,__SREG__
 4419 1578 F894      		cli
 4420 157a DEBF      		out __SP_H__,r29
 4421 157c 0FBE      		out __SREG__,__tmp_reg__
 4422 157e CDBF      		out __SP_L__,r28
 4423               	/* prologue end (size=22) */
 4424 1580 8C01      		movw r16,r24
 4426               	.LM361:
 4427 1582 84E6      		ldi r24,lo8(100)
 4428 1584 90E0      		ldi r25,hi8(100)
 4429 1586 0E94 0000 		call nrk_spin_wait_us
 4430 158a 7801      		movw r14,r16
 4431 158c C12C      		mov r12,__zero_reg__
 4432 158e 01E0      		ldi r16,hi8(256)
 4433 1590 D02E      		mov r13,r16
 4435               	.LM362:
 4436 1592 3E01      		movw r6,r28
 4437 1594 0894      		sec
 4438 1596 611C      		adc r6,__zero_reg__
 4439 1598 711C      		adc r7,__zero_reg__
 4440 159a 13E0      		ldi r17,lo8(3)
 4441 159c 812E      		mov r8,r17
 4442 159e 912C      		mov r9,__zero_reg__
 4443 15a0 8C0E      		add r8,r28
 4444 15a2 9D1E      		adc r9,r29
 4445               	.L1169:
 4447               	.LM363:
 4448 15a4 F701      		movw r30,r14
 4449 15a6 8081      		ld r24,Z
 4450 15a8 2181      		ldd r18,Z+1
 4451 15aa 3327      		clr r19
 4452 15ac 9927      		clr r25
 4453 15ae 982F      		mov r25,r24
 4454 15b0 8827      		clr r24
 4455 15b2 282B      		or r18,r24
 4456 15b4 392B      		or r19,r25
 4457 15b6 3A83      		std Y+2,r19
 4458 15b8 2983      		std Y+1,r18
 4460               	.LM364:
 4461 15ba 84E6      		ldi r24,lo8(100)
 4462 15bc 90E0      		ldi r25,hi8(100)
 4463 15be 0E94 0000 		call nrk_spin_wait_us
 4465               	.LM365:
 4466 15c2 4098      		cbi 40-0x20,0
 4467 15c4 8C2D      		mov r24,r12
 4468 15c6 8068      		ori r24,lo8(-128)
 4469 15c8 8EBD      		out 78-0x20,r24
 4470               	.L1170:
 4471 15ca 0DB4      		in __tmp_reg__,77-0x20
 4472 15cc 07FE      		sbrs __tmp_reg__,7
 4473 15ce 00C0      		rjmp .L1170
 4474 15d0 C601      		movw r24,r12
 4475 15d2 9595      		asr r25
 4476 15d4 8795      		ror r24
 4477 15d6 807C      		andi r24,lo8(-64)
 4478 15d8 8EBD      		out 78-0x20,r24
 4479               	.L1172:
 4480 15da 0DB4      		in __tmp_reg__,77-0x20
 4481 15dc 07FE      		sbrs __tmp_reg__,7
 4482 15de 00C0      		rjmp .L1172
 4483 15e0 8301      		movw r16,r6
 4484 15e2 5301      		movw r10,r6
 4485               	.L1174:
 4486 15e4 F501      		movw r30,r10
 4487 15e6 8081      		ld r24,Z
 4488 15e8 8EBD      		out 78-0x20,r24
 4489               	.L1175:
 4490 15ea 0DB4      		in __tmp_reg__,77-0x20
 4491 15ec 07FE      		sbrs __tmp_reg__,7
 4492 15ee 00C0      		rjmp .L1175
 4493 15f0 0894      		sec
 4494 15f2 A11C      		adc r10,__zero_reg__
 4495 15f4 B11C      		adc r11,__zero_reg__
 4496 15f6 A814      		cp r10,r8
 4497 15f8 B904      		cpc r11,r9
 4498 15fa 01F4      		brne .L1174
 4499 15fc 409A      		sbi 40-0x20,0
 4500 15fe 0894      		sec
 4501 1600 E11C      		adc r14,__zero_reg__
 4502 1602 F11C      		adc r15,__zero_reg__
 4503 1604 82E0      		ldi r24,lo8(2)
 4504 1606 90E0      		ldi r25,hi8(2)
 4505 1608 C80E      		add r12,r24
 4506 160a D91E      		adc r13,r25
 4508               	.LM366:
 4509 160c 90E1      		ldi r25,lo8(272)
 4510 160e C916      		cp r12,r25
 4511 1610 91E0      		ldi r25,hi8(272)
 4512 1612 D906      		cpc r13,r25
 4513 1614 01F4      		brne .L1169
 4515               	.LM367:
 4516 1616 84E6      		ldi r24,lo8(100)
 4517 1618 90E0      		ldi r25,hi8(100)
 4518 161a 0E94 0000 		call nrk_spin_wait_us
 4519 161e 20E1      		ldi r18,lo8(272)
 4520 1620 31E0      		ldi r19,hi8(272)
 4521 1622 40E4      		ldi r20,lo8(320)
 4522 1624 51E0      		ldi r21,hi8(320)
 4523               	.L1179:
 4525               	.LM368:
 4526 1626 1A82      		std Y+2,__zero_reg__
 4527 1628 1982      		std Y+1,__zero_reg__
 4529               	.LM369:
 4530 162a 4098      		cbi 40-0x20,0
 4531 162c 842F      		mov r24,r20
 4532 162e 8068      		ori r24,lo8(-128)
 4533 1630 8EBD      		out 78-0x20,r24
 4534               	.L1180:
 4535 1632 0DB4      		in __tmp_reg__,77-0x20
 4536 1634 07FE      		sbrs __tmp_reg__,7
 4537 1636 00C0      		rjmp .L1180
 4538 1638 CA01      		movw r24,r20
 4539 163a 9595      		asr r25
 4540 163c 8795      		ror r24
 4541 163e 807C      		andi r24,lo8(-64)
 4542 1640 8EBD      		out 78-0x20,r24
 4543               	.L1182:
 4544 1642 0DB4      		in __tmp_reg__,77-0x20
 4545 1644 07FE      		sbrs __tmp_reg__,7
 4546 1646 00C0      		rjmp .L1182
 4547 1648 F801      		movw r30,r16
 4548               	.L1184:
 4549 164a 8081      		ld r24,Z
 4550 164c 8EBD      		out 78-0x20,r24
 4551               	.L1185:
 4552 164e 0DB4      		in __tmp_reg__,77-0x20
 4553 1650 07FE      		sbrs __tmp_reg__,7
 4554 1652 00C0      		rjmp .L1185
 4555 1654 3196      		adiw r30,1
 4556 1656 EA15      		cp r30,r10
 4557 1658 FB05      		cpc r31,r11
 4558 165a 01F4      		brne .L1184
 4559 165c 409A      		sbi 40-0x20,0
 4561               	.LM370:
 4562 165e 4098      		cbi 40-0x20,0
 4563 1660 822F      		mov r24,r18
 4564 1662 8068      		ori r24,lo8(-128)
 4565 1664 8EBD      		out 78-0x20,r24
 4566               	.L1188:
 4567 1666 0DB4      		in __tmp_reg__,77-0x20
 4568 1668 07FE      		sbrs __tmp_reg__,7
 4569 166a 00C0      		rjmp .L1188
 4570 166c C901      		movw r24,r18
 4571 166e 9595      		asr r25
 4572 1670 8795      		ror r24
 4573 1672 807C      		andi r24,lo8(-64)
 4574 1674 8EBD      		out 78-0x20,r24
 4575               	.L1190:
 4576 1676 0DB4      		in __tmp_reg__,77-0x20
 4577 1678 07FE      		sbrs __tmp_reg__,7
 4578 167a 00C0      		rjmp .L1190
 4579 167c F801      		movw r30,r16
 4580               	.L1192:
 4581 167e 8081      		ld r24,Z
 4582 1680 8EBD      		out 78-0x20,r24
 4583               	.L1193:
 4584 1682 0DB4      		in __tmp_reg__,77-0x20
 4585 1684 07FE      		sbrs __tmp_reg__,7
 4586 1686 00C0      		rjmp .L1193
 4587 1688 3196      		adiw r30,1
 4588 168a EA15      		cp r30,r10
 4589 168c FB05      		cpc r31,r11
 4590 168e 01F4      		brne .L1192
 4591 1690 409A      		sbi 40-0x20,0
 4592 1692 2E5F      		subi r18,lo8(-(2))
 4593 1694 3F4F      		sbci r19,hi8(-(2))
 4594 1696 4E5F      		subi r20,lo8(-(2))
 4595 1698 5F4F      		sbci r21,hi8(-(2))
 4597               	.LM371:
 4598 169a E1E0      		ldi r30,hi8(286)
 4599 169c 2E31      		cpi r18,lo8(286)
 4600 169e 3E07      		cpc r19,r30
 4601 16a0 01F4      		brne .L1179
 4603               	.LM372:
 4604 16a2 81E0      		ldi r24,lo8(1)
 4605 16a4 90E0      		ldi r25,hi8(1)
 4606 16a6 9A83      		std Y+2,r25
 4607 16a8 8983      		std Y+1,r24
 4609               	.LM373:
 4610 16aa 4098      		cbi 40-0x20,0
 4611 16ac 8EEC      		ldi r24,lo8(-50)
 4612 16ae 8EBD      		out 78-0x20,r24
 4613               	.L1197:
 4614 16b0 0DB4      		in __tmp_reg__,77-0x20
 4615 16b2 07FE      		sbrs __tmp_reg__,7
 4616 16b4 00C0      		rjmp .L1197
 4617 16b6 80E8      		ldi r24,lo8(-128)
 4618 16b8 8EBD      		out 78-0x20,r24
 4619               	.L1199:
 4620 16ba 0DB4      		in __tmp_reg__,77-0x20
 4621 16bc 07FE      		sbrs __tmp_reg__,7
 4622 16be 00C0      		rjmp .L1199
 4623 16c0 F801      		movw r30,r16
 4624               	.L1201:
 4625 16c2 8081      		ld r24,Z
 4626 16c4 8EBD      		out 78-0x20,r24
 4627               	.L1202:
 4628 16c6 0DB4      		in __tmp_reg__,77-0x20
 4629 16c8 07FE      		sbrs __tmp_reg__,7
 4630 16ca 00C0      		rjmp .L1202
 4631 16cc 3196      		adiw r30,1
 4632 16ce EA15      		cp r30,r10
 4633 16d0 FB05      		cpc r31,r11
 4634 16d2 01F4      		brne .L1201
 4635 16d4 409A      		sbi 40-0x20,0
 4637               	.LM374:
 4638 16d6 4098      		cbi 40-0x20,0
 4639 16d8 8EE9      		ldi r24,lo8(-98)
 4640 16da 8EBD      		out 78-0x20,r24
 4641               	.L1205:
 4642 16dc 0DB4      		in __tmp_reg__,77-0x20
 4643 16de 07FE      		sbrs __tmp_reg__,7
 4644 16e0 00C0      		rjmp .L1205
 4645 16e2 80E8      		ldi r24,lo8(-128)
 4646 16e4 8EBD      		out 78-0x20,r24
 4647               	.L1207:
 4648 16e6 0DB4      		in __tmp_reg__,77-0x20
 4649 16e8 07FE      		sbrs __tmp_reg__,7
 4650 16ea 00C0      		rjmp .L1207
 4651               	.L1213:
 4652 16ec F801      		movw r30,r16
 4653 16ee 8081      		ld r24,Z
 4654 16f0 8EBD      		out 78-0x20,r24
 4655               	.L1209:
 4656 16f2 0DB4      		in __tmp_reg__,77-0x20
 4657 16f4 07FE      		sbrs __tmp_reg__,7
 4658 16f6 00C0      		rjmp .L1209
 4659 16f8 0F5F      		subi r16,lo8(-(1))
 4660 16fa 1F4F      		sbci r17,hi8(-(1))
 4661 16fc 0A15      		cp r16,r10
 4662 16fe 1B05      		cpc r17,r11
 4663 1700 01F4      		brne .L1213
 4664 1702 409A      		sbi 40-0x20,0
 4665               	/* epilogue: frame size=2 */
 4666 1704 2296      		adiw r28,2
 4667 1706 0FB6      		in __tmp_reg__,__SREG__
 4668 1708 F894      		cli
 4669 170a DEBF      		out __SP_H__,r29
 4670 170c 0FBE      		out __SREG__,__tmp_reg__
 4671 170e CDBF      		out __SP_L__,r28
 4672 1710 DF91      		pop r29
 4673 1712 CF91      		pop r28
 4674 1714 1F91      		pop r17
 4675 1716 0F91      		pop r16
 4676 1718 FF90      		pop r15
 4677 171a EF90      		pop r14
 4678 171c DF90      		pop r13
 4679 171e CF90      		pop r12
 4680 1720 BF90      		pop r11
 4681 1722 AF90      		pop r10
 4682 1724 9F90      		pop r9
 4683 1726 8F90      		pop r8
 4684 1728 7F90      		pop r7
 4685 172a 6F90      		pop r6
 4686 172c 0895      		ret
 4687               	/* epilogue end (size=21) */
 4688               	/* function rf_security_set_key size 237 (194) */
 4693               	.Lscope35:
 4695               		.stabd	78,0,0
 4697               	.global	rf_power_up
 4699               	rf_power_up:
 4700               		.stabd	46,0,0
 4702               	.LM375:
 4703               	.LFBB36:
 4704               	/* prologue: frame size=0 */
 4705               	/* prologue end (size=0) */
 4707               	.LM376:
 4708               	/* #APP */
 4709 172e F894      		cli
 4710               		
 4712               	.LM377:
 4713               	/* #NOAPP */
 4714 1730 4098      		cbi 40-0x20,0
 4715 1732 81E0      		ldi r24,lo8(1)
 4716 1734 8EBD      		out 78-0x20,r24
 4717               	.L1258:
 4719               	.LM378:
 4720 1736 0DB4      		in __tmp_reg__,77-0x20
 4721 1738 07FE      		sbrs __tmp_reg__,7
 4722 173a 00C0      		rjmp .L1258
 4723 173c 409A      		sbi 40-0x20,0
 4725               	.LM379:
 4726 173e 88EE      		ldi r24,lo8(1000)
 4727 1740 93E0      		ldi r25,hi8(1000)
 4728 1742 0E94 0000 		call nrk_spin_wait_us
 4730               	.LM380:
 4731               	/* #APP */
 4732 1746 7894      		sei
 4733               		
 4734               	/* #NOAPP */
 4735               	/* epilogue: frame size=0 */
 4736 1748 0895      		ret
 4737               	/* epilogue end (size=1) */
 4738               	/* function rf_power_up size 20 (19) */
 4740               	.Lscope36:
 4742               		.stabd	78,0,0
 4746               	.global	rf_set_rx
 4748               	rf_set_rx:
 4749               		.stabd	46,0,0
 4751               	.LM381:
 4752               	.LFBB37:
 4753               	/* prologue: frame size=0 */
 4754 174a 1F93      		push r17
 4755 174c CF93      		push r28
 4756 174e DF93      		push r29
 4757               	/* prologue end (size=3) */
 4758 1750 EC01      		movw r28,r24
 4759 1752 162F      		mov r17,r22
 4761               	.LM382:
 4762 1754 8091 0000 		lds r24,radio_sem
 4763 1758 9091 0000 		lds r25,(radio_sem)+1
 4764 175c 0E94 0000 		call nrk_sem_pend
 4766               	.LM383:
 4767 1760 4098      		cbi 40-0x20,0
 4768 1762 88E0      		ldi r24,lo8(8)
 4769 1764 8EBD      		out 78-0x20,r24
 4770               	.L1264:
 4772               	.LM384:
 4773 1766 0DB4      		in __tmp_reg__,77-0x20
 4774 1768 07FE      		sbrs __tmp_reg__,7
 4775 176a 00C0      		rjmp .L1264
 4776 176c 409A      		sbi 40-0x20,0
 4778               	.LM385:
 4779 176e 4098      		cbi 40-0x20,0
 4780 1770 88E0      		ldi r24,lo8(8)
 4781 1772 8EBD      		out 78-0x20,r24
 4782               	.L1266:
 4783 1774 0DB4      		in __tmp_reg__,77-0x20
 4784 1776 07FE      		sbrs __tmp_reg__,7
 4785 1778 00C0      		rjmp .L1266
 4786 177a 409A      		sbi 40-0x20,0
 4788               	.LM386:
 4789 177c 812F      		mov r24,r17
 4790 177e 0E94 0000 		call halRfSetChannel
 4792               	.LM387:
 4793 1782 D093 0000 		sts (rfSettings)+1,r29
 4794 1786 C093 0000 		sts rfSettings,r28
 4796               	.LM388:
 4797 178a 8091 0000 		lds r24,radio_sem
 4798 178e 9091 0000 		lds r25,(radio_sem)+1
 4799 1792 0E94 0000 		call nrk_sem_post
 4800               	/* epilogue: frame size=0 */
 4801 1796 DF91      		pop r29
 4802 1798 CF91      		pop r28
 4803 179a 1F91      		pop r17
 4804 179c 0895      		ret
 4805               	/* epilogue end (size=4) */
 4806               	/* function rf_set_rx size 42 (35) */
 4808               	.Lscope37:
 4810               		.stabd	78,0,0
 4813               	.global	rf_set_channel
 4815               	rf_set_channel:
 4816               		.stabd	46,0,0
 4818               	.LM389:
 4819               	.LFBB38:
 4820               	/* prologue: frame size=0 */
 4821 179e 1F93      		push r17
 4822               	/* prologue end (size=1) */
 4823 17a0 182F      		mov r17,r24
 4825               	.LM390:
 4826 17a2 8091 0000 		lds r24,radio_sem
 4827 17a6 9091 0000 		lds r25,(radio_sem)+1
 4828 17aa 0E94 0000 		call nrk_sem_pend
 4830               	.LM391:
 4831 17ae 812F      		mov r24,r17
 4832 17b0 0E94 0000 		call halRfSetChannel
 4834               	.LM392:
 4835 17b4 8091 0000 		lds r24,radio_sem
 4836 17b8 9091 0000 		lds r25,(radio_sem)+1
 4837 17bc 0E94 0000 		call nrk_sem_post
 4838               	/* epilogue: frame size=0 */
 4839 17c0 1F91      		pop r17
 4840 17c2 0895      		ret
 4841               	/* epilogue end (size=2) */
 4842               	/* function rf_set_channel size 19 (16) */
 4844               	.Lscope38:
 4846               		.stabd	78,0,0
 4852               	.global	rf_init
 4854               	rf_init:
 4855               		.stabd	46,0,0
 4857               	.LM393:
 4858               	.LFBB39:
 4859               	/* prologue: frame size=2 */
 4860 17c4 DF92      		push r13
 4861 17c6 EF92      		push r14
 4862 17c8 FF92      		push r15
 4863 17ca 0F93      		push r16
 4864 17cc 1F93      		push r17
 4865 17ce CF93      		push r28
 4866 17d0 DF93      		push r29
 4867 17d2 CDB7      		in r28,__SP_L__
 4868 17d4 DEB7      		in r29,__SP_H__
 4869 17d6 2297      		sbiw r28,2
 4870 17d8 0FB6      		in __tmp_reg__,__SREG__
 4871 17da F894      		cli
 4872 17dc DEBF      		out __SP_H__,r29
 4873 17de 0FBE      		out __SREG__,__tmp_reg__
 4874 17e0 CDBF      		out __SP_L__,r28
 4875               	/* prologue end (size=15) */
 4876 17e2 8C01      		movw r16,r24
 4877 17e4 D62E      		mov r13,r22
 4878 17e6 5A83      		std Y+2,r21
 4879 17e8 4983      		std Y+1,r20
 4880 17ea 7901      		movw r14,r18
 4882               	.LM394:
 4883 17ec 64E1      		ldi r22,lo8(20)
 4884 17ee 81E0      		ldi r24,lo8(1)
 4885 17f0 0E94 0000 		call nrk_sem_create
 4886 17f4 9093 0000 		sts (radio_sem)+1,r25
 4887 17f8 8093 0000 		sts radio_sem,r24
 4889               	.LM395:
 4890 17fc 892B      		or r24,r25
 4891 17fe 01F4      		brne .L1276
 4893               	.LM396:
 4894 1800 0E94 0000 		call nrk_get_pid
 4895 1804 682F      		mov r22,r24
 4896 1806 8FE0      		ldi r24,lo8(15)
 4897 1808 0E94 0000 		call nrk_kernel_error_add
 4898               	.L1276:
 4900               	.LM397:
 4901 180c 8091 0000 		lds r24,radio_sem
 4902 1810 9091 0000 		lds r25,(radio_sem)+1
 4903 1814 0E94 0000 		call nrk_sem_pend
 4905               	.LM398:
 4906 1818 8F3F      		cpi r24,lo8(-1)
 4907 181a 01F4      		brne .L1278
 4909               	.LM399:
 4910 181c 80E0      		ldi r24,lo8(__c.2736)
 4911 181e 90E0      		ldi r25,hi8(__c.2736)
 4912 1820 0E94 0000 		call nrk_kprintf
 4913               	.L1278:
 4915               	.LM400:
 4916 1824 159A      		sbi 34-0x20,5
 4918               	.LM401:
 4919 1826 88EE      		ldi r24,lo8(1000)
 4920 1828 93E0      		ldi r25,hi8(1000)
 4921 182a 0E94 0000 		call halWait
 4923               	.LM402:
 4924 182e 1698      		cbi 34-0x20,6
 4926               	.LM403:
 4927 1830 81E0      		ldi r24,lo8(1)
 4928 1832 90E0      		ldi r25,hi8(1)
 4929 1834 0E94 0000 		call halWait
 4931               	.LM404:
 4932 1838 169A      		sbi 34-0x20,6
 4934               	.LM405:
 4935 183a 84E6      		ldi r24,lo8(100)
 4936 183c 90E0      		ldi r25,hi8(100)
 4937 183e 0E94 0000 		call halWait
 4939               	.LM406:
 4940               	/* #APP */
 4941 1842 F894      		cli
 4942               		
 4944               	.LM407:
 4945               	/* #NOAPP */
 4946 1844 4098      		cbi 40-0x20,0
 4947 1846 81E0      		ldi r24,lo8(1)
 4948 1848 8EBD      		out 78-0x20,r24
 4949               	.L1280:
 4950 184a 0DB4      		in __tmp_reg__,77-0x20
 4951 184c 07FE      		sbrs __tmp_reg__,7
 4952 184e 00C0      		rjmp .L1280
 4953 1850 409A      		sbi 40-0x20,0
 4955               	.LM408:
 4956 1852 82EE      		ldi r24,lo8(738)
 4957 1854 92E0      		ldi r25,hi8(738)
 4958 1856 9093 0000 		sts (mdmctrl0)+1,r25
 4959 185a 8093 0000 		sts mdmctrl0,r24
 4961               	.LM409:
 4962 185e 4098      		cbi 40-0x20,0
 4963 1860 81E1      		ldi r24,lo8(17)
 4964 1862 8EBD      		out 78-0x20,r24
 4965               	.L1282:
 4966 1864 0DB4      		in __tmp_reg__,77-0x20
 4967 1866 07FE      		sbrs __tmp_reg__,7
 4968 1868 00C0      		rjmp .L1282
 4969 186a 82E0      		ldi r24,lo8(2)
 4970 186c 8EBD      		out 78-0x20,r24
 4971               	.L1284:
 4972 186e 0DB4      		in __tmp_reg__,77-0x20
 4973 1870 07FE      		sbrs __tmp_reg__,7
 4974 1872 00C0      		rjmp .L1284
 4975 1874 82EE      		ldi r24,lo8(-30)
 4976 1876 8EBD      		out 78-0x20,r24
 4977               	.L1286:
 4978 1878 0DB4      		in __tmp_reg__,77-0x20
 4979 187a 07FE      		sbrs __tmp_reg__,7
 4980 187c 00C0      		rjmp .L1286
 4981 187e 409A      		sbi 40-0x20,0
 4983               	.LM410:
 4984 1880 4098      		cbi 40-0x20,0
 4985 1882 82E1      		ldi r24,lo8(18)
 4986 1884 8EBD      		out 78-0x20,r24
 4987               	.L1288:
 4988 1886 0DB4      		in __tmp_reg__,77-0x20
 4989 1888 07FE      		sbrs __tmp_reg__,7
 4990 188a 00C0      		rjmp .L1288
 4991 188c 85E0      		ldi r24,lo8(5)
 4992 188e 8EBD      		out 78-0x20,r24
 4993               	.L1290:
 4994 1890 0DB4      		in __tmp_reg__,77-0x20
 4995 1892 07FE      		sbrs __tmp_reg__,7
 4996 1894 00C0      		rjmp .L1290
 4997 1896 1EBC      		out 78-0x20,__zero_reg__
 4998               	.L1292:
 4999 1898 0DB4      		in __tmp_reg__,77-0x20
 5000 189a 07FE      		sbrs __tmp_reg__,7
 5001 189c 00C0      		rjmp .L1292
 5002 189e 409A      		sbi 40-0x20,0
 5004               	.LM411:
 5005 18a0 4098      		cbi 40-0x20,0
 5006 18a2 8CE1      		ldi r24,lo8(28)
 5007 18a4 8EBD      		out 78-0x20,r24
 5008               	.L1294:
 5009 18a6 0DB4      		in __tmp_reg__,77-0x20
 5010 18a8 07FE      		sbrs __tmp_reg__,7
 5011 18aa 00C0      		rjmp .L1294
 5012 18ac 1EBC      		out 78-0x20,__zero_reg__
 5013               	.L1296:
 5014 18ae 0DB4      		in __tmp_reg__,77-0x20
 5015 18b0 07FE      		sbrs __tmp_reg__,7
 5016 18b2 00C0      		rjmp .L1296
 5017 18b4 8FE7      		ldi r24,lo8(127)
 5018 18b6 8EBD      		out 78-0x20,r24
 5019               	.L1298:
 5020 18b8 0DB4      		in __tmp_reg__,77-0x20
 5021 18ba 07FE      		sbrs __tmp_reg__,7
 5022 18bc 00C0      		rjmp .L1298
 5023 18be 409A      		sbi 40-0x20,0
 5025               	.LM412:
 5026 18c0 4098      		cbi 40-0x20,0
 5027 18c2 89E1      		ldi r24,lo8(25)
 5028 18c4 8EBD      		out 78-0x20,r24
 5029               	.L1300:
 5030 18c6 0DB4      		in __tmp_reg__,77-0x20
 5031 18c8 07FE      		sbrs __tmp_reg__,7
 5032 18ca 00C0      		rjmp .L1300
 5033 18cc 81E0      		ldi r24,lo8(1)
 5034 18ce 8EBD      		out 78-0x20,r24
 5035               	.L1302:
 5036 18d0 0DB4      		in __tmp_reg__,77-0x20
 5037 18d2 07FE      		sbrs __tmp_reg__,7
 5038 18d4 00C0      		rjmp .L1302
 5039 18d6 84EC      		ldi r24,lo8(-60)
 5040 18d8 8EBD      		out 78-0x20,r24
 5041               	.L1304:
 5042 18da 0DB4      		in __tmp_reg__,77-0x20
 5043 18dc 07FE      		sbrs __tmp_reg__,7
 5044 18de 00C0      		rjmp .L1304
 5045 18e0 409A      		sbi 40-0x20,0
 5047               	.LM413:
 5048 18e2 4098      		cbi 40-0x20,0
 5049 18e4 87E1      		ldi r24,lo8(23)
 5050 18e6 8EBD      		out 78-0x20,r24
 5051               	.L1306:
 5052 18e8 0DB4      		in __tmp_reg__,77-0x20
 5053 18ea 07FE      		sbrs __tmp_reg__,7
 5054 18ec 00C0      		rjmp .L1306
 5055 18ee 8AE1      		ldi r24,lo8(26)
 5056 18f0 8EBD      		out 78-0x20,r24
 5057               	.L1308:
 5058 18f2 0DB4      		in __tmp_reg__,77-0x20
 5059 18f4 07FE      		sbrs __tmp_reg__,7
 5060 18f6 00C0      		rjmp .L1308
 5061 18f8 86E5      		ldi r24,lo8(86)
 5062 18fa 8EBD      		out 78-0x20,r24
 5063               	.L1310:
 5064 18fc 0DB4      		in __tmp_reg__,77-0x20
 5065 18fe 07FE      		sbrs __tmp_reg__,7
 5066 1900 00C0      		rjmp .L1310
 5067 1902 409A      		sbi 40-0x20,0
 5069               	.LM414:
 5070 1904 84EF      		ldi r24,lo8(500)
 5071 1906 91E0      		ldi r25,hi8(500)
 5072 1908 0E94 0000 		call nrk_spin_wait_us
 5074               	.LM415:
 5075 190c 4098      		cbi 40-0x20,0
 5076 190e 88EE      		ldi r24,lo8(-24)
 5077 1910 8EBD      		out 78-0x20,r24
 5078               	.L1312:
 5079 1912 0DB4      		in __tmp_reg__,77-0x20
 5080 1914 07FE      		sbrs __tmp_reg__,7
 5081 1916 00C0      		rjmp .L1312
 5082 1918 80E8      		ldi r24,lo8(-128)
 5083 191a 8EBD      		out 78-0x20,r24
 5084               	.L1314:
 5085 191c 0DB4      		in __tmp_reg__,77-0x20
 5086 191e 07FE      		sbrs __tmp_reg__,7
 5087 1920 00C0      		rjmp .L1314
 5088 1922 FE01      		movw r30,r28
 5089 1924 3196      		adiw r30,1
 5090 1926 9E01      		movw r18,r28
 5091 1928 2D5F      		subi r18,lo8(-(3))
 5092 192a 3F4F      		sbci r19,hi8(-(3))
 5093               	.L1316:
 5094 192c 8081      		ld r24,Z
 5095 192e 8EBD      		out 78-0x20,r24
 5096               	.L1317:
 5097 1930 0DB4      		in __tmp_reg__,77-0x20
 5098 1932 07FE      		sbrs __tmp_reg__,7
 5099 1934 00C0      		rjmp .L1317
 5100 1936 3196      		adiw r30,1
 5101 1938 E217      		cp r30,r18
 5102 193a F307      		cpc r31,r19
 5103 193c 01F4      		brne .L1316
 5104 193e 409A      		sbi 40-0x20,0
 5106               	.LM416:
 5107 1940 84EF      		ldi r24,lo8(500)
 5108 1942 91E0      		ldi r25,hi8(500)
 5109 1944 0E94 0000 		call nrk_spin_wait_us
 5111               	.LM417:
 5112               	/* #APP */
 5113 1948 7894      		sei
 5114               		
 5116               	.LM418:
 5117               	/* #NOAPP */
 5118 194a 8D2D      		mov r24,r13
 5119 194c 0E94 0000 		call halRfSetChannel
 5121               	.LM419:
 5122               	/* #APP */
 5123 1950 7894      		sei
 5124               		
 5126               	.LM420:
 5127               	/* #NOAPP */
 5128 1952 1093 0000 		sts (rfSettings)+1,r17
 5129 1956 0093 0000 		sts rfSettings,r16
 5131               	.LM421:
 5132 195a 8981      		ldd r24,Y+1
 5133 195c 9A81      		ldd r25,Y+2
 5134 195e 9093 0000 		sts (rfSettings+4)+1,r25
 5135 1962 8093 0000 		sts rfSettings+4,r24
 5137               	.LM422:
 5138 1966 F092 0000 		sts (rfSettings+6)+1,r15
 5139 196a E092 0000 		sts rfSettings+6,r14
 5141               	.LM423:
 5142 196e 1092 0000 		sts rfSettings+2,__zero_reg__
 5144               	.LM424:
 5145 1972 1092 0000 		sts rfSettings+8,__zero_reg__
 5147               	.LM425:
 5148 1976 0E94 0000 		call halRfWaitForCrystalOscillator
 5150               	.LM426:
 5151 197a 8091 0000 		lds r24,radio_sem
 5152 197e 9091 0000 		lds r25,(radio_sem)+1
 5153 1982 0E94 0000 		call nrk_sem_post
 5155               	.LM427:
 5156 1986 8F3F      		cpi r24,lo8(-1)
 5157 1988 01F4      		brne .L1320
 5159               	.LM428:
 5160 198a 80E0      		ldi r24,lo8(__c.2798)
 5161 198c 90E0      		ldi r25,hi8(__c.2798)
 5162 198e 0E94 0000 		call nrk_kprintf
 5164               	.LM429:
 5165 1992 82E0      		ldi r24,lo8(2)
 5166 1994 0E94 0000 		call _nrk_errno_set
 5167               	.L1320:
 5169               	.LM430:
 5170 1998 1092 0000 		sts auto_ack_enable,__zero_reg__
 5172               	.LM431:
 5173 199c 1092 0000 		sts security_enable,__zero_reg__
 5175               	.LM432:
 5176 19a0 1092 0000 		sts last_pkt_encrypted,__zero_reg__
 5177               	/* epilogue: frame size=2 */
 5178 19a4 2296      		adiw r28,2
 5179 19a6 0FB6      		in __tmp_reg__,__SREG__
 5180 19a8 F894      		cli
 5181 19aa DEBF      		out __SP_H__,r29
 5182 19ac 0FBE      		out __SREG__,__tmp_reg__
 5183 19ae CDBF      		out __SP_L__,r28
 5184 19b0 DF91      		pop r29
 5185 19b2 CF91      		pop r28
 5186 19b4 1F91      		pop r17
 5187 19b6 0F91      		pop r16
 5188 19b8 FF90      		pop r15
 5189 19ba EF90      		pop r14
 5190 19bc DF90      		pop r13
 5191 19be 0895      		ret
 5192               	/* epilogue end (size=14) */
 5193               	/* function rf_init size 263 (234) */
 5195               	.Lscope39:
 5197               		.stabd	78,0,0
 5199               	.global	cc259x_tx
 5201               	cc259x_tx:
 5202               		.stabd	46,0,0
 5204               	.LM433:
 5205               	.LFBB40:
 5206               	/* prologue: frame size=0 */
 5207               	/* prologue end (size=0) */
 5209               	.LM434:
 5210 19c0 8091 0000 		lds r24,NRK_DEBUG_1
 5211 19c4 0E94 0000 		call nrk_gpio_set
 5213               	.LM435:
 5214 19c8 8091 0000 		lds r24,NRK_DEBUG_0
 5215 19cc 0E94 0000 		call nrk_gpio_set
 5216               	/* epilogue: frame size=0 */
 5217 19d0 0895      		ret
 5218               	/* epilogue end (size=1) */
 5219               	/* function cc259x_tx size 9 (8) */
 5221               	.Lscope40:
 5223               		.stabd	78,0,0
 5225               	.global	cc259x_rx
 5227               	cc259x_rx:
 5228               		.stabd	46,0,0
 5230               	.LM436:
 5231               	.LFBB41:
 5232               	/* prologue: frame size=0 */
 5233               	/* prologue end (size=0) */
 5235               	.LM437:
 5236 19d2 8091 0000 		lds r24,NRK_DEBUG_1
 5237 19d6 0E94 0000 		call nrk_gpio_set
 5239               	.LM438:
 5240 19da 8091 0000 		lds r24,NRK_DEBUG_0
 5241 19de 0E94 0000 		call nrk_gpio_clr
 5242               	/* epilogue: frame size=0 */
 5243 19e2 0895      		ret
 5244               	/* epilogue end (size=1) */
 5245               	/* function cc259x_rx size 9 (8) */
 5247               	.Lscope41:
 5249               		.stabd	78,0,0
 5250               	.global	_rf_rx_callback
 5251               	.global	_rf_rx_callback
 5252               		.section .bss
 5255               	_rf_rx_callback:
 5256 0000 0000      		.skip 2,0
 5257               		.section	.progmem.data,"a",@progbits
 5260               	__c.2798:
 5261 0000 4343 3234 		.string	"CC2420 ERROR:  Release of semaphore failed\r\n"
 5261      3230 2045 
 5261      5252 4F52 
 5261      3A20 2052 
 5261      656C 6561 
 5264               	__c.2736:
 5265 002d 4343 3234 		.string	"CC2420 ERROR:  Access to semaphore failed\r\n"
 5265      3230 2045 
 5265      5252 4F52 
 5265      3A20 2041 
 5265      6363 6573 
 5266               		.comm _nrk_signal_list,4,1
 5267               		.comm rfSettings,9,1
 5268               		.comm nrk_idle_task_stk,128,1
 5269               		.comm nrk_kernel_stk_ptr,2,1
 5270               		.comm error_task,1,1
 5271               		.comm error_num,1,1
 5272               		.comm _nrk_prev_timer_val,1,1
 5273               		.comm _nrk_time_trigger,1,1
 5274               		.comm app_timer0_callback,2,1
 5275               		.comm app_timer0_prescale,1,1
 5276               		.comm radio_sem,2,1
 5277               		.comm auto_ack_enable,1,1
 5278               		.comm security_enable,1,1
 5279               		.comm last_pkt_encrypted,1,1
 5280               		.comm mdmctrl0,2,1
 5281               		.comm tx_ctr,4,1
 5282               		.comm rx_ctr,4,1
 5283               		.comm rx_ready,1,1
 5284               		.comm tmp_blah,2,1
 5307               		.text
 5309               	.Letext0:
 5310               	/* File "../../src/radio/cc2420/source/basic_rf.c": code 3368 = 0x0d28 (3100), prologues 121, epilo
DEFINED SYMBOLS
                            *ABS*:0000000000000000 basic_rf.c
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:2      *ABS*:000000000000003f __SREG__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:3      *ABS*:000000000000003e __SP_H__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4      *ABS*:000000000000003d __SP_L__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:129    .text:0000000000000000 set_rf_rx_callback
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:5255   .bss:0000000000000000 _rf_rx_callback
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:151    .text:000000000000000a rf_power_down
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:203    .text:000000000000002c rf_security_last_pkt_status
                            *COM*:0000000000000001 last_pkt_encrypted
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:226    .text:0000000000000034 rf_security_set_ctr_counter
                            *COM*:0000000000000004 tx_ctr
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:336    .text:00000000000000c2 rf_security_enable
                            *COM*:0000000000000001 security_enable
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:404    .text:000000000000010e rf_security_disable
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:449    .text:0000000000000136 rf_get_sem
                            *COM*:0000000000000002 radio_sem
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:471    .text:0000000000000140 rf_addr_decode_enable
                            *COM*:0000000000000002 mdmctrl0
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:520    .text:0000000000000176 rf_addr_decode_disable
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:569    .text:00000000000001ac rf_auto_ack_enable
                            *COM*:0000000000000001 auto_ack_enable
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:622    .text:00000000000001e8 rf_auto_ack_disable
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:674    .text:0000000000000222 rf_busy
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:705    .text:0000000000000236 rf_rx_check_fifop
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:735    .text:0000000000000248 rf_rx_check_sfd
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:766    .text:000000000000025c rf_rx_packet
                            *COM*:0000000000000001 rx_ready
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:803    .text:000000000000027a rf_flush_rx_fifo
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:843    .text:0000000000000298 rf_rx_set_serial
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:898    .text:00000000000002ce rf_tx_set_serial
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:944    .text:00000000000002f6 rf_set_preamble_length
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1000   .text:0000000000000338 rf_set_cca_mode
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1060   .text:0000000000000384 __vector_8
                            *COM*:0000000000000009 rfSettings
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1687   .text:0000000000000718 rf_carrier_off
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1727   .text:0000000000000740 rf_carrier_on
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1767   .text:0000000000000768 rf_data_mode
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1851   .text:00000000000007d2 rf_test_mode
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:1938   .text:0000000000000840 rf_set_cca_thresh
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:2006   .text:0000000000000892 rf_polling_rx_packet
                            *COM*:0000000000000004 rx_ctr
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:2795   .text:0000000000000d40 rf_rx_off
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:2844   .text:0000000000000d72 rf_polling_rx_on
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:2901   .text:0000000000000db2 rf_rx_on
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:2969   .text:0000000000000e02 rf_tx_power
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:3036   .text:0000000000000e50 rf_tx_packet
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:3698   .text:00000000000011ae rf_tx_tdma_packet
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4308   .text:00000000000014de rf_addr_decode_set_my_mac
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4395   .text:0000000000001554 rf_security_set_key
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4699   .text:000000000000172e rf_power_up
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4748   .text:000000000000174a rf_set_rx
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4815   .text:000000000000179e rf_set_channel
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:4854   .text:00000000000017c4 rf_init
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:5264   .progmem.data:000000000000002d __c.2736
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:5260   .progmem.data:0000000000000000 __c.2798
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:5201   .text:00000000000019c0 cc259x_tx
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc6OsZoC.s:5227   .text:00000000000019d2 cc259x_rx
                            *COM*:0000000000000004 _nrk_signal_list
                            *COM*:0000000000000080 nrk_idle_task_stk
                            *COM*:0000000000000002 nrk_kernel_stk_ptr
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 _nrk_prev_timer_val
                            *COM*:0000000000000001 _nrk_time_trigger
                            *COM*:0000000000000002 app_timer0_callback
                            *COM*:0000000000000001 app_timer0_prescale
                            *COM*:0000000000000002 tmp_blah

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_sem_pend
nrk_sem_post
halWait
_nrk_os_timer_get
nrk_high_speed_timer_wait
nrk_spin_wait_us
halRfSetChannel
nrk_sem_create
nrk_get_pid
nrk_kernel_error_add
nrk_kprintf
halRfWaitForCrystalOscillator
_nrk_errno_set
NRK_DEBUG_1
nrk_gpio_set
NRK_DEBUG_0
nrk_gpio_clr
