   1               		.file	"nrk_status.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 110               	.global	_nrk_startup_error
 112               	_nrk_startup_error:
 113               		.stabd	46,0,0
   1:../../src/kernel/hal/atmega1281/nrk_status.c **** /******************************************************************************
   2:../../src/kernel/hal/atmega1281/nrk_status.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../src/kernel/hal/atmega1281/nrk_status.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../src/kernel/hal/atmega1281/nrk_status.c **** *  All rights reserved.
   5:../../src/kernel/hal/atmega1281/nrk_status.c **** *
   6:../../src/kernel/hal/atmega1281/nrk_status.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../src/kernel/hal/atmega1281/nrk_status.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../src/kernel/hal/atmega1281/nrk_status.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../src/kernel/hal/atmega1281/nrk_status.c **** *
  10:../../src/kernel/hal/atmega1281/nrk_status.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../src/kernel/hal/atmega1281/nrk_status.c **** *  it under the terms of the GNU General Public License as published by
  12:../../src/kernel/hal/atmega1281/nrk_status.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../src/kernel/hal/atmega1281/nrk_status.c **** *
  14:../../src/kernel/hal/atmega1281/nrk_status.c **** *  This program is distributed in the hope that it will be useful,
  15:../../src/kernel/hal/atmega1281/nrk_status.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../src/kernel/hal/atmega1281/nrk_status.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../src/kernel/hal/atmega1281/nrk_status.c **** *  GNU General Public License for more details.
  18:../../src/kernel/hal/atmega1281/nrk_status.c **** *
  19:../../src/kernel/hal/atmega1281/nrk_status.c **** *  You should have received a copy of the GNU General Public License
  20:../../src/kernel/hal/atmega1281/nrk_status.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../src/kernel/hal/atmega1281/nrk_status.c **** *
  22:../../src/kernel/hal/atmega1281/nrk_status.c **** *  Contributing Authors (specific to this file):
  23:../../src/kernel/hal/atmega1281/nrk_status.c **** *  Anthony Rowe
  24:../../src/kernel/hal/atmega1281/nrk_status.c **** *******************************************************************************/
  25:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  26:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  27:../../src/kernel/hal/atmega1281/nrk_status.c **** #include <include.h>
  28:../../src/kernel/hal/atmega1281/nrk_status.c **** #include <nrk_status.h>
  29:../../src/kernel/hal/atmega1281/nrk_status.c **** #include <nrk_error.h>
  30:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  31:../../src/kernel/hal/atmega1281/nrk_status.c **** uint8_t _nrk_startup_error()
  32:../../src/kernel/hal/atmega1281/nrk_status.c **** {
 115               	.LM0:
 116               	.LFBB1:
 117               	/* prologue: frame size=0 */
 118               	/* prologue end (size=0) */
  33:../../src/kernel/hal/atmega1281/nrk_status.c **** uint8_t error;
  34:../../src/kernel/hal/atmega1281/nrk_status.c **** error=0;
  35:../../src/kernel/hal/atmega1281/nrk_status.c **** // Use the timer settings that are normally 0 on reset to detect
  36:../../src/kernel/hal/atmega1281/nrk_status.c **** // if the OS has reboot by accident
  37:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  38:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  39:../../src/kernel/hal/atmega1281/nrk_status.c **** // Check Watchdog timer
  40:../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<WDRF)) != 0 )
 120               	.LM1:
 121 0000 04B6      		in __tmp_reg__,84-0x20
 122 0002 03FE      		sbrs __tmp_reg__,3
 123 0004 00C0      		rjmp .L2
 125               	.LM2:
 126 0006 90E1      		ldi r25,lo8(16)
 127 0008 00C0      		rjmp .L4
 128               	.L2:
 129 000a 90E0      		ldi r25,lo8(0)
 130               	.L4:
  41:../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  42:../../src/kernel/hal/atmega1281/nrk_status.c **** 	// don't clear wdt
  43:../../src/kernel/hal/atmega1281/nrk_status.c **** 	error|=0x10;
  44:../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  45:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  46:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  47:../../src/kernel/hal/atmega1281/nrk_status.c **** // Check Brown Out 
  48:../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<BORF)) != 0 )
 132               	.LM3:
 133 000c 04B6      		in __tmp_reg__,84-0x20
 134 000e 02FE      		sbrs __tmp_reg__,2
 135 0010 00C0      		rjmp .L5
  49:../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  50:../../src/kernel/hal/atmega1281/nrk_status.c **** 	MCUSR &= ~(1<<BORF);	
 137               	.LM4:
 138 0012 84B7      		in r24,84-0x20
 139 0014 8B7F      		andi r24,lo8(-5)
 140 0016 84BF      		out 84-0x20,r24
  51:../../src/kernel/hal/atmega1281/nrk_status.c **** 	// Only add brownout if it isn't the first bootup
  52:../../src/kernel/hal/atmega1281/nrk_status.c **** 	if( (MCUSR & (1<<PORF)) == 0 )
 142               	.LM5:
 143 0018 04B6      		in __tmp_reg__,84-0x20
 144 001a 00FE      		sbrs __tmp_reg__,0
  53:../../src/kernel/hal/atmega1281/nrk_status.c **** 		error|=0x04;
 146               	.LM6:
 147 001c 9460      		ori r25,lo8(4)
 148               	.L5:
  54:../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  55:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  56:../../src/kernel/hal/atmega1281/nrk_status.c **** // Check External Reset 
  57:../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<EXTRF)) != 0 )
 150               	.LM7:
 151 001e 04B6      		in __tmp_reg__,84-0x20
 152 0020 01FE      		sbrs __tmp_reg__,1
 153 0022 00C0      		rjmp .L8
  58:../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  59:../../src/kernel/hal/atmega1281/nrk_status.c **** 	MCUSR &= ~(1<<EXTRF);	
 155               	.LM8:
 156 0024 84B7      		in r24,84-0x20
 157 0026 8D7F      		andi r24,lo8(-3)
 158 0028 84BF      		out 84-0x20,r24
  60:../../src/kernel/hal/atmega1281/nrk_status.c **** 	error|=0x02;
 160               	.LM9:
 161 002a 9260      		ori r25,lo8(2)
 162               	.L8:
  61:../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  62:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  63:../../src/kernel/hal/atmega1281/nrk_status.c **** // If any of the above errors went off, then the next errors will
  64:../../src/kernel/hal/atmega1281/nrk_status.c **** // incorrectly be set!  So make sure to bail early!
  65:../../src/kernel/hal/atmega1281/nrk_status.c **** if(error!=0) return error;
 164               	.LM10:
 165 002c 9923      		tst r25
 166 002e 01F0      		breq .L10
 167 0030 892F      		mov r24,r25
 168 0032 9927      		clr r25
 169 0034 0895      		ret
 170               	.L10:
  66:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  67:../../src/kernel/hal/atmega1281/nrk_status.c **** // Check if normal power up state is set and then clear it
  68:../../src/kernel/hal/atmega1281/nrk_status.c **** if( (MCUSR & (1<<PORF)) != 0 )
 172               	.LM11:
 173 0036 04B6      		in __tmp_reg__,84-0x20
 174 0038 00FC      		sbrc __tmp_reg__,0
 175 003a 00C0      		rjmp .L13
 176 003c 91E0      		ldi r25,lo8(1)
 177 003e 00C0      		rjmp .L15
 178               	.L13:
  69:../../src/kernel/hal/atmega1281/nrk_status.c **** 	{
  70:../../src/kernel/hal/atmega1281/nrk_status.c **** 	MCUSR &= ~(1<<PORF);
 180               	.LM12:
 181 0040 84B7      		in r24,84-0x20
 182 0042 8E7F      		andi r24,lo8(-2)
 183 0044 84BF      		out 84-0x20,r24
 184               	.L15:
  71:../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  72:../../src/kernel/hal/atmega1281/nrk_status.c **** 	else {
  73:../../src/kernel/hal/atmega1281/nrk_status.c **** 	error|=0x01;
  74:../../src/kernel/hal/atmega1281/nrk_status.c **** 	}
  75:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  76:../../src/kernel/hal/atmega1281/nrk_status.c **** // check uart state 
  77:../../src/kernel/hal/atmega1281/nrk_status.c **** if((volatile uint8_t)TCCR2A!=0) error|=0x01;
 186               	.LM13:
 187 0046 8091 B000 		lds r24,176
 188 004a 8111      		cpse r24,__zero_reg__
 189 004c 9160      		ori r25,lo8(1)
 190               	.L16:
  78:../../src/kernel/hal/atmega1281/nrk_status.c **** 
  79:../../src/kernel/hal/atmega1281/nrk_status.c **** return error;
 192               	.LM14:
 193 004e 892F      		mov r24,r25
 194 0050 9927      		clr r25
  80:../../src/kernel/hal/atmega1281/nrk_status.c **** }
 196               	.LM15:
 197 0052 0895      		ret
 198               	/* epilogue: frame size=0 */
 199               	/* epilogue: noreturn */
 200               	/* epilogue end (size=0) */
 201               	/* function _nrk_startup_error size 44 (44) */
 206               	.Lscope1:
 208               		.stabd	78,0,0
 209               		.comm _nrk_signal_list,4,1
 210               		.comm error_task,1,1
 211               		.comm error_num,1,1
 216               	.Letext0:
 217               	/* File "../../src/kernel/hal/atmega1281/nrk_status.c": code   44 = 0x002c (  44), prologues   0, e
DEFINED SYMBOLS
                            *ABS*:0000000000000000 nrk_status.c
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccSiWohA.s:2      *ABS*:000000000000003f __SREG__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccSiWohA.s:3      *ABS*:000000000000003e __SP_H__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccSiWohA.s:4      *ABS*:000000000000003d __SP_L__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccSiWohA.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccSiWohA.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccSiWohA.s:112    .text:0000000000000000 _nrk_startup_error
                            *COM*:0000000000000004 _nrk_signal_list
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000001 error_num

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
