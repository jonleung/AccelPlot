   1               		.file	"nrk_events.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 128               	.global	nrk_signal_create
 130               	nrk_signal_create:
 131               		.stabd	46,0,0
   1:../../src/kernel/source/nrk_events.c **** /******************************************************************************
   2:../../src/kernel/source/nrk_events.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../src/kernel/source/nrk_events.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../src/kernel/source/nrk_events.c **** *  All rights reserved.
   5:../../src/kernel/source/nrk_events.c **** *
   6:../../src/kernel/source/nrk_events.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../src/kernel/source/nrk_events.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../src/kernel/source/nrk_events.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../src/kernel/source/nrk_events.c **** *
  10:../../src/kernel/source/nrk_events.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../src/kernel/source/nrk_events.c **** *  it under the terms of the GNU General Public License as published by
  12:../../src/kernel/source/nrk_events.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../src/kernel/source/nrk_events.c **** *
  14:../../src/kernel/source/nrk_events.c **** *  This program is distributed in the hope that it will be useful,
  15:../../src/kernel/source/nrk_events.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../src/kernel/source/nrk_events.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../src/kernel/source/nrk_events.c **** *  GNU General Public License for more details.
  18:../../src/kernel/source/nrk_events.c **** *
  19:../../src/kernel/source/nrk_events.c **** *  You should have received a copy of the GNU General Public License
  20:../../src/kernel/source/nrk_events.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../src/kernel/source/nrk_events.c **** *
  22:../../src/kernel/source/nrk_events.c **** *  Contributing Authors (specific to this file):
  23:../../src/kernel/source/nrk_events.c **** *  Anthony Rowe
  24:../../src/kernel/source/nrk_events.c **** *  Zane Starr
  25:../../src/kernel/source/nrk_events.c **** *******************************************************************************/
  26:../../src/kernel/source/nrk_events.c **** 
  27:../../src/kernel/source/nrk_events.c **** #include <nrk.h>
  28:../../src/kernel/source/nrk_events.c **** #include <nrk_events.h>
  29:../../src/kernel/source/nrk_events.c **** #include <nrk_task.h>
  30:../../src/kernel/source/nrk_events.c **** #include <nrk_error.h>
  31:../../src/kernel/source/nrk_events.c **** #include <nrk_scheduler.h>
  32:../../src/kernel/source/nrk_events.c **** #include <include.h>
  33:../../src/kernel/source/nrk_events.c **** #include <ulib.h>
  34:../../src/kernel/source/nrk_events.c **** #include <nrk_timer.h>
  35:../../src/kernel/source/nrk_events.c **** #include <nrk_time.h>
  36:../../src/kernel/source/nrk_events.c **** #include <nrk_cfg.h>
  37:../../src/kernel/source/nrk_events.c **** #include <nrk_cpu.h>
  38:../../src/kernel/source/nrk_events.c **** #include <nrk_defs.h>
  39:../../src/kernel/source/nrk_events.c **** 
  40:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_create()
  41:../../src/kernel/source/nrk_events.c **** {
 133               	.LM0:
 134               	.LFBB1:
 135               	/* prologue: frame size=0 */
 136               	/* prologue end (size=0) */
  42:../../src/kernel/source/nrk_events.c **** 	uint8_t i=0;
  43:../../src/kernel/source/nrk_events.c **** 	for(i=0;i<32;i++)   
  44:../../src/kernel/source/nrk_events.c **** 	{                         
  45:../../src/kernel/source/nrk_events.c **** 		if( !(_nrk_signal_list & SIG(i)))
 138               	.LM1:
 139 0000 4091 0000 		lds r20,_nrk_signal_list
 140 0004 5091 0000 		lds r21,(_nrk_signal_list)+1
 141 0008 6091 0000 		lds r22,(_nrk_signal_list)+2
 142 000c 7091 0000 		lds r23,(_nrk_signal_list)+3
 143 0010 20E0      		ldi r18,lo8(0)
 144 0012 30E0      		ldi r19,hi8(0)
 145               	.L2:
 147               	.LM2:
 148 0014 DB01      		movw r26,r22
 149 0016 CA01      		movw r24,r20
 150 0018 022E      		mov r0,r18
 151 001a 00C0      		rjmp 2f
 152 001c B695      	1:	lsr r27
 153 001e A795      		ror r26
 154 0020 9795      		ror r25
 155 0022 8795      		ror r24
 156 0024 0A94      	2:	dec r0
 157 0026 02F4      		brpl 1b
 158 0028 8170      		andi r24,lo8(1)
 159 002a 9070      		andi r25,hi8(1)
 160 002c 892B      		or r24,r25
 161 002e 01F4      		brne .L3
  46:../../src/kernel/source/nrk_events.c **** 		{    
  47:../../src/kernel/source/nrk_events.c **** 			_nrk_signal_list|=SIG(i);
 163               	.LM3:
 164 0030 81E0      		ldi r24,lo8(1)
 165 0032 90E0      		ldi r25,hi8(1)
 166 0034 A0E0      		ldi r26,hlo8(1)
 167 0036 B0E0      		ldi r27,hhi8(1)
 168 0038 022E      		mov r0,r18
 169 003a 00C0      		rjmp 2f
 170 003c 880F      	1:	lsl r24
 171 003e 991F      		rol r25
 172 0040 AA1F      		rol r26
 173 0042 BB1F      		rol r27
 174 0044 0A94      	2:	dec r0
 175 0046 02F4      		brpl 1b
 176 0048 842B      		or r24,r20
 177 004a 952B      		or r25,r21
 178 004c A62B      		or r26,r22
 179 004e B72B      		or r27,r23
 180 0050 8093 0000 		sts _nrk_signal_list,r24
 181 0054 9093 0000 		sts (_nrk_signal_list)+1,r25
 182 0058 A093 0000 		sts (_nrk_signal_list)+2,r26
 183 005c B093 0000 		sts (_nrk_signal_list)+3,r27
  48:../../src/kernel/source/nrk_events.c **** 			return i;
 185               	.LM4:
 186 0060 822F      		mov r24,r18
 187 0062 9927      		clr r25
 188 0064 87FD      		sbrc r24,7
 189 0066 9095      		com r25
 190 0068 0895      		ret
 191               	.L3:
 192 006a 2F5F      		subi r18,lo8(-(1))
 193 006c 3F4F      		sbci r19,hi8(-(1))
 195               	.LM5:
 196 006e 2032      		cpi r18,32
 197 0070 3105      		cpc r19,__zero_reg__
 198 0072 01F4      		brne .L2
 199 0074 8FEF      		ldi r24,lo8(-1)
 200 0076 9FEF      		ldi r25,hi8(-1)
  49:../../src/kernel/source/nrk_events.c **** 		}
  50:../../src/kernel/source/nrk_events.c **** 	}
  51:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
  52:../../src/kernel/source/nrk_events.c **** 
  53:../../src/kernel/source/nrk_events.c **** 
  54:../../src/kernel/source/nrk_events.c **** }
 202               	.LM6:
 203 0078 0895      		ret
 204               	/* epilogue: frame size=0 */
 205               	/* epilogue: noreturn */
 206               	/* epilogue end (size=0) */
 207               	/* function nrk_signal_create size 61 (61) */
 212               	.Lscope1:
 214               		.stabd	78,0,0
 216               	.global	nrk_signal_get_registered_mask
 218               	nrk_signal_get_registered_mask:
 219               		.stabd	46,0,0
  55:../../src/kernel/source/nrk_events.c **** 
  56:../../src/kernel/source/nrk_events.c **** uint32_t nrk_signal_get_registered_mask()
  57:../../src/kernel/source/nrk_events.c **** {
 221               	.LM7:
 222               	.LFBB2:
 223               	/* prologue: frame size=0 */
 224               	/* prologue end (size=0) */
 225 007a E091 0000 		lds r30,nrk_cur_task_TCB
 226 007e F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 227 0082 6585      		ldd r22,Z+13
 228 0084 7685      		ldd r23,Z+14
 229 0086 8785      		ldd r24,Z+15
 230 0088 9089      		ldd r25,Z+16
 231               	/* epilogue: frame size=0 */
 232 008a 0895      		ret
 233               	/* epilogue end (size=1) */
 234               	/* function nrk_signal_get_registered_mask size 9 (8) */
 236               	.Lscope2:
 238               		.stabd	78,0,0
 241               	.global	nrk_signal_unregister
 243               	nrk_signal_unregister:
 244               		.stabd	46,0,0
  58:../../src/kernel/source/nrk_events.c ****         return nrk_cur_task_TCB->registered_signal_mask;
  59:../../src/kernel/source/nrk_events.c **** }
  60:../../src/kernel/source/nrk_events.c **** 
  61:../../src/kernel/source/nrk_events.c **** //return the number removed from signal set
  62:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_delete(nrk_sig_t sig_id)
  63:../../src/kernel/source/nrk_events.c **** {
  64:../../src/kernel/source/nrk_events.c **** 	uint8_t task_ID;
  65:../../src/kernel/source/nrk_events.c **** 	uint32_t sig_mask;
  66:../../src/kernel/source/nrk_events.c **** 
  67:../../src/kernel/source/nrk_events.c **** 	sig_mask=SIG(sig_id);
  68:../../src/kernel/source/nrk_events.c **** 
  69:../../src/kernel/source/nrk_events.c **** 	if( (sig_mask & _nrk_signal_list)==0) return NRK_ERROR; 
  70:../../src/kernel/source/nrk_events.c **** 
  71:../../src/kernel/source/nrk_events.c **** 	nrk_int_disable();
  72:../../src/kernel/source/nrk_events.c **** 	for (task_ID=0; task_ID < NRK_MAX_TASKS; task_ID++){
  73:../../src/kernel/source/nrk_events.c **** 		if(nrk_task_TCB[task_ID].task_ID==-1) continue;
  74:../../src/kernel/source/nrk_events.c **** 		// Check for tasks waiting on the signal
  75:../../src/kernel/source/nrk_events.c **** 		// If there is a task that is waiting on just this signal
  76:../../src/kernel/source/nrk_events.c **** 		// then we need to change it to the normal SUSPEND state
  77:../../src/kernel/source/nrk_events.c **** 		if(nrk_task_TCB[task_ID].registered_signal_mask==sig_mask) //check to make sure its only signal i
  78:../../src/kernel/source/nrk_events.c **** 		{
  79:../../src/kernel/source/nrk_events.c **** 		      //  printf("delete t(%i) signal(%li)\r\n",task_ID,nrk_task_TCB[task_ID].registered_signal_m
  80:../../src/kernel/source/nrk_events.c **** 			nrk_task_TCB[task_ID].active_signal_mask=0;
  81:../../src/kernel/source/nrk_events.c **** 			nrk_task_TCB[task_ID].event_suspend=0;
  82:../../src/kernel/source/nrk_events.c **** 			nrk_task_TCB[task_ID].task_state=SUSPENDED;
  83:../../src/kernel/source/nrk_events.c **** 		}
  84:../../src/kernel/source/nrk_events.c **** 		nrk_task_TCB[task_ID].registered_signal_mask&=~sig_mask; //cheaper to remove than do a check
  85:../../src/kernel/source/nrk_events.c **** 		nrk_task_TCB[task_ID].active_signal_mask&=~sig_mask; //cheaper to remove than do a check
  86:../../src/kernel/source/nrk_events.c **** 
  87:../../src/kernel/source/nrk_events.c **** 	}
  88:../../src/kernel/source/nrk_events.c **** 	
  89:../../src/kernel/source/nrk_events.c **** 	_nrk_signal_list&=~SIG(sig_id);
  90:../../src/kernel/source/nrk_events.c **** 	nrk_int_enable();
  91:../../src/kernel/source/nrk_events.c **** 
  92:../../src/kernel/source/nrk_events.c **** 	return NRK_OK;
  93:../../src/kernel/source/nrk_events.c **** }
  94:../../src/kernel/source/nrk_events.c **** 
  95:../../src/kernel/source/nrk_events.c **** 
  96:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_unregister(int8_t sig_id)
  97:../../src/kernel/source/nrk_events.c **** {
 246               	.LM8:
 247               	.LFBB3:
 248               	/* prologue: frame size=0 */
 249 008c EF92      		push r14
 250 008e FF92      		push r15
 251 0090 0F93      		push r16
 252 0092 1F93      		push r17
 253               	/* prologue end (size=4) */
  98:../../src/kernel/source/nrk_events.c **** uint32_t sig_mask;
  99:../../src/kernel/source/nrk_events.c **** 
 100:../../src/kernel/source/nrk_events.c **** sig_mask=SIG(sig_id);
 255               	.LM9:
 256 0094 21E0      		ldi r18,lo8(1)
 257 0096 30E0      		ldi r19,hi8(1)
 258 0098 40E0      		ldi r20,hlo8(1)
 259 009a 50E0      		ldi r21,hhi8(1)
 260 009c 00C0      		rjmp 2f
 261 009e 220F      	1:	lsl r18
 262 00a0 331F      		rol r19
 263 00a2 441F      		rol r20
 264 00a4 551F      		rol r21
 265 00a6 8A95      	2:	dec r24
 266 00a8 02F4      		brpl 1b
 101:../../src/kernel/source/nrk_events.c **** 
 102:../../src/kernel/source/nrk_events.c **** 	if(nrk_cur_task_TCB->registered_signal_mask & sig_mask)
 268               	.LM10:
 269 00aa E091 0000 		lds r30,nrk_cur_task_TCB
 270 00ae F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 271 00b2 E584      		ldd r14,Z+13
 272 00b4 F684      		ldd r15,Z+14
 273 00b6 0785      		ldd r16,Z+15
 274 00b8 1089      		ldd r17,Z+16
 275 00ba DA01      		movw r26,r20
 276 00bc C901      		movw r24,r18
 277 00be 8E21      		and r24,r14
 278 00c0 9F21      		and r25,r15
 279 00c2 A023      		and r26,r16
 280 00c4 B123      		and r27,r17
 281 00c6 0097      		sbiw r24,0
 282 00c8 A105      		cpc r26,__zero_reg__
 283 00ca B105      		cpc r27,__zero_reg__
 284 00cc 01F4      		brne .L13
 286               	.LM11:
 287 00ce 8FEF      		ldi r24,lo8(-1)
 288 00d0 9FEF      		ldi r25,hi8(-1)
 289 00d2 00C0      		rjmp .L15
 290               	.L13:
 103:../../src/kernel/source/nrk_events.c **** 	{
 104:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->registered_signal_mask&=~(sig_mask); 	
 292               	.LM12:
 293 00d4 2095      		com r18
 294 00d6 3095      		com r19
 295 00d8 4095      		com r20
 296 00da 5095      		com r21
 297 00dc E222      		and r14,r18
 298 00de F322      		and r15,r19
 299 00e0 0423      		and r16,r20
 300 00e2 1523      		and r17,r21
 301 00e4 E586      		std Z+13,r14
 302 00e6 F686      		std Z+14,r15
 303 00e8 0787      		std Z+15,r16
 304 00ea 108B      		std Z+16,r17
 105:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->active_signal_mask&=~(sig_mask); 	
 306               	.LM13:
 307 00ec 8189      		ldd r24,Z+17
 308 00ee 9289      		ldd r25,Z+18
 309 00f0 A389      		ldd r26,Z+19
 310 00f2 B489      		ldd r27,Z+20
 311 00f4 8223      		and r24,r18
 312 00f6 9323      		and r25,r19
 313 00f8 A423      		and r26,r20
 314 00fa B523      		and r27,r21
 315 00fc 818B      		std Z+17,r24
 316 00fe 928B      		std Z+18,r25
 317 0100 A38B      		std Z+19,r26
 318 0102 B48B      		std Z+20,r27
 319 0104 81E0      		ldi r24,lo8(1)
 320 0106 90E0      		ldi r25,hi8(1)
 321               	.L15:
 322               	/* epilogue: frame size=0 */
 323 0108 1F91      		pop r17
 324 010a 0F91      		pop r16
 325 010c FF90      		pop r15
 326 010e EF90      		pop r14
 327 0110 0895      		ret
 328               	/* epilogue end (size=5) */
 329               	/* function nrk_signal_unregister size 68 (59) */
 334               	.Lscope3:
 336               		.stabd	78,0,0
 339               	.global	nrk_signal_register
 341               	nrk_signal_register:
 342               		.stabd	46,0,0
 106:../../src/kernel/source/nrk_events.c **** 	}
 107:../../src/kernel/source/nrk_events.c **** 	else
 108:../../src/kernel/source/nrk_events.c **** 		return NRK_ERROR;
 109:../../src/kernel/source/nrk_events.c **** return NRK_OK;
 110:../../src/kernel/source/nrk_events.c **** }
 111:../../src/kernel/source/nrk_events.c **** 
 112:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_register(int8_t sig_id)
 113:../../src/kernel/source/nrk_events.c **** {
 344               	.LM14:
 345               	.LFBB4:
 346               	/* prologue: frame size=0 */
 347               	/* prologue end (size=0) */
 114:../../src/kernel/source/nrk_events.c **** 
 115:../../src/kernel/source/nrk_events.c **** 	// Make sure the signal was created...
 116:../../src/kernel/source/nrk_events.c **** 	if(SIG(sig_id) & _nrk_signal_list )
 349               	.LM15:
 350 0112 682F      		mov r22,r24
 351 0114 7727      		clr r23
 352 0116 67FD      		sbrc r22,7
 353 0118 7095      		com r23
 354 011a 8091 0000 		lds r24,_nrk_signal_list
 355 011e 9091 0000 		lds r25,(_nrk_signal_list)+1
 356 0122 A091 0000 		lds r26,(_nrk_signal_list)+2
 357 0126 B091 0000 		lds r27,(_nrk_signal_list)+3
 358 012a 062E      		mov r0,r22
 359 012c 00C0      		rjmp 2f
 360 012e B695      	1:	lsr r27
 361 0130 A795      		ror r26
 362 0132 9795      		ror r25
 363 0134 8795      		ror r24
 364 0136 0A94      	2:	dec r0
 365 0138 02F4      		brpl 1b
 366 013a 8170      		andi r24,lo8(1)
 367 013c 9070      		andi r25,hi8(1)
 368 013e 892B      		or r24,r25
 369 0140 01F4      		brne .L18
 371               	.LM16:
 372 0142 8FEF      		ldi r24,lo8(-1)
 373 0144 9FEF      		ldi r25,hi8(-1)
 374 0146 0895      		ret
 375               	.L18:
 117:../../src/kernel/source/nrk_events.c **** 	{
 118:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->registered_signal_mask|=SIG(sig_id); 	
 377               	.LM17:
 378 0148 E091 0000 		lds r30,nrk_cur_task_TCB
 379 014c F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 380 0150 21E0      		ldi r18,lo8(1)
 381 0152 30E0      		ldi r19,hi8(1)
 382 0154 40E0      		ldi r20,hlo8(1)
 383 0156 50E0      		ldi r21,hhi8(1)
 384 0158 00C0      		rjmp 2f
 385 015a 220F      	1:	lsl r18
 386 015c 331F      		rol r19
 387 015e 441F      		rol r20
 388 0160 551F      		rol r21
 389 0162 6A95      	2:	dec r22
 390 0164 02F4      		brpl 1b
 391 0166 8585      		ldd r24,Z+13
 392 0168 9685      		ldd r25,Z+14
 393 016a A785      		ldd r26,Z+15
 394 016c B089      		ldd r27,Z+16
 395 016e 822B      		or r24,r18
 396 0170 932B      		or r25,r19
 397 0172 A42B      		or r26,r20
 398 0174 B52B      		or r27,r21
 399 0176 8587      		std Z+13,r24
 400 0178 9687      		std Z+14,r25
 401 017a A787      		std Z+15,r26
 402 017c B08B      		std Z+16,r27
 403 017e 81E0      		ldi r24,lo8(1)
 404 0180 90E0      		ldi r25,hi8(1)
 119:../../src/kernel/source/nrk_events.c **** 		return NRK_OK;
 120:../../src/kernel/source/nrk_events.c **** 	}
 121:../../src/kernel/source/nrk_events.c ****             
 122:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
 123:../../src/kernel/source/nrk_events.c **** }
 406               	.LM18:
 407 0182 0895      		ret
 408               	/* epilogue: frame size=0 */
 409               	/* epilogue: noreturn */
 410               	/* epilogue end (size=0) */
 411               	/* function nrk_signal_register size 58 (58) */
 413               	.Lscope4:
 415               		.stabd	78,0,0
 419               	.global	nrk_sem_create
 421               	nrk_sem_create:
 422               		.stabd	46,0,0
 124:../../src/kernel/source/nrk_events.c **** 
 125:../../src/kernel/source/nrk_events.c **** int8_t nrk_event_signal(int8_t sig_id)
 126:../../src/kernel/source/nrk_events.c **** {
 127:../../src/kernel/source/nrk_events.c **** 
 128:../../src/kernel/source/nrk_events.c **** 	uint8_t task_ID;
 129:../../src/kernel/source/nrk_events.c **** 	uint8_t event_occured=0;
 130:../../src/kernel/source/nrk_events.c **** 	uint32_t sig_mask;
 131:../../src/kernel/source/nrk_events.c **** 
 132:../../src/kernel/source/nrk_events.c **** 	sig_mask=SIG(sig_id);
 133:../../src/kernel/source/nrk_events.c **** 	// Check if signal was created
 134:../../src/kernel/source/nrk_events.c **** 	// Signal was not created
 135:../../src/kernel/source/nrk_events.c **** 	if((sig_mask & _nrk_signal_list)==0 ) { _nrk_errno_set(1); return NRK_ERROR;}
 136:../../src/kernel/source/nrk_events.c **** 	
 137:../../src/kernel/source/nrk_events.c **** 	//needs to be atomic otherwise run the risk of multiple tasks being scheduled late and not in orde
 138:../../src/kernel/source/nrk_events.c **** 	nrk_int_disable();
 139:../../src/kernel/source/nrk_events.c **** 	for (task_ID=0; task_ID < NRK_MAX_TASKS; task_ID++){
 140:../../src/kernel/source/nrk_events.c **** 
 141:../../src/kernel/source/nrk_events.c **** 
 142:../../src/kernel/source/nrk_events.c **** 	//	if (nrk_task_TCB[task_ID].task_state == EVENT_SUSPENDED)   
 143:../../src/kernel/source/nrk_events.c **** 	//	{
 144:../../src/kernel/source/nrk_events.c **** 	//	printf( "task %d is event suspended\r\n",task_ID );
 145:../../src/kernel/source/nrk_events.c **** 			if(nrk_task_TCB[task_ID].event_suspend==SIG_EVENT_SUSPENDED)
 146:../../src/kernel/source/nrk_events.c **** 				if((nrk_task_TCB[task_ID].active_signal_mask & sig_mask))
 147:../../src/kernel/source/nrk_events.c **** 				{
 148:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].task_state=SUSPENDED;
 149:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].next_wakeup=0;
 150:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].event_suspend=0;
 151:../../src/kernel/source/nrk_events.c **** 					// Add the event trigger here so it is returned
 152:../../src/kernel/source/nrk_events.c **** 					// from nrk_event_wait()
 153:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].active_signal_mask=sig_mask;
 154:../../src/kernel/source/nrk_events.c **** 					event_occured=1;
 155:../../src/kernel/source/nrk_events.c **** 				}
 156:../../src/kernel/source/nrk_events.c **** 
 157:../../src/kernel/source/nrk_events.c **** 			if(nrk_task_TCB[task_ID].event_suspend==RSRC_EVENT_SUSPENDED)
 158:../../src/kernel/source/nrk_events.c **** 				if((nrk_task_TCB[task_ID].active_signal_mask == sig_mask))
 159:../../src/kernel/source/nrk_events.c **** 				{
 160:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].task_state=SUSPENDED;
 161:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].next_wakeup=0;
 162:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].event_suspend=0;
 163:../../src/kernel/source/nrk_events.c **** 					// Add the event trigger here so it is returned
 164:../../src/kernel/source/nrk_events.c **** 					// from nrk_event_wait()
 165:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].active_signal_mask=0;
 166:../../src/kernel/source/nrk_events.c **** 					event_occured=1;
 167:../../src/kernel/source/nrk_events.c **** 				}   
 168:../../src/kernel/source/nrk_events.c **** 
 169:../../src/kernel/source/nrk_events.c **** 	//	}
 170:../../src/kernel/source/nrk_events.c **** 	}
 171:../../src/kernel/source/nrk_events.c **** 	nrk_int_enable();
 172:../../src/kernel/source/nrk_events.c **** 	if(event_occured)
 173:../../src/kernel/source/nrk_events.c **** 	{
 174:../../src/kernel/source/nrk_events.c **** 		return NRK_OK;
 175:../../src/kernel/source/nrk_events.c **** 	} 
 176:../../src/kernel/source/nrk_events.c **** 	// No task was waiting on the signal
 177:../../src/kernel/source/nrk_events.c **** 	_nrk_errno_set(2);
 178:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
 179:../../src/kernel/source/nrk_events.c **** }
 180:../../src/kernel/source/nrk_events.c **** 
 181:../../src/kernel/source/nrk_events.c **** 
 182:../../src/kernel/source/nrk_events.c **** uint32_t nrk_event_wait(uint32_t event_mask)
 183:../../src/kernel/source/nrk_events.c **** {
 184:../../src/kernel/source/nrk_events.c **** 
 185:../../src/kernel/source/nrk_events.c **** 	// FIXME: Should go through list and check that all masks are registered, not just 1
 186:../../src/kernel/source/nrk_events.c **** 	if(event_mask &  nrk_cur_task_TCB->registered_signal_mask)
 187:../../src/kernel/source/nrk_events.c **** 	  {
 188:../../src/kernel/source/nrk_events.c **** 	   nrk_cur_task_TCB->active_signal_mask=event_mask; 
 189:../../src/kernel/source/nrk_events.c **** 	   nrk_cur_task_TCB->event_suspend=SIG_EVENT_SUSPENDED; 
 190:../../src/kernel/source/nrk_events.c **** 	  }
 191:../../src/kernel/source/nrk_events.c **** 	else
 192:../../src/kernel/source/nrk_events.c **** 	  {
 193:../../src/kernel/source/nrk_events.c **** 	   return 0;
 194:../../src/kernel/source/nrk_events.c **** 	  }
 195:../../src/kernel/source/nrk_events.c **** 
 196:../../src/kernel/source/nrk_events.c **** 	if(event_mask & SIG(nrk_wakeup_signal))
 197:../../src/kernel/source/nrk_events.c **** 		nrk_wait_until_nw();
 198:../../src/kernel/source/nrk_events.c **** 	else
 199:../../src/kernel/source/nrk_events.c **** 		nrk_wait_until_ticks(0);
 200:../../src/kernel/source/nrk_events.c **** 	//unmask the signal when its return so it has logical value like 1 to or whatever was user defined
 201:../../src/kernel/source/nrk_events.c **** 	return ( (nrk_cur_task_TCB->active_signal_mask));
 202:../../src/kernel/source/nrk_events.c **** }
 203:../../src/kernel/source/nrk_events.c **** 
 204:../../src/kernel/source/nrk_events.c **** int8_t nrk_sem_query(nrk_sem_t *rsrc )
 205:../../src/kernel/source/nrk_events.c **** {
 206:../../src/kernel/source/nrk_events.c **** 	int8_t id;
 207:../../src/kernel/source/nrk_events.c **** 	id=nrk_get_resource_index(rsrc);  
 208:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 209:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 210:../../src/kernel/source/nrk_events.c **** 	
 211:../../src/kernel/source/nrk_events.c **** 	return(nrk_sem_list[id].value);
 212:../../src/kernel/source/nrk_events.c **** }
 213:../../src/kernel/source/nrk_events.c **** 
 214:../../src/kernel/source/nrk_events.c **** 
 215:../../src/kernel/source/nrk_events.c **** 
 216:../../src/kernel/source/nrk_events.c **** int8_t nrk_sem_pend(nrk_sem_t *rsrc )
 217:../../src/kernel/source/nrk_events.c **** {
 218:../../src/kernel/source/nrk_events.c **** 	int8_t id;
 219:../../src/kernel/source/nrk_events.c **** 	id=nrk_get_resource_index(rsrc);  
 220:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 221:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 222:../../src/kernel/source/nrk_events.c **** 	
 223:../../src/kernel/source/nrk_events.c **** 	nrk_int_disable();
 224:../../src/kernel/source/nrk_events.c **** 	if(nrk_sem_list[id].value==0)
 225:../../src/kernel/source/nrk_events.c **** 	{
 226:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->event_suspend|=RSRC_EVENT_SUSPENDED;
 227:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->active_signal_mask=id;
 228:../../src/kernel/source/nrk_events.c **** 		// Wait on suspend event
 229:../../src/kernel/source/nrk_events.c **** 		nrk_int_enable();
 230:../../src/kernel/source/nrk_events.c **** 		nrk_wait_until_ticks(0);
 231:../../src/kernel/source/nrk_events.c **** 	}
 232:../../src/kernel/source/nrk_events.c **** 
 233:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].value--;	
 234:../../src/kernel/source/nrk_events.c **** 	nrk_cur_task_TCB->task_prio_ceil=nrk_sem_list[id].resource_ceiling;
 235:../../src/kernel/source/nrk_events.c **** 	nrk_cur_task_TCB->elevated_prio_flag=1;
 236:../../src/kernel/source/nrk_events.c **** 	nrk_int_enable();
 237:../../src/kernel/source/nrk_events.c **** 
 238:../../src/kernel/source/nrk_events.c **** 	return NRK_OK;
 239:../../src/kernel/source/nrk_events.c **** }
 240:../../src/kernel/source/nrk_events.c **** 
 241:../../src/kernel/source/nrk_events.c **** 
 242:../../src/kernel/source/nrk_events.c **** 
 243:../../src/kernel/source/nrk_events.c **** int8_t nrk_sem_post(nrk_sem_t *rsrc)
 244:../../src/kernel/source/nrk_events.c **** {
 245:../../src/kernel/source/nrk_events.c **** 	int8_t id=nrk_get_resource_index(rsrc);	
 246:../../src/kernel/source/nrk_events.c **** 	int8_t task_ID;
 247:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 248:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 249:../../src/kernel/source/nrk_events.c **** 
 250:../../src/kernel/source/nrk_events.c **** 	if(nrk_sem_list[id].value<nrk_sem_list[id].count)
 251:../../src/kernel/source/nrk_events.c **** 	{
 252:../../src/kernel/source/nrk_events.c **** 		// Signal RSRC Event		
 253:../../src/kernel/source/nrk_events.c **** 		nrk_int_disable();
 254:../../src/kernel/source/nrk_events.c **** 
 255:../../src/kernel/source/nrk_events.c **** 		nrk_sem_list[id].value++;
 256:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->elevated_prio_flag=0;
 257:../../src/kernel/source/nrk_events.c **** 
 258:../../src/kernel/source/nrk_events.c **** 		for (task_ID=0; task_ID < NRK_MAX_TASKS; task_ID++){
 259:../../src/kernel/source/nrk_events.c **** 			if(nrk_task_TCB[task_ID].event_suspend==RSRC_EVENT_SUSPENDED)
 260:../../src/kernel/source/nrk_events.c **** 				if((nrk_task_TCB[task_ID].active_signal_mask == id))
 261:../../src/kernel/source/nrk_events.c **** 				{
 262:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].task_state=SUSPENDED;
 263:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].next_wakeup=0;
 264:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].event_suspend=0;
 265:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].active_signal_mask=0;
 266:../../src/kernel/source/nrk_events.c **** 				}   
 267:../../src/kernel/source/nrk_events.c **** 
 268:../../src/kernel/source/nrk_events.c **** 		}
 269:../../src/kernel/source/nrk_events.c **** 		nrk_int_enable();
 270:../../src/kernel/source/nrk_events.c **** 	}
 271:../../src/kernel/source/nrk_events.c **** 		
 272:../../src/kernel/source/nrk_events.c **** return NRK_OK;
 273:../../src/kernel/source/nrk_events.c **** }
 274:../../src/kernel/source/nrk_events.c **** 
 275:../../src/kernel/source/nrk_events.c **** int8_t  nrk_sem_delete(nrk_sem_t *rsrc)
 276:../../src/kernel/source/nrk_events.c **** {
 277:../../src/kernel/source/nrk_events.c **** int8_t id=nrk_get_resource_index(rsrc);	
 278:../../src/kernel/source/nrk_events.c **** 	int8_t task_ID;
 279:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 280:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 281:../../src/kernel/source/nrk_events.c **** 
 282:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].count=-1;
 283:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].value=-1;
 284:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].resource_ceiling=-1;
 285:../../src/kernel/source/nrk_events.c **** 	_nrk_resource_cnt--;
 286:../../src/kernel/source/nrk_events.c **** return NRK_OK;
 287:../../src/kernel/source/nrk_events.c **** }
 288:../../src/kernel/source/nrk_events.c **** 
 289:../../src/kernel/source/nrk_events.c **** nrk_sem_t* nrk_sem_create(uint8_t count,uint8_t ceiling_prio)
 290:../../src/kernel/source/nrk_events.c **** {
 424               	.LM19:
 425               	.LFBB5:
 426               	/* prologue: frame size=0 */
 427               	/* prologue end (size=0) */
 428 0184 382F      		mov r19,r24
 291:../../src/kernel/source/nrk_events.c **** uint8_t i;
 292:../../src/kernel/source/nrk_events.c **** 	if(_nrk_resource_cnt>=(NRK_MAX_RESOURCE_CNT-1))
 430               	.LM20:
 431 0186 8091 0000 		lds r24,_nrk_resource_cnt
 432 018a 8823      		tst r24
 433 018c 01F0      		breq .L23
 435               	.LM21:
 436 018e 80E0      		ldi r24,lo8(0)
 437 0190 90E0      		ldi r25,hi8(0)
 438 0192 0895      		ret
 439               	.L23:
 293:../../src/kernel/source/nrk_events.c **** 		return NULL;  
 294:../../src/kernel/source/nrk_events.c **** 	for(i=0; i<NRK_MAX_RESOURCE_CNT; i++ )
 295:../../src/kernel/source/nrk_events.c **** 		{
 296:../../src/kernel/source/nrk_events.c **** 		   if(nrk_sem_list[i].count==-1) break;
 441               	.LM22:
 442 0194 8091 0000 		lds r24,nrk_sem_list
 443 0198 8F3F      		cpi r24,lo8(-1)
 444 019a 01F4      		brne .L26
 445 019c 20E0      		ldi r18,lo8(0)
 446 019e 00C0      		rjmp .L28
 447               	.L26:
 448 01a0 8091 0000 		lds r24,nrk_sem_list+3
 449 01a4 8F3F      		cpi r24,lo8(-1)
 450 01a6 01F0      		breq .L29
 451 01a8 22E0      		ldi r18,lo8(2)
 452 01aa 00C0      		rjmp .L28
 453               	.L29:
 454 01ac 21E0      		ldi r18,lo8(1)
 455               	.L28:
 297:../../src/kernel/source/nrk_events.c **** 		}
 298:../../src/kernel/source/nrk_events.c **** 	                                              
 299:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[i].value=count;
 457               	.LM23:
 458 01ae 822F      		mov r24,r18
 459 01b0 9927      		clr r25
 460 01b2 FC01      		movw r30,r24
 461 01b4 EE0F      		lsl r30
 462 01b6 FF1F      		rol r31
 463 01b8 E80F      		add r30,r24
 464 01ba F91F      		adc r31,r25
 465 01bc E050      		subi r30,lo8(-(nrk_sem_list))
 466 01be F040      		sbci r31,hi8(-(nrk_sem_list))
 467 01c0 3283      		std Z+2,r19
 300:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[i].count=count;
 469               	.LM24:
 470 01c2 3083      		st Z,r19
 301:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[i].resource_ceiling=ceiling_prio;
 472               	.LM25:
 473 01c4 6183      		std Z+1,r22
 302:../../src/kernel/source/nrk_events.c **** 	_nrk_resource_cnt++;
 475               	.LM26:
 476 01c6 81E0      		ldi r24,lo8(1)
 477 01c8 8093 0000 		sts _nrk_resource_cnt,r24
 303:../../src/kernel/source/nrk_events.c **** 	return	&nrk_sem_list[i];
 479               	.LM27:
 480 01cc 83E0      		ldi r24,lo8(3)
 481 01ce 289F      		mul r18,r24
 482 01d0 C001      		movw r24,r0
 483 01d2 1124      		clr r1
 484 01d4 8050      		subi r24,lo8(-(nrk_sem_list))
 485 01d6 9040      		sbci r25,hi8(-(nrk_sem_list))
 304:../../src/kernel/source/nrk_events.c **** }
 487               	.LM28:
 488 01d8 0895      		ret
 489               	/* epilogue: frame size=0 */
 490               	/* epilogue: noreturn */
 491               	/* epilogue end (size=0) */
 492               	/* function nrk_sem_create size 43 (43) */
 497               	.Lscope5:
 499               		.stabd	78,0,0
 502               	.global	nrk_get_resource_index
 504               	nrk_get_resource_index:
 505               		.stabd	46,0,0
 305:../../src/kernel/source/nrk_events.c **** 
 306:../../src/kernel/source/nrk_events.c **** int8_t nrk_get_resource_index(nrk_sem_t *resrc)
 307:../../src/kernel/source/nrk_events.c **** {
 507               	.LM29:
 508               	.LFBB6:
 509               	/* prologue: frame size=0 */
 510               	/* prologue end (size=0) */
 308:../../src/kernel/source/nrk_events.c **** 	int8_t id;
 309:../../src/kernel/source/nrk_events.c **** 		for(id=0;id<NRK_MAX_RESOURCE_CNT;id++)
 310:../../src/kernel/source/nrk_events.c **** 			if((nrk_sem_t *)(&nrk_sem_list[id])==(nrk_sem_t*)resrc)
 512               	.LM30:
 513 01da 20E0      		ldi r18,hi8(nrk_sem_list)
 514 01dc 8030      		cpi r24,lo8(nrk_sem_list)
 515 01de 9207      		cpc r25,r18
 516 01e0 01F4      		brne .L33
 518               	.LM31:
 519 01e2 80E0      		ldi r24,lo8(0)
 520 01e4 00C0      		rjmp .L35
 521               	.L33:
 522 01e6 8050      		subi r24,lo8(nrk_sem_list+3)
 523 01e8 9040      		sbci r25,hi8(nrk_sem_list+3)
 524 01ea 01F0      		breq .L36
 525 01ec 8FEF      		ldi r24,lo8(-1)
 526 01ee 9FEF      		ldi r25,hi8(-1)
 527 01f0 0895      		ret
 528               	.L36:
 529 01f2 81E0      		ldi r24,lo8(1)
 530               	.L35:
 311:../../src/kernel/source/nrk_events.c **** 				return id;
 532               	.LM32:
 533 01f4 9927      		clr r25
 534 01f6 87FD      		sbrc r24,7
 535 01f8 9095      		com r25
 312:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
 313:../../src/kernel/source/nrk_events.c **** }
 537               	.LM33:
 538 01fa 0895      		ret
 539               	/* epilogue: frame size=0 */
 540               	/* epilogue: noreturn */
 541               	/* epilogue end (size=0) */
 542               	/* function nrk_get_resource_index size 18 (18) */
 547               	.Lscope6:
 549               		.stabd	78,0,0
 552               	.global	nrk_sem_delete
 554               	nrk_sem_delete:
 555               		.stabd	46,0,0
 557               	.LM34:
 558               	.LFBB7:
 559               	/* prologue: frame size=0 */
 560               	/* prologue end (size=0) */
 562               	.LM35:
 563 01fc 0E94 0000 		call nrk_get_resource_index
 565               	.LM36:
 566 0200 8F3F      		cpi r24,lo8(-1)
 567 0202 01F4      		brne .L41
 569               	.LM37:
 570 0204 81E0      		ldi r24,lo8(1)
 571 0206 00C0      		rjmp .L47
 572               	.L41:
 574               	.LM38:
 575 0208 8230      		cpi r24,lo8(2)
 576 020a 01F4      		brne .L44
 577               	.L47:
 578 020c 0E94 0000 		call _nrk_errno_set
 579 0210 8FEF      		ldi r24,lo8(-1)
 580 0212 9FEF      		ldi r25,hi8(-1)
 581 0214 0895      		ret
 582               	.L44:
 584               	.LM39:
 585 0216 9927      		clr r25
 586 0218 87FD      		sbrc r24,7
 587 021a 9095      		com r25
 588 021c FC01      		movw r30,r24
 589 021e EE0F      		lsl r30
 590 0220 FF1F      		rol r31
 591 0222 E80F      		add r30,r24
 592 0224 F91F      		adc r31,r25
 593 0226 E050      		subi r30,lo8(-(nrk_sem_list))
 594 0228 F040      		sbci r31,hi8(-(nrk_sem_list))
 595 022a 8FEF      		ldi r24,lo8(-1)
 596 022c 8083      		st Z,r24
 598               	.LM40:
 599 022e 8283      		std Z+2,r24
 601               	.LM41:
 602 0230 8183      		std Z+1,r24
 604               	.LM42:
 605 0232 8091 0000 		lds r24,_nrk_resource_cnt
 606 0236 8150      		subi r24,lo8(-(-1))
 607 0238 8093 0000 		sts _nrk_resource_cnt,r24
 608 023c 81E0      		ldi r24,lo8(1)
 609 023e 90E0      		ldi r25,hi8(1)
 611               	.LM43:
 612 0240 0895      		ret
 613               	/* epilogue: frame size=0 */
 614               	/* epilogue: noreturn */
 615               	/* epilogue end (size=0) */
 616               	/* function nrk_sem_delete size 35 (35) */
 621               	.Lscope7:
 623               		.stabd	78,0,0
 626               	.global	nrk_sem_query
 628               	nrk_sem_query:
 629               		.stabd	46,0,0
 631               	.LM44:
 632               	.LFBB8:
 633               	/* prologue: frame size=0 */
 634               	/* prologue end (size=0) */
 636               	.LM45:
 637 0242 0E94 0000 		call nrk_get_resource_index
 639               	.LM46:
 640 0246 8F3F      		cpi r24,lo8(-1)
 641 0248 01F4      		brne .L49
 643               	.LM47:
 644 024a 81E0      		ldi r24,lo8(1)
 645 024c 00C0      		rjmp .L55
 646               	.L49:
 648               	.LM48:
 649 024e 8230      		cpi r24,lo8(2)
 650 0250 01F4      		brne .L52
 651               	.L55:
 652 0252 0E94 0000 		call _nrk_errno_set
 653 0256 8FEF      		ldi r24,lo8(-1)
 654 0258 9FEF      		ldi r25,hi8(-1)
 655 025a 0895      		ret
 656               	.L52:
 658               	.LM49:
 659 025c 9927      		clr r25
 660 025e 87FD      		sbrc r24,7
 661 0260 9095      		com r25
 662 0262 FC01      		movw r30,r24
 663 0264 EE0F      		lsl r30
 664 0266 FF1F      		rol r31
 665 0268 E80F      		add r30,r24
 666 026a F91F      		adc r31,r25
 667 026c E050      		subi r30,lo8(-(nrk_sem_list))
 668 026e F040      		sbci r31,hi8(-(nrk_sem_list))
 669 0270 8281      		ldd r24,Z+2
 670 0272 9927      		clr r25
 671 0274 87FD      		sbrc r24,7
 672 0276 9095      		com r25
 674               	.LM50:
 675 0278 0895      		ret
 676               	/* epilogue: frame size=0 */
 677               	/* epilogue: noreturn */
 678               	/* epilogue end (size=0) */
 679               	/* function nrk_sem_query size 28 (28) */
 684               	.Lscope8:
 686               		.stabd	78,0,0
 689               	.global	nrk_sem_post
 691               	nrk_sem_post:
 692               		.stabd	46,0,0
 694               	.LM51:
 695               	.LFBB9:
 696               	/* prologue: frame size=0 */
 697 027a 1F93      		push r17
 698 027c CF93      		push r28
 699 027e DF93      		push r29
 700               	/* prologue end (size=3) */
 702               	.LM52:
 703 0280 0E94 0000 		call nrk_get_resource_index
 704 0284 182F      		mov r17,r24
 706               	.LM53:
 707 0286 8F3F      		cpi r24,lo8(-1)
 708 0288 01F4      		brne .L57
 710               	.LM54:
 711 028a 81E0      		ldi r24,lo8(1)
 712 028c 00C0      		rjmp .L71
 713               	.L57:
 715               	.LM55:
 716 028e 8230      		cpi r24,lo8(2)
 717 0290 01F4      		brne .L60
 718 0292 82E0      		ldi r24,lo8(2)
 719               	.L71:
 720 0294 0E94 0000 		call _nrk_errno_set
 721 0298 8FEF      		ldi r24,lo8(-1)
 722 029a 9FEF      		ldi r25,hi8(-1)
 723 029c 00C0      		rjmp .L59
 724               	.L60:
 726               	.LM56:
 727 029e 9927      		clr r25
 728 02a0 87FD      		sbrc r24,7
 729 02a2 9095      		com r25
 730 02a4 EC01      		movw r28,r24
 731 02a6 CC0F      		lsl r28
 732 02a8 DD1F      		rol r29
 733 02aa C80F      		add r28,r24
 734 02ac D91F      		adc r29,r25
 735 02ae C050      		subi r28,lo8(-(nrk_sem_list))
 736 02b0 D040      		sbci r29,hi8(-(nrk_sem_list))
 737 02b2 9A81      		ldd r25,Y+2
 738 02b4 8881      		ld r24,Y
 739 02b6 9817      		cp r25,r24
 740 02b8 04F0      		brlt .+2
 741 02ba 00C0      		rjmp .L72
 743               	.LM57:
 744 02bc 0E94 0000 		call nrk_int_disable
 746               	.LM58:
 747 02c0 8A81      		ldd r24,Y+2
 748 02c2 8F5F      		subi r24,lo8(-(1))
 749 02c4 8A83      		std Y+2,r24
 751               	.LM59:
 752 02c6 E091 0000 		lds r30,nrk_cur_task_TCB
 753 02ca F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 754 02ce 1482      		std Z+4,__zero_reg__
 756               	.LM60:
 757 02d0 8091 0000 		lds r24,nrk_task_TCB+7
 758 02d4 8230      		cpi r24,lo8(2)
 759 02d6 01F4      		brne .L64
 761               	.LM61:
 762 02d8 212F      		mov r18,r17
 763 02da 3327      		clr r19
 764 02dc 27FD      		sbrc r18,7
 765 02de 3095      		com r19
 766 02e0 432F      		mov r20,r19
 767 02e2 532F      		mov r21,r19
 768 02e4 8091 0000 		lds r24,nrk_task_TCB+17
 769 02e8 9091 0000 		lds r25,(nrk_task_TCB+17)+1
 770 02ec A091 0000 		lds r26,(nrk_task_TCB+17)+2
 771 02f0 B091 0000 		lds r27,(nrk_task_TCB+17)+3
 772 02f4 8217      		cp r24,r18
 773 02f6 9307      		cpc r25,r19
 774 02f8 A407      		cpc r26,r20
 775 02fa B507      		cpc r27,r21
 776 02fc 01F4      		brne .L64
 778               	.LM62:
 779 02fe 83E0      		ldi r24,lo8(3)
 780 0300 8093 0000 		sts nrk_task_TCB+9,r24
 782               	.LM63:
 783 0304 1092 0000 		sts (nrk_task_TCB+21)+1,__zero_reg__
 784 0308 1092 0000 		sts nrk_task_TCB+21,__zero_reg__
 786               	.LM64:
 787 030c 1092 0000 		sts nrk_task_TCB+7,__zero_reg__
 789               	.LM65:
 790 0310 1092 0000 		sts nrk_task_TCB+17,__zero_reg__
 791 0314 1092 0000 		sts (nrk_task_TCB+17)+1,__zero_reg__
 792 0318 1092 0000 		sts (nrk_task_TCB+17)+2,__zero_reg__
 793 031c 1092 0000 		sts (nrk_task_TCB+17)+3,__zero_reg__
 794               	.L64:
 796               	.LM66:
 797 0320 8091 0000 		lds r24,nrk_task_TCB+40
 798 0324 8230      		cpi r24,lo8(2)
 799 0326 01F4      		brne .L67
 801               	.LM67:
 802 0328 212F      		mov r18,r17
 803 032a 3327      		clr r19
 804 032c 27FD      		sbrc r18,7
 805 032e 3095      		com r19
 806 0330 432F      		mov r20,r19
 807 0332 532F      		mov r21,r19
 808 0334 8091 0000 		lds r24,nrk_task_TCB+50
 809 0338 9091 0000 		lds r25,(nrk_task_TCB+50)+1
 810 033c A091 0000 		lds r26,(nrk_task_TCB+50)+2
 811 0340 B091 0000 		lds r27,(nrk_task_TCB+50)+3
 812 0344 8217      		cp r24,r18
 813 0346 9307      		cpc r25,r19
 814 0348 A407      		cpc r26,r20
 815 034a B507      		cpc r27,r21
 816 034c 01F4      		brne .L67
 818               	.LM68:
 819 034e 83E0      		ldi r24,lo8(3)
 820 0350 8093 0000 		sts nrk_task_TCB+42,r24
 822               	.LM69:
 823 0354 1092 0000 		sts (nrk_task_TCB+54)+1,__zero_reg__
 824 0358 1092 0000 		sts nrk_task_TCB+54,__zero_reg__
 826               	.LM70:
 827 035c 1092 0000 		sts nrk_task_TCB+40,__zero_reg__
 829               	.LM71:
 830 0360 1092 0000 		sts nrk_task_TCB+50,__zero_reg__
 831 0364 1092 0000 		sts (nrk_task_TCB+50)+1,__zero_reg__
 832 0368 1092 0000 		sts (nrk_task_TCB+50)+2,__zero_reg__
 833 036c 1092 0000 		sts (nrk_task_TCB+50)+3,__zero_reg__
 834               	.L67:
 836               	.LM72:
 837 0370 0E94 0000 		call nrk_int_enable
 838               	.L72:
 839 0374 81E0      		ldi r24,lo8(1)
 840 0376 90E0      		ldi r25,hi8(1)
 841               	.L59:
 842               	/* epilogue: frame size=0 */
 843 0378 DF91      		pop r29
 844 037a CF91      		pop r28
 845 037c 1F91      		pop r17
 846 037e 0895      		ret
 847               	/* epilogue end (size=4) */
 848               	/* function nrk_sem_post size 131 (124) */
 853               	.Lscope9:
 855               		.stabd	78,0,0
 858               	.global	nrk_event_signal
 860               	nrk_event_signal:
 861               		.stabd	46,0,0
 863               	.LM73:
 864               	.LFBB10:
 865               	/* prologue: frame size=0 */
 866 0380 DF92      		push r13
 867 0382 EF92      		push r14
 868 0384 FF92      		push r15
 869 0386 0F93      		push r16
 870 0388 1F93      		push r17
 871               	/* prologue end (size=5) */
 873               	.LM74:
 874 038a E1E0      		ldi r30,lo8(1)
 875 038c EE2E      		mov r14,r30
 876 038e F12C      		mov r15,__zero_reg__
 877 0390 012D      		mov r16,__zero_reg__
 878 0392 112D      		mov r17,__zero_reg__
 879 0394 00C0      		rjmp 2f
 880 0396 EE0C      	1:	lsl r14
 881 0398 FF1C      		rol r15
 882 039a 001F      		rol r16
 883 039c 111F      		rol r17
 884 039e 8A95      	2:	dec r24
 885 03a0 02F4      		brpl 1b
 887               	.LM75:
 888 03a2 8091 0000 		lds r24,_nrk_signal_list
 889 03a6 9091 0000 		lds r25,(_nrk_signal_list)+1
 890 03aa A091 0000 		lds r26,(_nrk_signal_list)+2
 891 03ae B091 0000 		lds r27,(_nrk_signal_list)+3
 892 03b2 8E21      		and r24,r14
 893 03b4 9F21      		and r25,r15
 894 03b6 A023      		and r26,r16
 895 03b8 B123      		and r27,r17
 896 03ba 0097      		sbiw r24,0
 897 03bc A105      		cpc r26,__zero_reg__
 898 03be B105      		cpc r27,__zero_reg__
 899 03c0 01F4      		brne .L74
 901               	.LM76:
 902 03c2 81E0      		ldi r24,lo8(1)
 903 03c4 00C0      		rjmp .L90
 904               	.L74:
 906               	.LM77:
 907 03c6 0E94 0000 		call nrk_int_disable
 908 03ca E0E0      		ldi r30,lo8(nrk_task_TCB+7)
 909 03cc F0E0      		ldi r31,hi8(nrk_task_TCB+7)
 910 03ce DD24      		clr r13
 911               	.L77:
 913               	.LM78:
 914 03d0 8081      		ld r24,Z
 915 03d2 8130      		cpi r24,lo8(1)
 916 03d4 01F4      		brne .L78
 918               	.LM79:
 919 03d6 8285      		ldd r24,Z+10
 920 03d8 9385      		ldd r25,Z+11
 921 03da A485      		ldd r26,Z+12
 922 03dc B585      		ldd r27,Z+13
 923 03de 8E21      		and r24,r14
 924 03e0 9F21      		and r25,r15
 925 03e2 A023      		and r26,r16
 926 03e4 B123      		and r27,r17
 927 03e6 0097      		sbiw r24,0
 928 03e8 A105      		cpc r26,__zero_reg__
 929 03ea B105      		cpc r27,__zero_reg__
 930 03ec 01F0      		breq .L78
 932               	.LM80:
 933 03ee 83E0      		ldi r24,lo8(3)
 934 03f0 8283      		std Z+2,r24
 936               	.LM81:
 937 03f2 1786      		std Z+15,__zero_reg__
 938 03f4 1686      		std Z+14,__zero_reg__
 940               	.LM82:
 941 03f6 1082      		st Z,__zero_reg__
 943               	.LM83:
 944 03f8 E286      		std Z+10,r14
 945 03fa F386      		std Z+11,r15
 946 03fc 0487      		std Z+12,r16
 947 03fe 1587      		std Z+13,r17
 948 0400 DD24      		clr r13
 949 0402 D394      		inc r13
 950               	.L78:
 952               	.LM84:
 953 0404 8081      		ld r24,Z
 954 0406 8230      		cpi r24,lo8(2)
 955 0408 01F4      		brne .L81
 957               	.LM85:
 958 040a 8285      		ldd r24,Z+10
 959 040c 9385      		ldd r25,Z+11
 960 040e A485      		ldd r26,Z+12
 961 0410 B585      		ldd r27,Z+13
 962 0412 8E15      		cp r24,r14
 963 0414 9F05      		cpc r25,r15
 964 0416 A007      		cpc r26,r16
 965 0418 B107      		cpc r27,r17
 966 041a 01F4      		brne .L81
 968               	.LM86:
 969 041c 83E0      		ldi r24,lo8(3)
 970 041e 8283      		std Z+2,r24
 972               	.LM87:
 973 0420 1786      		std Z+15,__zero_reg__
 974 0422 1686      		std Z+14,__zero_reg__
 976               	.LM88:
 977 0424 1082      		st Z,__zero_reg__
 979               	.LM89:
 980 0426 1286      		std Z+10,__zero_reg__
 981 0428 1386      		std Z+11,__zero_reg__
 982 042a 1486      		std Z+12,__zero_reg__
 983 042c 1586      		std Z+13,__zero_reg__
 984 042e DD24      		clr r13
 985 0430 D394      		inc r13
 986               	.L81:
 987 0432 B196      		adiw r30,33
 989               	.LM90:
 990 0434 80E0      		ldi r24,hi8(nrk_task_TCB+73)
 991 0436 E030      		cpi r30,lo8(nrk_task_TCB+73)
 992 0438 F807      		cpc r31,r24
 993 043a 01F4      		brne .L77
 995               	.LM91:
 996 043c 0E94 0000 		call nrk_int_enable
 998               	.LM92:
 999 0440 DD20      		tst r13
 1000 0442 01F0      		breq .L85
 1001 0444 81E0      		ldi r24,lo8(1)
 1002 0446 90E0      		ldi r25,hi8(1)
 1003 0448 00C0      		rjmp .L76
 1004               	.L85:
 1006               	.LM93:
 1007 044a 82E0      		ldi r24,lo8(2)
 1008               	.L90:
 1009 044c 0E94 0000 		call _nrk_errno_set
 1010 0450 8FEF      		ldi r24,lo8(-1)
 1011 0452 9FEF      		ldi r25,hi8(-1)
 1012               	.L76:
 1013               	/* epilogue: frame size=0 */
 1014 0454 1F91      		pop r17
 1015 0456 0F91      		pop r16
 1016 0458 FF90      		pop r15
 1017 045a EF90      		pop r14
 1018 045c DF90      		pop r13
 1019 045e 0895      		ret
 1020               	/* epilogue end (size=6) */
 1021               	/* function nrk_event_signal size 113 (102) */
 1027               	.Lscope10:
 1029               		.stabd	78,0,0
 1032               	.global	nrk_signal_delete
 1034               	nrk_signal_delete:
 1035               		.stabd	46,0,0
 1037               	.LM94:
 1038               	.LFBB11:
 1039               	/* prologue: frame size=0 */
 1040 0460 EF92      		push r14
 1041 0462 FF92      		push r15
 1042 0464 0F93      		push r16
 1043 0466 1F93      		push r17
 1044 0468 CF93      		push r28
 1045 046a DF93      		push r29
 1046               	/* prologue end (size=6) */
 1048               	.LM95:
 1049 046c C82F      		mov r28,r24
 1050 046e DD27      		clr r29
 1051 0470 C7FD      		sbrc r28,7
 1052 0472 D095      		com r29
 1053 0474 F1E0      		ldi r31,lo8(1)
 1054 0476 EF2E      		mov r14,r31
 1055 0478 F12C      		mov r15,__zero_reg__
 1056 047a 012D      		mov r16,__zero_reg__
 1057 047c 112D      		mov r17,__zero_reg__
 1058 047e 0C2E      		mov r0,r28
 1059 0480 00C0      		rjmp 2f
 1060 0482 EE0C      	1:	lsl r14
 1061 0484 FF1C      		rol r15
 1062 0486 001F      		rol r16
 1063 0488 111F      		rol r17
 1064 048a 0A94      	2:	dec r0
 1065 048c 02F4      		brpl 1b
 1067               	.LM96:
 1068 048e 8091 0000 		lds r24,_nrk_signal_list
 1069 0492 9091 0000 		lds r25,(_nrk_signal_list)+1
 1070 0496 A091 0000 		lds r26,(_nrk_signal_list)+2
 1071 049a B091 0000 		lds r27,(_nrk_signal_list)+3
 1072 049e 8E21      		and r24,r14
 1073 04a0 9F21      		and r25,r15
 1074 04a2 A023      		and r26,r16
 1075 04a4 B123      		and r27,r17
 1076 04a6 0097      		sbiw r24,0
 1077 04a8 A105      		cpc r26,__zero_reg__
 1078 04aa B105      		cpc r27,__zero_reg__
 1079 04ac 01F4      		brne .L92
 1081               	.LM97:
 1082 04ae 8FEF      		ldi r24,lo8(-1)
 1083 04b0 9FEF      		ldi r25,hi8(-1)
 1084 04b2 00C0      		rjmp .L94
 1085               	.L92:
 1087               	.LM98:
 1088 04b4 0E94 0000 		call nrk_int_disable
 1090               	.LM99:
 1091 04b8 8091 0000 		lds r24,nrk_task_TCB+8
 1092 04bc 8F3F      		cpi r24,lo8(-1)
 1093 04be 01F4      		brne .+2
 1094 04c0 00C0      		rjmp .L95
 1096               	.LM100:
 1097 04c2 8091 0000 		lds r24,nrk_task_TCB+13
 1098 04c6 9091 0000 		lds r25,(nrk_task_TCB+13)+1
 1099 04ca A091 0000 		lds r26,(nrk_task_TCB+13)+2
 1100 04ce B091 0000 		lds r27,(nrk_task_TCB+13)+3
 1101 04d2 8E15      		cp r24,r14
 1102 04d4 9F05      		cpc r25,r15
 1103 04d6 A007      		cpc r26,r16
 1104 04d8 B107      		cpc r27,r17
 1105 04da 01F0      		breq .L97
 1106               	.L98:
 1108               	.LM101:
 1109 04dc D801      		movw r26,r16
 1110 04de C701      		movw r24,r14
 1111 04e0 8095      		com r24
 1112 04e2 9095      		com r25
 1113 04e4 A095      		com r26
 1114 04e6 B095      		com r27
 1115 04e8 2091 0000 		lds r18,nrk_task_TCB+13
 1116 04ec 3091 0000 		lds r19,(nrk_task_TCB+13)+1
 1117 04f0 4091 0000 		lds r20,(nrk_task_TCB+13)+2
 1118 04f4 5091 0000 		lds r21,(nrk_task_TCB+13)+3
 1119 04f8 2823      		and r18,r24
 1120 04fa 3923      		and r19,r25
 1121 04fc 4A23      		and r20,r26
 1122 04fe 5B23      		and r21,r27
 1123 0500 2093 0000 		sts nrk_task_TCB+13,r18
 1124 0504 3093 0000 		sts (nrk_task_TCB+13)+1,r19
 1125 0508 4093 0000 		sts (nrk_task_TCB+13)+2,r20
 1126 050c 5093 0000 		sts (nrk_task_TCB+13)+3,r21
 1128               	.LM102:
 1129 0510 2091 0000 		lds r18,nrk_task_TCB+17
 1130 0514 3091 0000 		lds r19,(nrk_task_TCB+17)+1
 1131 0518 4091 0000 		lds r20,(nrk_task_TCB+17)+2
 1132 051c 5091 0000 		lds r21,(nrk_task_TCB+17)+3
 1133 0520 8223      		and r24,r18
 1134 0522 9323      		and r25,r19
 1135 0524 A423      		and r26,r20
 1136 0526 B523      		and r27,r21
 1137 0528 8093 0000 		sts nrk_task_TCB+17,r24
 1138 052c 9093 0000 		sts (nrk_task_TCB+17)+1,r25
 1139 0530 A093 0000 		sts (nrk_task_TCB+17)+2,r26
 1140 0534 B093 0000 		sts (nrk_task_TCB+17)+3,r27
 1141 0538 00C0      		rjmp .L95
 1142               	.L97:
 1144               	.LM103:
 1145 053a 1092 0000 		sts nrk_task_TCB+17,__zero_reg__
 1146 053e 1092 0000 		sts (nrk_task_TCB+17)+1,__zero_reg__
 1147 0542 1092 0000 		sts (nrk_task_TCB+17)+2,__zero_reg__
 1148 0546 1092 0000 		sts (nrk_task_TCB+17)+3,__zero_reg__
 1150               	.LM104:
 1151 054a 1092 0000 		sts nrk_task_TCB+7,__zero_reg__
 1153               	.LM105:
 1154 054e 83E0      		ldi r24,lo8(3)
 1155 0550 8093 0000 		sts nrk_task_TCB+9,r24
 1156 0554 00C0      		rjmp .L98
 1157               	.L95:
 1159               	.LM106:
 1160 0556 8091 0000 		lds r24,nrk_task_TCB+41
 1161 055a 8F3F      		cpi r24,lo8(-1)
 1162 055c 01F4      		brne .+2
 1163 055e 00C0      		rjmp .L99
 1165               	.LM107:
 1166 0560 8091 0000 		lds r24,nrk_task_TCB+46
 1167 0564 9091 0000 		lds r25,(nrk_task_TCB+46)+1
 1168 0568 A091 0000 		lds r26,(nrk_task_TCB+46)+2
 1169 056c B091 0000 		lds r27,(nrk_task_TCB+46)+3
 1170 0570 8E15      		cp r24,r14
 1171 0572 9F05      		cpc r25,r15
 1172 0574 A007      		cpc r26,r16
 1173 0576 B107      		cpc r27,r17
 1174 0578 01F4      		brne .L101
 1176               	.LM108:
 1177 057a 1092 0000 		sts nrk_task_TCB+50,__zero_reg__
 1178 057e 1092 0000 		sts (nrk_task_TCB+50)+1,__zero_reg__
 1179 0582 1092 0000 		sts (nrk_task_TCB+50)+2,__zero_reg__
 1180 0586 1092 0000 		sts (nrk_task_TCB+50)+3,__zero_reg__
 1182               	.LM109:
 1183 058a 1092 0000 		sts nrk_task_TCB+40,__zero_reg__
 1185               	.LM110:
 1186 058e 83E0      		ldi r24,lo8(3)
 1187 0590 8093 0000 		sts nrk_task_TCB+42,r24
 1188               	.L101:
 1190               	.LM111:
 1191 0594 D801      		movw r26,r16
 1192 0596 C701      		movw r24,r14
 1193 0598 8095      		com r24
 1194 059a 9095      		com r25
 1195 059c A095      		com r26
 1196 059e B095      		com r27
 1197 05a0 2091 0000 		lds r18,nrk_task_TCB+46
 1198 05a4 3091 0000 		lds r19,(nrk_task_TCB+46)+1
 1199 05a8 4091 0000 		lds r20,(nrk_task_TCB+46)+2
 1200 05ac 5091 0000 		lds r21,(nrk_task_TCB+46)+3
 1201 05b0 2823      		and r18,r24
 1202 05b2 3923      		and r19,r25
 1203 05b4 4A23      		and r20,r26
 1204 05b6 5B23      		and r21,r27
 1205 05b8 2093 0000 		sts nrk_task_TCB+46,r18
 1206 05bc 3093 0000 		sts (nrk_task_TCB+46)+1,r19
 1207 05c0 4093 0000 		sts (nrk_task_TCB+46)+2,r20
 1208 05c4 5093 0000 		sts (nrk_task_TCB+46)+3,r21
 1210               	.LM112:
 1211 05c8 2091 0000 		lds r18,nrk_task_TCB+50
 1212 05cc 3091 0000 		lds r19,(nrk_task_TCB+50)+1
 1213 05d0 4091 0000 		lds r20,(nrk_task_TCB+50)+2
 1214 05d4 5091 0000 		lds r21,(nrk_task_TCB+50)+3
 1215 05d8 8223      		and r24,r18
 1216 05da 9323      		and r25,r19
 1217 05dc A423      		and r26,r20
 1218 05de B523      		and r27,r21
 1219 05e0 8093 0000 		sts nrk_task_TCB+50,r24
 1220 05e4 9093 0000 		sts (nrk_task_TCB+50)+1,r25
 1221 05e8 A093 0000 		sts (nrk_task_TCB+50)+2,r26
 1222 05ec B093 0000 		sts (nrk_task_TCB+50)+3,r27
 1223               	.L99:
 1225               	.LM113:
 1226 05f0 2EEF      		ldi r18,lo8(-2)
 1227 05f2 3FEF      		ldi r19,hi8(-2)
 1228 05f4 4FEF      		ldi r20,hlo8(-2)
 1229 05f6 5FEF      		ldi r21,hhi8(-2)
 1230 05f8 00C0      		rjmp 2f
 1231 05fa 220F      	1:	lsl r18
 1232 05fc 331F      		rol r19
 1233 05fe 441F      		rol r20
 1234 0600 551F      		rol r21
 1235 0602 CA95      	2:	dec r28
 1236 0604 02F4      		brpl 1b
 1237 0606 8091 0000 		lds r24,_nrk_signal_list
 1238 060a 9091 0000 		lds r25,(_nrk_signal_list)+1
 1239 060e A091 0000 		lds r26,(_nrk_signal_list)+2
 1240 0612 B091 0000 		lds r27,(_nrk_signal_list)+3
 1241 0616 8223      		and r24,r18
 1242 0618 9323      		and r25,r19
 1243 061a A423      		and r26,r20
 1244 061c B523      		and r27,r21
 1245 061e 8093 0000 		sts _nrk_signal_list,r24
 1246 0622 9093 0000 		sts (_nrk_signal_list)+1,r25
 1247 0626 A093 0000 		sts (_nrk_signal_list)+2,r26
 1248 062a B093 0000 		sts (_nrk_signal_list)+3,r27
 1250               	.LM114:
 1251 062e 0E94 0000 		call nrk_int_enable
 1252 0632 81E0      		ldi r24,lo8(1)
 1253 0634 90E0      		ldi r25,hi8(1)
 1254               	.L94:
 1255               	/* epilogue: frame size=0 */
 1256 0636 DF91      		pop r29
 1257 0638 CF91      		pop r28
 1258 063a 1F91      		pop r17
 1259 063c 0F91      		pop r16
 1260 063e FF90      		pop r15
 1261 0640 EF90      		pop r14
 1262 0642 0895      		ret
 1263               	/* epilogue end (size=7) */
 1264               	/* function nrk_signal_delete size 243 (230) */
 1269               	.Lscope11:
 1271               		.stabd	78,0,0
 1274               	.global	nrk_sem_pend
 1276               	nrk_sem_pend:
 1277               		.stabd	46,0,0
 1279               	.LM115:
 1280               	.LFBB12:
 1281               	/* prologue: frame size=0 */
 1282 0644 1F93      		push r17
 1283 0646 CF93      		push r28
 1284 0648 DF93      		push r29
 1285               	/* prologue end (size=3) */
 1287               	.LM116:
 1288 064a 0E94 0000 		call nrk_get_resource_index
 1289 064e 182F      		mov r17,r24
 1291               	.LM117:
 1292 0650 8F3F      		cpi r24,lo8(-1)
 1293 0652 01F4      		brne .L105
 1295               	.LM118:
 1296 0654 81E0      		ldi r24,lo8(1)
 1297 0656 00C0      		rjmp .L113
 1298               	.L105:
 1300               	.LM119:
 1301 0658 8230      		cpi r24,lo8(2)
 1302 065a 01F4      		brne .L108
 1303 065c 82E0      		ldi r24,lo8(2)
 1304               	.L113:
 1305 065e 0E94 0000 		call _nrk_errno_set
 1306 0662 8FEF      		ldi r24,lo8(-1)
 1307 0664 9FEF      		ldi r25,hi8(-1)
 1308 0666 00C0      		rjmp .L107
 1309               	.L108:
 1311               	.LM120:
 1312 0668 0E94 0000 		call nrk_int_disable
 1314               	.LM121:
 1315 066c 812F      		mov r24,r17
 1316 066e 9927      		clr r25
 1317 0670 87FD      		sbrc r24,7
 1318 0672 9095      		com r25
 1319 0674 EC01      		movw r28,r24
 1320 0676 CC0F      		lsl r28
 1321 0678 DD1F      		rol r29
 1322 067a C80F      		add r28,r24
 1323 067c D91F      		adc r29,r25
 1324 067e C050      		subi r28,lo8(-(nrk_sem_list))
 1325 0680 D040      		sbci r29,hi8(-(nrk_sem_list))
 1326 0682 8A81      		ldd r24,Y+2
 1327 0684 8823      		tst r24
 1328 0686 01F4      		brne .L110
 1330               	.LM122:
 1331 0688 E091 0000 		lds r30,nrk_cur_task_TCB
 1332 068c F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1333 0690 8781      		ldd r24,Z+7
 1334 0692 8260      		ori r24,lo8(2)
 1335 0694 8783      		std Z+7,r24
 1337               	.LM123:
 1338 0696 E091 0000 		lds r30,nrk_cur_task_TCB
 1339 069a F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1340 069e 812F      		mov r24,r17
 1341 06a0 9927      		clr r25
 1342 06a2 87FD      		sbrc r24,7
 1343 06a4 9095      		com r25
 1344 06a6 A92F      		mov r26,r25
 1345 06a8 B92F      		mov r27,r25
 1346 06aa 818B      		std Z+17,r24
 1347 06ac 928B      		std Z+18,r25
 1348 06ae A38B      		std Z+19,r26
 1349 06b0 B48B      		std Z+20,r27
 1351               	.LM124:
 1352 06b2 0E94 0000 		call nrk_int_enable
 1354               	.LM125:
 1355 06b6 80E0      		ldi r24,lo8(0)
 1356 06b8 90E0      		ldi r25,hi8(0)
 1357 06ba 0E94 0000 		call nrk_wait_until_ticks
 1358               	.L110:
 1360               	.LM126:
 1361 06be 8A81      		ldd r24,Y+2
 1362 06c0 8150      		subi r24,lo8(-(-1))
 1363 06c2 8A83      		std Y+2,r24
 1365               	.LM127:
 1366 06c4 E091 0000 		lds r30,nrk_cur_task_TCB
 1367 06c8 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1368 06cc 8981      		ldd r24,Y+1
 1369 06ce 8387      		std Z+11,r24
 1371               	.LM128:
 1372 06d0 E091 0000 		lds r30,nrk_cur_task_TCB
 1373 06d4 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1374 06d8 81E0      		ldi r24,lo8(1)
 1375 06da 8483      		std Z+4,r24
 1377               	.LM129:
 1378 06dc 0E94 0000 		call nrk_int_enable
 1379 06e0 81E0      		ldi r24,lo8(1)
 1380 06e2 90E0      		ldi r25,hi8(1)
 1381               	.L107:
 1382               	/* epilogue: frame size=0 */
 1383 06e4 DF91      		pop r29
 1384 06e6 CF91      		pop r28
 1385 06e8 1F91      		pop r17
 1386 06ea 0895      		ret
 1387               	/* epilogue end (size=4) */
 1388               	/* function nrk_sem_pend size 84 (77) */
 1393               	.Lscope12:
 1395               		.stabd	78,0,0
 1398               	.global	nrk_event_wait
 1400               	nrk_event_wait:
 1401               		.stabd	46,0,0
 1403               	.LM130:
 1404               	.LFBB13:
 1405               	/* prologue: frame size=0 */
 1406               	/* prologue end (size=0) */
 1407 06ec 9B01      		movw r18,r22
 1408 06ee AC01      		movw r20,r24
 1410               	.LM131:
 1411 06f0 E091 0000 		lds r30,nrk_cur_task_TCB
 1412 06f4 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1413 06f8 8585      		ldd r24,Z+13
 1414 06fa 9685      		ldd r25,Z+14
 1415 06fc A785      		ldd r26,Z+15
 1416 06fe B089      		ldd r27,Z+16
 1417 0700 8223      		and r24,r18
 1418 0702 9323      		and r25,r19
 1419 0704 A423      		and r26,r20
 1420 0706 B523      		and r27,r21
 1421 0708 0097      		sbiw r24,0
 1422 070a A105      		cpc r26,__zero_reg__
 1423 070c B105      		cpc r27,__zero_reg__
 1424 070e 01F4      		brne .L115
 1426               	.LM132:
 1427 0710 60E0      		ldi r22,lo8(0)
 1428 0712 70E0      		ldi r23,hi8(0)
 1429 0714 80E0      		ldi r24,hlo8(0)
 1430 0716 90E0      		ldi r25,hhi8(0)
 1431 0718 0895      		ret
 1432               	.L115:
 1434               	.LM133:
 1435 071a 218B      		std Z+17,r18
 1436 071c 328B      		std Z+18,r19
 1437 071e 438B      		std Z+19,r20
 1438 0720 548B      		std Z+20,r21
 1440               	.LM134:
 1441 0722 81E0      		ldi r24,lo8(1)
 1442 0724 8783      		std Z+7,r24
 1444               	.LM135:
 1445 0726 0090 0000 		lds r0,nrk_wakeup_signal
 1446 072a 00C0      		rjmp 2f
 1447 072c 5695      	1:	lsr r21
 1448 072e 4795      		ror r20
 1449 0730 3795      		ror r19
 1450 0732 2795      		ror r18
 1451 0734 0A94      	2:	dec r0
 1452 0736 02F4      		brpl 1b
 1453 0738 C901      		movw r24,r18
 1454 073a 8170      		andi r24,lo8(1)
 1455 073c 9070      		andi r25,hi8(1)
 1456 073e 892B      		or r24,r25
 1457 0740 01F0      		breq .L118
 1459               	.LM136:
 1460 0742 0E94 0000 		call nrk_wait_until_nw
 1461 0746 00C0      		rjmp .L120
 1462               	.L118:
 1464               	.LM137:
 1465 0748 80E0      		ldi r24,lo8(0)
 1466 074a 90E0      		ldi r25,hi8(0)
 1467 074c 0E94 0000 		call nrk_wait_until_ticks
 1468               	.L120:
 1470               	.LM138:
 1471 0750 E091 0000 		lds r30,nrk_cur_task_TCB
 1472 0754 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1473 0758 6189      		ldd r22,Z+17
 1474 075a 7289      		ldd r23,Z+18
 1475 075c 8389      		ldd r24,Z+19
 1476 075e 9489      		ldd r25,Z+20
 1478               	.LM139:
 1479 0760 0895      		ret
 1480               	/* epilogue: frame size=0 */
 1481               	/* epilogue: noreturn */
 1482               	/* epilogue end (size=0) */
 1483               	/* function nrk_event_wait size 59 (59) */
 1485               	.Lscope13:
 1487               		.stabd	78,0,0
 1488               		.comm _nrk_signal_list,4,1
 1489               		.comm nrk_idle_task_stk,128,1
 1490               		.comm nrk_kernel_stk_ptr,2,1
 1491               		.comm nrk_task_TCB,66,1
 1492               		.comm nrk_wakeup_signal,1,1
 1493               		.comm _nrk_readyQ,15,1
 1494               		.comm _free_node,2,1
 1495               		.comm _head_node,2,1
 1496               		.comm nrk_cur_task_prio,1,1
 1497               		.comm nrk_cur_task_TCB,2,1
 1498               		.comm nrk_high_ready_prio,1,1
 1499               		.comm nrk_high_ready_TCB,2,1
 1500               		.comm _nrk_resource_cnt,1,1
 1501               		.comm nrk_system_time,8,1
 1502               		.comm error_task,1,1
 1503               		.comm error_num,1,1
 1504               		.comm _nrk_cpu_state,1,1
 1505               		.comm next_next_wakeup,2,1
 1506               		.comm _nrk_prev_timer_val,1,1
 1507               		.comm _nrk_time_trigger,1,1
 1508               		.comm app_timer0_callback,2,1
 1509               		.comm app_timer0_prescale,1,1
 1510               		.comm nrk_sem_list,6,1
 1535               	.Letext0:
 1536               	/* File "../../src/kernel/source/nrk_events.c": code  950 = 0x03b6 ( 902), prologues  21, epilogues
DEFINED SYMBOLS
                            *ABS*:0000000000000000 nrk_events.c
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:2      *ABS*:000000000000003f __SREG__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:3      *ABS*:000000000000003e __SP_H__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:4      *ABS*:000000000000003d __SP_L__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:130    .text:0000000000000000 nrk_signal_create
                            *COM*:0000000000000004 _nrk_signal_list
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:218    .text:000000000000007a nrk_signal_get_registered_mask
                            *COM*:0000000000000002 nrk_cur_task_TCB
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:243    .text:000000000000008c nrk_signal_unregister
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:341    .text:0000000000000112 nrk_signal_register
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:421    .text:0000000000000184 nrk_sem_create
                            *COM*:0000000000000001 _nrk_resource_cnt
                            *COM*:0000000000000006 nrk_sem_list
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:504    .text:00000000000001da nrk_get_resource_index
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:554    .text:00000000000001fc nrk_sem_delete
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:628    .text:0000000000000242 nrk_sem_query
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:691    .text:000000000000027a nrk_sem_post
                            *COM*:0000000000000042 nrk_task_TCB
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:860    .text:0000000000000380 nrk_event_signal
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:1034   .text:0000000000000460 nrk_signal_delete
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:1276   .text:0000000000000644 nrk_sem_pend
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//cc5gnIPL.s:1400   .text:00000000000006ec nrk_event_wait
                            *COM*:0000000000000001 nrk_wakeup_signal
                            *COM*:0000000000000080 nrk_idle_task_stk
                            *COM*:0000000000000002 nrk_kernel_stk_ptr
                            *COM*:000000000000000f _nrk_readyQ
                            *COM*:0000000000000002 _free_node
                            *COM*:0000000000000002 _head_node
                            *COM*:0000000000000001 nrk_cur_task_prio
                            *COM*:0000000000000001 nrk_high_ready_prio
                            *COM*:0000000000000002 nrk_high_ready_TCB
                            *COM*:0000000000000008 nrk_system_time
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 _nrk_cpu_state
                            *COM*:0000000000000002 next_next_wakeup
                            *COM*:0000000000000001 _nrk_prev_timer_val
                            *COM*:0000000000000001 _nrk_time_trigger
                            *COM*:0000000000000002 app_timer0_callback
                            *COM*:0000000000000001 app_timer0_prescale

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
_nrk_errno_set
nrk_int_disable
nrk_int_enable
nrk_wait_until_ticks
nrk_wait_until_nw
