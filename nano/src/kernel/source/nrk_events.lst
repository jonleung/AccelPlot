   1               		.file	"nrk_events.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 128               	.global	nrk_signal_create
 130               	nrk_signal_create:
 131               		.stabd	46,0,0
   1:../../src/kernel/source/nrk_events.c **** /******************************************************************************
   2:../../src/kernel/source/nrk_events.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../src/kernel/source/nrk_events.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../src/kernel/source/nrk_events.c **** *  All rights reserved.
   5:../../src/kernel/source/nrk_events.c **** *
   6:../../src/kernel/source/nrk_events.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../src/kernel/source/nrk_events.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../src/kernel/source/nrk_events.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../src/kernel/source/nrk_events.c **** *
  10:../../src/kernel/source/nrk_events.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../src/kernel/source/nrk_events.c **** *  it under the terms of the GNU General Public License as published by
  12:../../src/kernel/source/nrk_events.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../src/kernel/source/nrk_events.c **** *
  14:../../src/kernel/source/nrk_events.c **** *  This program is distributed in the hope that it will be useful,
  15:../../src/kernel/source/nrk_events.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../src/kernel/source/nrk_events.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../src/kernel/source/nrk_events.c **** *  GNU General Public License for more details.
  18:../../src/kernel/source/nrk_events.c **** *
  19:../../src/kernel/source/nrk_events.c **** *  You should have received a copy of the GNU General Public License
  20:../../src/kernel/source/nrk_events.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../src/kernel/source/nrk_events.c **** *
  22:../../src/kernel/source/nrk_events.c **** *  Contributing Authors (specific to this file):
  23:../../src/kernel/source/nrk_events.c **** *  Anthony Rowe
  24:../../src/kernel/source/nrk_events.c **** *  Zane Starr
  25:../../src/kernel/source/nrk_events.c **** *******************************************************************************/
  26:../../src/kernel/source/nrk_events.c **** 
  27:../../src/kernel/source/nrk_events.c **** #include <nrk.h>
  28:../../src/kernel/source/nrk_events.c **** #include <nrk_events.h>
  29:../../src/kernel/source/nrk_events.c **** #include <nrk_task.h>
  30:../../src/kernel/source/nrk_events.c **** #include <nrk_error.h>
  31:../../src/kernel/source/nrk_events.c **** #include <nrk_scheduler.h>
  32:../../src/kernel/source/nrk_events.c **** #include <include.h>
  33:../../src/kernel/source/nrk_events.c **** #include <ulib.h>
  34:../../src/kernel/source/nrk_events.c **** #include <nrk_timer.h>
  35:../../src/kernel/source/nrk_events.c **** #include <nrk_time.h>
  36:../../src/kernel/source/nrk_events.c **** #include <nrk_cfg.h>
  37:../../src/kernel/source/nrk_events.c **** #include <nrk_cpu.h>
  38:../../src/kernel/source/nrk_events.c **** #include <nrk_defs.h>
  39:../../src/kernel/source/nrk_events.c **** 
  40:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_create()
  41:../../src/kernel/source/nrk_events.c **** {
 133               	.LM0:
 134               	.LFBB1:
 135               	/* prologue: frame size=0 */
 136               	/* prologue end (size=0) */
  42:../../src/kernel/source/nrk_events.c **** 	uint8_t i=0;
  43:../../src/kernel/source/nrk_events.c **** 	for(i=0;i<32;i++)   
  44:../../src/kernel/source/nrk_events.c **** 	{                         
  45:../../src/kernel/source/nrk_events.c **** 		if( !(_nrk_signal_list & SIG(i)))
 138               	.LM1:
 139 0000 4091 0000 		lds r20,_nrk_signal_list
 140 0004 5091 0000 		lds r21,(_nrk_signal_list)+1
 141 0008 6091 0000 		lds r22,(_nrk_signal_list)+2
 142 000c 7091 0000 		lds r23,(_nrk_signal_list)+3
 143 0010 20E0      		ldi r18,lo8(0)
 144 0012 30E0      		ldi r19,hi8(0)
 145               	.L2:
 147               	.LM2:
 148 0014 DB01      		movw r26,r22
 149 0016 CA01      		movw r24,r20
 150 0018 022E      		mov r0,r18
 151 001a 00C0      		rjmp 2f
 152 001c B695      	1:	lsr r27
 153 001e A795      		ror r26
 154 0020 9795      		ror r25
 155 0022 8795      		ror r24
 156 0024 0A94      	2:	dec r0
 157 0026 02F4      		brpl 1b
 158 0028 8170      		andi r24,lo8(1)
 159 002a 9070      		andi r25,hi8(1)
 160 002c 892B      		or r24,r25
 161 002e 01F4      		brne .L3
  46:../../src/kernel/source/nrk_events.c **** 		{    
  47:../../src/kernel/source/nrk_events.c **** 			_nrk_signal_list|=SIG(i);
 163               	.LM3:
 164 0030 81E0      		ldi r24,lo8(1)
 165 0032 90E0      		ldi r25,hi8(1)
 166 0034 A0E0      		ldi r26,hlo8(1)
 167 0036 B0E0      		ldi r27,hhi8(1)
 168 0038 022E      		mov r0,r18
 169 003a 00C0      		rjmp 2f
 170 003c 880F      	1:	lsl r24
 171 003e 991F      		rol r25
 172 0040 AA1F      		rol r26
 173 0042 BB1F      		rol r27
 174 0044 0A94      	2:	dec r0
 175 0046 02F4      		brpl 1b
 176 0048 842B      		or r24,r20
 177 004a 952B      		or r25,r21
 178 004c A62B      		or r26,r22
 179 004e B72B      		or r27,r23
 180 0050 8093 0000 		sts _nrk_signal_list,r24
 181 0054 9093 0000 		sts (_nrk_signal_list)+1,r25
 182 0058 A093 0000 		sts (_nrk_signal_list)+2,r26
 183 005c B093 0000 		sts (_nrk_signal_list)+3,r27
  48:../../src/kernel/source/nrk_events.c **** 			return i;
 185               	.LM4:
 186 0060 822F      		mov r24,r18
 187 0062 9927      		clr r25
 188 0064 87FD      		sbrc r24,7
 189 0066 9095      		com r25
 190 0068 0895      		ret
 191               	.L3:
 192 006a 2F5F      		subi r18,lo8(-(1))
 193 006c 3F4F      		sbci r19,hi8(-(1))
 195               	.LM5:
 196 006e 2032      		cpi r18,32
 197 0070 3105      		cpc r19,__zero_reg__
 198 0072 01F4      		brne .L2
 199 0074 8FEF      		ldi r24,lo8(-1)
 200 0076 9FEF      		ldi r25,hi8(-1)
  49:../../src/kernel/source/nrk_events.c **** 		}
  50:../../src/kernel/source/nrk_events.c **** 	}
  51:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
  52:../../src/kernel/source/nrk_events.c **** 
  53:../../src/kernel/source/nrk_events.c **** 
  54:../../src/kernel/source/nrk_events.c **** }
 202               	.LM6:
 203 0078 0895      		ret
 204               	/* epilogue: frame size=0 */
 205               	/* epilogue: noreturn */
 206               	/* epilogue end (size=0) */
 207               	/* function nrk_signal_create size 61 (61) */
 212               	.Lscope1:
 214               		.stabd	78,0,0
 216               	.global	nrk_signal_get_registered_mask
 218               	nrk_signal_get_registered_mask:
 219               		.stabd	46,0,0
  55:../../src/kernel/source/nrk_events.c **** 
  56:../../src/kernel/source/nrk_events.c **** uint32_t nrk_signal_get_registered_mask()
  57:../../src/kernel/source/nrk_events.c **** {
 221               	.LM7:
 222               	.LFBB2:
 223               	/* prologue: frame size=0 */
 224               	/* prologue end (size=0) */
 225 007a E091 0000 		lds r30,nrk_cur_task_TCB
 226 007e F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 227 0082 6585      		ldd r22,Z+13
 228 0084 7685      		ldd r23,Z+14
 229 0086 8785      		ldd r24,Z+15
 230 0088 9089      		ldd r25,Z+16
 231               	/* epilogue: frame size=0 */
 232 008a 0895      		ret
 233               	/* epilogue end (size=1) */
 234               	/* function nrk_signal_get_registered_mask size 9 (8) */
 236               	.Lscope2:
 238               		.stabd	78,0,0
 241               	.global	nrk_signal_unregister
 243               	nrk_signal_unregister:
 244               		.stabd	46,0,0
  58:../../src/kernel/source/nrk_events.c ****         return nrk_cur_task_TCB->registered_signal_mask;
  59:../../src/kernel/source/nrk_events.c **** }
  60:../../src/kernel/source/nrk_events.c **** 
  61:../../src/kernel/source/nrk_events.c **** //return the number removed from signal set
  62:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_delete(nrk_sig_t sig_id)
  63:../../src/kernel/source/nrk_events.c **** {
  64:../../src/kernel/source/nrk_events.c **** 	uint8_t task_ID;
  65:../../src/kernel/source/nrk_events.c **** 	uint32_t sig_mask;
  66:../../src/kernel/source/nrk_events.c **** 
  67:../../src/kernel/source/nrk_events.c **** 	sig_mask=SIG(sig_id);
  68:../../src/kernel/source/nrk_events.c **** 
  69:../../src/kernel/source/nrk_events.c **** 	if( (sig_mask & _nrk_signal_list)==0) return NRK_ERROR; 
  70:../../src/kernel/source/nrk_events.c **** 
  71:../../src/kernel/source/nrk_events.c **** 	nrk_int_disable();
  72:../../src/kernel/source/nrk_events.c **** 	for (task_ID=0; task_ID < NRK_MAX_TASKS; task_ID++){
  73:../../src/kernel/source/nrk_events.c **** 		if(nrk_task_TCB[task_ID].task_ID==-1) continue;
  74:../../src/kernel/source/nrk_events.c **** 		// Check for tasks waiting on the signal
  75:../../src/kernel/source/nrk_events.c **** 		// If there is a task that is waiting on just this signal
  76:../../src/kernel/source/nrk_events.c **** 		// then we need to change it to the normal SUSPEND state
  77:../../src/kernel/source/nrk_events.c **** 		if(nrk_task_TCB[task_ID].registered_signal_mask==sig_mask) //check to make sure its only signal i
  78:../../src/kernel/source/nrk_events.c **** 		{
  79:../../src/kernel/source/nrk_events.c **** 		      //  printf("delete t(%i) signal(%li)\r\n",task_ID,nrk_task_TCB[task_ID].registered_signal_m
  80:../../src/kernel/source/nrk_events.c **** 			nrk_task_TCB[task_ID].active_signal_mask=0;
  81:../../src/kernel/source/nrk_events.c **** 			nrk_task_TCB[task_ID].event_suspend=0;
  82:../../src/kernel/source/nrk_events.c **** 			nrk_task_TCB[task_ID].task_state=SUSPENDED;
  83:../../src/kernel/source/nrk_events.c **** 		}
  84:../../src/kernel/source/nrk_events.c **** 		nrk_task_TCB[task_ID].registered_signal_mask&=~sig_mask; //cheaper to remove than do a check
  85:../../src/kernel/source/nrk_events.c **** 		nrk_task_TCB[task_ID].active_signal_mask&=~sig_mask; //cheaper to remove than do a check
  86:../../src/kernel/source/nrk_events.c **** 
  87:../../src/kernel/source/nrk_events.c **** 	}
  88:../../src/kernel/source/nrk_events.c **** 	
  89:../../src/kernel/source/nrk_events.c **** 	_nrk_signal_list&=~SIG(sig_id);
  90:../../src/kernel/source/nrk_events.c **** 	nrk_int_enable();
  91:../../src/kernel/source/nrk_events.c **** 
  92:../../src/kernel/source/nrk_events.c **** 	return NRK_OK;
  93:../../src/kernel/source/nrk_events.c **** }
  94:../../src/kernel/source/nrk_events.c **** 
  95:../../src/kernel/source/nrk_events.c **** 
  96:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_unregister(int8_t sig_id)
  97:../../src/kernel/source/nrk_events.c **** {
 246               	.LM8:
 247               	.LFBB3:
 248               	/* prologue: frame size=0 */
 249 008c EF92      		push r14
 250 008e FF92      		push r15
 251 0090 0F93      		push r16
 252 0092 1F93      		push r17
 253               	/* prologue end (size=4) */
  98:../../src/kernel/source/nrk_events.c **** uint32_t sig_mask;
  99:../../src/kernel/source/nrk_events.c **** 
 100:../../src/kernel/source/nrk_events.c **** sig_mask=SIG(sig_id);
 255               	.LM9:
 256 0094 21E0      		ldi r18,lo8(1)
 257 0096 30E0      		ldi r19,hi8(1)
 258 0098 40E0      		ldi r20,hlo8(1)
 259 009a 50E0      		ldi r21,hhi8(1)
 260 009c 00C0      		rjmp 2f
 261 009e 220F      	1:	lsl r18
 262 00a0 331F      		rol r19
 263 00a2 441F      		rol r20
 264 00a4 551F      		rol r21
 265 00a6 8A95      	2:	dec r24
 266 00a8 02F4      		brpl 1b
 101:../../src/kernel/source/nrk_events.c **** 
 102:../../src/kernel/source/nrk_events.c **** 	if(nrk_cur_task_TCB->registered_signal_mask & sig_mask)
 268               	.LM10:
 269 00aa E091 0000 		lds r30,nrk_cur_task_TCB
 270 00ae F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 271 00b2 E584      		ldd r14,Z+13
 272 00b4 F684      		ldd r15,Z+14
 273 00b6 0785      		ldd r16,Z+15
 274 00b8 1089      		ldd r17,Z+16
 275 00ba DA01      		movw r26,r20
 276 00bc C901      		movw r24,r18
 277 00be 8E21      		and r24,r14
 278 00c0 9F21      		and r25,r15
 279 00c2 A023      		and r26,r16
 280 00c4 B123      		and r27,r17
 281 00c6 0097      		sbiw r24,0
 282 00c8 A105      		cpc r26,__zero_reg__
 283 00ca B105      		cpc r27,__zero_reg__
 284 00cc 01F4      		brne .L13
 286               	.LM11:
 287 00ce 8FEF      		ldi r24,lo8(-1)
 288 00d0 9FEF      		ldi r25,hi8(-1)
 289 00d2 00C0      		rjmp .L15
 290               	.L13:
 103:../../src/kernel/source/nrk_events.c **** 	{
 104:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->registered_signal_mask&=~(sig_mask); 	
 292               	.LM12:
 293 00d4 2095      		com r18
 294 00d6 3095      		com r19
 295 00d8 4095      		com r20
 296 00da 5095      		com r21
 297 00dc E222      		and r14,r18
 298 00de F322      		and r15,r19
 299 00e0 0423      		and r16,r20
 300 00e2 1523      		and r17,r21
 301 00e4 E586      		std Z+13,r14
 302 00e6 F686      		std Z+14,r15
 303 00e8 0787      		std Z+15,r16
 304 00ea 108B      		std Z+16,r17
 105:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->active_signal_mask&=~(sig_mask); 	
 306               	.LM13:
 307 00ec 8189      		ldd r24,Z+17
 308 00ee 9289      		ldd r25,Z+18
 309 00f0 A389      		ldd r26,Z+19
 310 00f2 B489      		ldd r27,Z+20
 311 00f4 8223      		and r24,r18
 312 00f6 9323      		and r25,r19
 313 00f8 A423      		and r26,r20
 314 00fa B523      		and r27,r21
 315 00fc 818B      		std Z+17,r24
 316 00fe 928B      		std Z+18,r25
 317 0100 A38B      		std Z+19,r26
 318 0102 B48B      		std Z+20,r27
 319 0104 81E0      		ldi r24,lo8(1)
 320 0106 90E0      		ldi r25,hi8(1)
 321               	.L15:
 322               	/* epilogue: frame size=0 */
 323 0108 1F91      		pop r17
 324 010a 0F91      		pop r16
 325 010c FF90      		pop r15
 326 010e EF90      		pop r14
 327 0110 0895      		ret
 328               	/* epilogue end (size=5) */
 329               	/* function nrk_signal_unregister size 68 (59) */
 334               	.Lscope3:
 336               		.stabd	78,0,0
 339               	.global	nrk_signal_register
 341               	nrk_signal_register:
 342               		.stabd	46,0,0
 106:../../src/kernel/source/nrk_events.c **** 	}
 107:../../src/kernel/source/nrk_events.c **** 	else
 108:../../src/kernel/source/nrk_events.c **** 		return NRK_ERROR;
 109:../../src/kernel/source/nrk_events.c **** return NRK_OK;
 110:../../src/kernel/source/nrk_events.c **** }
 111:../../src/kernel/source/nrk_events.c **** 
 112:../../src/kernel/source/nrk_events.c **** int8_t nrk_signal_register(int8_t sig_id)
 113:../../src/kernel/source/nrk_events.c **** {
 344               	.LM14:
 345               	.LFBB4:
 346               	/* prologue: frame size=0 */
 347               	/* prologue end (size=0) */
 114:../../src/kernel/source/nrk_events.c **** 
 115:../../src/kernel/source/nrk_events.c **** 	// Make sure the signal was created...
 116:../../src/kernel/source/nrk_events.c **** 	if(SIG(sig_id) & _nrk_signal_list )
 349               	.LM15:
 350 0112 682F      		mov r22,r24
 351 0114 7727      		clr r23
 352 0116 67FD      		sbrc r22,7
 353 0118 7095      		com r23
 354 011a 8091 0000 		lds r24,_nrk_signal_list
 355 011e 9091 0000 		lds r25,(_nrk_signal_list)+1
 356 0122 A091 0000 		lds r26,(_nrk_signal_list)+2
 357 0126 B091 0000 		lds r27,(_nrk_signal_list)+3
 358 012a 062E      		mov r0,r22
 359 012c 00C0      		rjmp 2f
 360 012e B695      	1:	lsr r27
 361 0130 A795      		ror r26
 362 0132 9795      		ror r25
 363 0134 8795      		ror r24
 364 0136 0A94      	2:	dec r0
 365 0138 02F4      		brpl 1b
 366 013a 8170      		andi r24,lo8(1)
 367 013c 9070      		andi r25,hi8(1)
 368 013e 892B      		or r24,r25
 369 0140 01F4      		brne .L18
 371               	.LM16:
 372 0142 8FEF      		ldi r24,lo8(-1)
 373 0144 9FEF      		ldi r25,hi8(-1)
 374 0146 0895      		ret
 375               	.L18:
 117:../../src/kernel/source/nrk_events.c **** 	{
 118:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->registered_signal_mask|=SIG(sig_id); 	
 377               	.LM17:
 378 0148 E091 0000 		lds r30,nrk_cur_task_TCB
 379 014c F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 380 0150 21E0      		ldi r18,lo8(1)
 381 0152 30E0      		ldi r19,hi8(1)
 382 0154 40E0      		ldi r20,hlo8(1)
 383 0156 50E0      		ldi r21,hhi8(1)
 384 0158 00C0      		rjmp 2f
 385 015a 220F      	1:	lsl r18
 386 015c 331F      		rol r19
 387 015e 441F      		rol r20
 388 0160 551F      		rol r21
 389 0162 6A95      	2:	dec r22
 390 0164 02F4      		brpl 1b
 391 0166 8585      		ldd r24,Z+13
 392 0168 9685      		ldd r25,Z+14
 393 016a A785      		ldd r26,Z+15
 394 016c B089      		ldd r27,Z+16
 395 016e 822B      		or r24,r18
 396 0170 932B      		or r25,r19
 397 0172 A42B      		or r26,r20
 398 0174 B52B      		or r27,r21
 399 0176 8587      		std Z+13,r24
 400 0178 9687      		std Z+14,r25
 401 017a A787      		std Z+15,r26
 402 017c B08B      		std Z+16,r27
 403 017e 81E0      		ldi r24,lo8(1)
 404 0180 90E0      		ldi r25,hi8(1)
 119:../../src/kernel/source/nrk_events.c **** 		return NRK_OK;
 120:../../src/kernel/source/nrk_events.c **** 	}
 121:../../src/kernel/source/nrk_events.c ****             
 122:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
 123:../../src/kernel/source/nrk_events.c **** }
 406               	.LM18:
 407 0182 0895      		ret
 408               	/* epilogue: frame size=0 */
 409               	/* epilogue: noreturn */
 410               	/* epilogue end (size=0) */
 411               	/* function nrk_signal_register size 58 (58) */
 413               	.Lscope4:
 415               		.stabd	78,0,0
 419               	.global	nrk_sem_create
 421               	nrk_sem_create:
 422               		.stabd	46,0,0
 124:../../src/kernel/source/nrk_events.c **** 
 125:../../src/kernel/source/nrk_events.c **** int8_t nrk_event_signal(int8_t sig_id)
 126:../../src/kernel/source/nrk_events.c **** {
 127:../../src/kernel/source/nrk_events.c **** 
 128:../../src/kernel/source/nrk_events.c **** 	uint8_t task_ID;
 129:../../src/kernel/source/nrk_events.c **** 	uint8_t event_occured=0;
 130:../../src/kernel/source/nrk_events.c **** 	uint32_t sig_mask;
 131:../../src/kernel/source/nrk_events.c **** 
 132:../../src/kernel/source/nrk_events.c **** 	sig_mask=SIG(sig_id);
 133:../../src/kernel/source/nrk_events.c **** 	// Check if signal was created
 134:../../src/kernel/source/nrk_events.c **** 	// Signal was not created
 135:../../src/kernel/source/nrk_events.c **** 	if((sig_mask & _nrk_signal_list)==0 ) { _nrk_errno_set(1); return NRK_ERROR;}
 136:../../src/kernel/source/nrk_events.c **** 	
 137:../../src/kernel/source/nrk_events.c **** 	//needs to be atomic otherwise run the risk of multiple tasks being scheduled late and not in orde
 138:../../src/kernel/source/nrk_events.c **** 	nrk_int_disable();
 139:../../src/kernel/source/nrk_events.c **** 	for (task_ID=0; task_ID < NRK_MAX_TASKS; task_ID++){
 140:../../src/kernel/source/nrk_events.c **** 
 141:../../src/kernel/source/nrk_events.c **** 
 142:../../src/kernel/source/nrk_events.c **** 	//	if (nrk_task_TCB[task_ID].task_state == EVENT_SUSPENDED)   
 143:../../src/kernel/source/nrk_events.c **** 	//	{
 144:../../src/kernel/source/nrk_events.c **** 	//	printf( "task %d is event suspended\r\n",task_ID );
 145:../../src/kernel/source/nrk_events.c **** 			if(nrk_task_TCB[task_ID].event_suspend==SIG_EVENT_SUSPENDED)
 146:../../src/kernel/source/nrk_events.c **** 				if((nrk_task_TCB[task_ID].active_signal_mask & sig_mask))
 147:../../src/kernel/source/nrk_events.c **** 				{
 148:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].task_state=SUSPENDED;
 149:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].next_wakeup=0;
 150:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].event_suspend=0;
 151:../../src/kernel/source/nrk_events.c **** 					// Add the event trigger here so it is returned
 152:../../src/kernel/source/nrk_events.c **** 					// from nrk_event_wait()
 153:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].active_signal_mask=sig_mask;
 154:../../src/kernel/source/nrk_events.c **** 					event_occured=1;
 155:../../src/kernel/source/nrk_events.c **** 				}
 156:../../src/kernel/source/nrk_events.c **** 
 157:../../src/kernel/source/nrk_events.c **** 			if(nrk_task_TCB[task_ID].event_suspend==RSRC_EVENT_SUSPENDED)
 158:../../src/kernel/source/nrk_events.c **** 				if((nrk_task_TCB[task_ID].active_signal_mask == sig_mask))
 159:../../src/kernel/source/nrk_events.c **** 				{
 160:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].task_state=SUSPENDED;
 161:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].next_wakeup=0;
 162:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].event_suspend=0;
 163:../../src/kernel/source/nrk_events.c **** 					// Add the event trigger here so it is returned
 164:../../src/kernel/source/nrk_events.c **** 					// from nrk_event_wait()
 165:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].active_signal_mask=0;
 166:../../src/kernel/source/nrk_events.c **** 					event_occured=1;
 167:../../src/kernel/source/nrk_events.c **** 				}   
 168:../../src/kernel/source/nrk_events.c **** 
 169:../../src/kernel/source/nrk_events.c **** 	//	}
 170:../../src/kernel/source/nrk_events.c **** 	}
 171:../../src/kernel/source/nrk_events.c **** 	nrk_int_enable();
 172:../../src/kernel/source/nrk_events.c **** 	if(event_occured)
 173:../../src/kernel/source/nrk_events.c **** 	{
 174:../../src/kernel/source/nrk_events.c **** 		return NRK_OK;
 175:../../src/kernel/source/nrk_events.c **** 	} 
 176:../../src/kernel/source/nrk_events.c **** 	// No task was waiting on the signal
 177:../../src/kernel/source/nrk_events.c **** 	_nrk_errno_set(2);
 178:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
 179:../../src/kernel/source/nrk_events.c **** }
 180:../../src/kernel/source/nrk_events.c **** 
 181:../../src/kernel/source/nrk_events.c **** 
 182:../../src/kernel/source/nrk_events.c **** uint32_t nrk_event_wait(uint32_t event_mask)
 183:../../src/kernel/source/nrk_events.c **** {
 184:../../src/kernel/source/nrk_events.c **** 
 185:../../src/kernel/source/nrk_events.c **** 	// FIXME: Should go through list and check that all masks are registered, not just 1
 186:../../src/kernel/source/nrk_events.c **** 	if(event_mask &  nrk_cur_task_TCB->registered_signal_mask)
 187:../../src/kernel/source/nrk_events.c **** 	  {
 188:../../src/kernel/source/nrk_events.c **** 	   nrk_cur_task_TCB->active_signal_mask=event_mask; 
 189:../../src/kernel/source/nrk_events.c **** 	   nrk_cur_task_TCB->event_suspend=SIG_EVENT_SUSPENDED; 
 190:../../src/kernel/source/nrk_events.c **** 	  }
 191:../../src/kernel/source/nrk_events.c **** 	else
 192:../../src/kernel/source/nrk_events.c **** 	  {
 193:../../src/kernel/source/nrk_events.c **** 	   return 0;
 194:../../src/kernel/source/nrk_events.c **** 	  }
 195:../../src/kernel/source/nrk_events.c **** 
 196:../../src/kernel/source/nrk_events.c **** 	if(event_mask & SIG(nrk_wakeup_signal))
 197:../../src/kernel/source/nrk_events.c **** 		nrk_wait_until_nw();
 198:../../src/kernel/source/nrk_events.c **** 	else
 199:../../src/kernel/source/nrk_events.c **** 		nrk_wait_until_ticks(0);
 200:../../src/kernel/source/nrk_events.c **** 	//unmask the signal when its return so it has logical value like 1 to or whatever was user defined
 201:../../src/kernel/source/nrk_events.c **** 	return ( (nrk_cur_task_TCB->active_signal_mask));
 202:../../src/kernel/source/nrk_events.c **** }
 203:../../src/kernel/source/nrk_events.c **** 
 204:../../src/kernel/source/nrk_events.c **** int8_t nrk_sem_query(nrk_sem_t *rsrc )
 205:../../src/kernel/source/nrk_events.c **** {
 206:../../src/kernel/source/nrk_events.c **** 	int8_t id;
 207:../../src/kernel/source/nrk_events.c **** 	id=nrk_get_resource_index(rsrc);  
 208:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 209:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 210:../../src/kernel/source/nrk_events.c **** 	
 211:../../src/kernel/source/nrk_events.c **** 	return(nrk_sem_list[id].value);
 212:../../src/kernel/source/nrk_events.c **** }
 213:../../src/kernel/source/nrk_events.c **** 
 214:../../src/kernel/source/nrk_events.c **** 
 215:../../src/kernel/source/nrk_events.c **** 
 216:../../src/kernel/source/nrk_events.c **** int8_t nrk_sem_pend(nrk_sem_t *rsrc )
 217:../../src/kernel/source/nrk_events.c **** {
 218:../../src/kernel/source/nrk_events.c **** 	int8_t id;
 219:../../src/kernel/source/nrk_events.c **** 	id=nrk_get_resource_index(rsrc);  
 220:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 221:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 222:../../src/kernel/source/nrk_events.c **** 	
 223:../../src/kernel/source/nrk_events.c **** 	nrk_int_disable();
 224:../../src/kernel/source/nrk_events.c **** 	if(nrk_sem_list[id].value==0)
 225:../../src/kernel/source/nrk_events.c **** 	{
 226:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->event_suspend|=RSRC_EVENT_SUSPENDED;
 227:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->active_signal_mask=id;
 228:../../src/kernel/source/nrk_events.c **** 		// Wait on suspend event
 229:../../src/kernel/source/nrk_events.c **** 		nrk_int_enable();
 230:../../src/kernel/source/nrk_events.c **** 		nrk_wait_until_ticks(0);
 231:../../src/kernel/source/nrk_events.c **** 	}
 232:../../src/kernel/source/nrk_events.c **** 
 233:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].value--;	
 234:../../src/kernel/source/nrk_events.c **** 	nrk_cur_task_TCB->task_prio_ceil=nrk_sem_list[id].resource_ceiling;
 235:../../src/kernel/source/nrk_events.c **** 	nrk_cur_task_TCB->elevated_prio_flag=1;
 236:../../src/kernel/source/nrk_events.c **** 	nrk_int_enable();
 237:../../src/kernel/source/nrk_events.c **** 
 238:../../src/kernel/source/nrk_events.c **** 	return NRK_OK;
 239:../../src/kernel/source/nrk_events.c **** }
 240:../../src/kernel/source/nrk_events.c **** 
 241:../../src/kernel/source/nrk_events.c **** 
 242:../../src/kernel/source/nrk_events.c **** 
 243:../../src/kernel/source/nrk_events.c **** int8_t nrk_sem_post(nrk_sem_t *rsrc)
 244:../../src/kernel/source/nrk_events.c **** {
 245:../../src/kernel/source/nrk_events.c **** 	int8_t id=nrk_get_resource_index(rsrc);	
 246:../../src/kernel/source/nrk_events.c **** 	int8_t task_ID;
 247:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 248:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 249:../../src/kernel/source/nrk_events.c **** 
 250:../../src/kernel/source/nrk_events.c **** 	if(nrk_sem_list[id].value<nrk_sem_list[id].count)
 251:../../src/kernel/source/nrk_events.c **** 	{
 252:../../src/kernel/source/nrk_events.c **** 		// Signal RSRC Event		
 253:../../src/kernel/source/nrk_events.c **** 		nrk_int_disable();
 254:../../src/kernel/source/nrk_events.c **** 
 255:../../src/kernel/source/nrk_events.c **** 		nrk_sem_list[id].value++;
 256:../../src/kernel/source/nrk_events.c **** 		nrk_cur_task_TCB->elevated_prio_flag=0;
 257:../../src/kernel/source/nrk_events.c **** 
 258:../../src/kernel/source/nrk_events.c **** 		for (task_ID=0; task_ID < NRK_MAX_TASKS; task_ID++){
 259:../../src/kernel/source/nrk_events.c **** 			if(nrk_task_TCB[task_ID].event_suspend==RSRC_EVENT_SUSPENDED)
 260:../../src/kernel/source/nrk_events.c **** 				if((nrk_task_TCB[task_ID].active_signal_mask == id))
 261:../../src/kernel/source/nrk_events.c **** 				{
 262:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].task_state=SUSPENDED;
 263:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].next_wakeup=0;
 264:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].event_suspend=0;
 265:../../src/kernel/source/nrk_events.c **** 					nrk_task_TCB[task_ID].active_signal_mask=0;
 266:../../src/kernel/source/nrk_events.c **** 				}   
 267:../../src/kernel/source/nrk_events.c **** 
 268:../../src/kernel/source/nrk_events.c **** 		}
 269:../../src/kernel/source/nrk_events.c **** 		nrk_int_enable();
 270:../../src/kernel/source/nrk_events.c **** 	}
 271:../../src/kernel/source/nrk_events.c **** 		
 272:../../src/kernel/source/nrk_events.c **** return NRK_OK;
 273:../../src/kernel/source/nrk_events.c **** }
 274:../../src/kernel/source/nrk_events.c **** 
 275:../../src/kernel/source/nrk_events.c **** int8_t  nrk_sem_delete(nrk_sem_t *rsrc)
 276:../../src/kernel/source/nrk_events.c **** {
 277:../../src/kernel/source/nrk_events.c **** int8_t id=nrk_get_resource_index(rsrc);	
 278:../../src/kernel/source/nrk_events.c **** 	int8_t task_ID;
 279:../../src/kernel/source/nrk_events.c **** 	if(id==-1) { _nrk_errno_set(1); return NRK_ERROR;}
 280:../../src/kernel/source/nrk_events.c **** 	if(id==NRK_MAX_RESOURCE_CNT) { _nrk_errno_set(2); return NRK_ERROR; }
 281:../../src/kernel/source/nrk_events.c **** 
 282:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].count=-1;
 283:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].value=-1;
 284:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[id].resource_ceiling=-1;
 285:../../src/kernel/source/nrk_events.c **** 	_nrk_resource_cnt--;
 286:../../src/kernel/source/nrk_events.c **** return NRK_OK;
 287:../../src/kernel/source/nrk_events.c **** }
 288:../../src/kernel/source/nrk_events.c **** 
 289:../../src/kernel/source/nrk_events.c **** nrk_sem_t* nrk_sem_create(uint8_t count,uint8_t ceiling_prio)
 290:../../src/kernel/source/nrk_events.c **** {
 424               	.LM19:
 425               	.LFBB5:
 426               	/* prologue: frame size=0 */
 427               	/* prologue end (size=0) */
 291:../../src/kernel/source/nrk_events.c **** uint8_t i;
 292:../../src/kernel/source/nrk_events.c **** 	if(_nrk_resource_cnt>=(NRK_MAX_RESOURCE_CNT-1))
 293:../../src/kernel/source/nrk_events.c **** 		return NULL;  
 294:../../src/kernel/source/nrk_events.c **** 	for(i=0; i<NRK_MAX_RESOURCE_CNT; i++ )
 295:../../src/kernel/source/nrk_events.c **** 		{
 296:../../src/kernel/source/nrk_events.c **** 		   if(nrk_sem_list[i].count==-1) break;
 297:../../src/kernel/source/nrk_events.c **** 		}
 298:../../src/kernel/source/nrk_events.c **** 	                                              
 299:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[i].value=count;
 300:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[i].count=count;
 301:../../src/kernel/source/nrk_events.c **** 	nrk_sem_list[i].resource_ceiling=ceiling_prio;
 302:../../src/kernel/source/nrk_events.c **** 	_nrk_resource_cnt++;
 303:../../src/kernel/source/nrk_events.c **** 	return	&nrk_sem_list[i];
 304:../../src/kernel/source/nrk_events.c **** }
 429               	.LM20:
 430 0184 80E0      		ldi r24,lo8(0)
 431 0186 90E0      		ldi r25,hi8(0)
 432               	/* epilogue: frame size=0 */
 433 0188 0895      		ret
 434               	/* epilogue end (size=1) */
 435               	/* function nrk_sem_create size 3 (2) */
 437               	.Lscope5:
 439               		.stabd	78,0,0
 442               	.global	nrk_get_resource_index
 444               	nrk_get_resource_index:
 445               		.stabd	46,0,0
 305:../../src/kernel/source/nrk_events.c **** 
 306:../../src/kernel/source/nrk_events.c **** int8_t nrk_get_resource_index(nrk_sem_t *resrc)
 307:../../src/kernel/source/nrk_events.c **** {
 447               	.LM21:
 448               	.LFBB6:
 449               	/* prologue: frame size=0 */
 450               	/* prologue end (size=0) */
 308:../../src/kernel/source/nrk_events.c **** 	int8_t id;
 309:../../src/kernel/source/nrk_events.c **** 		for(id=0;id<NRK_MAX_RESOURCE_CNT;id++)
 310:../../src/kernel/source/nrk_events.c **** 			if((nrk_sem_t *)(&nrk_sem_list[id])==(nrk_sem_t*)resrc)
 452               	.LM22:
 453 018a 8050      		subi r24,lo8(nrk_sem_list)
 454 018c 9040      		sbci r25,hi8(nrk_sem_list)
 455 018e 01F0      		breq .L25
 457               	.LM23:
 458 0190 8FEF      		ldi r24,lo8(-1)
 459 0192 9FEF      		ldi r25,hi8(-1)
 460 0194 0895      		ret
 461               	.L25:
 462 0196 80E0      		ldi r24,lo8(0)
 463 0198 90E0      		ldi r25,hi8(0)
 311:../../src/kernel/source/nrk_events.c **** 				return id;
 312:../../src/kernel/source/nrk_events.c **** 	return NRK_ERROR;
 313:../../src/kernel/source/nrk_events.c **** }
 465               	.LM24:
 466 019a 0895      		ret
 467               	/* epilogue: frame size=0 */
 468               	/* epilogue: noreturn */
 469               	/* epilogue end (size=0) */
 470               	/* function nrk_get_resource_index size 10 (10) */
 472               	.Lscope6:
 474               		.stabd	78,0,0
 477               	.global	nrk_sem_delete
 479               	nrk_sem_delete:
 480               		.stabd	46,0,0
 482               	.LM25:
 483               	.LFBB7:
 484               	/* prologue: frame size=0 */
 485               	/* prologue end (size=0) */
 487               	.LM26:
 488 019c 0E94 0000 		call nrk_get_resource_index
 490               	.LM27:
 491 01a0 8F3F      		cpi r24,lo8(-1)
 492 01a2 01F4      		brne .L30
 494               	.LM28:
 495 01a4 81E0      		ldi r24,lo8(1)
 496 01a6 00C0      		rjmp .L36
 497               	.L30:
 499               	.LM29:
 500 01a8 8130      		cpi r24,lo8(1)
 501 01aa 01F4      		brne .L33
 502 01ac 82E0      		ldi r24,lo8(2)
 503               	.L36:
 504 01ae 0E94 0000 		call _nrk_errno_set
 505 01b2 8FEF      		ldi r24,lo8(-1)
 506 01b4 9FEF      		ldi r25,hi8(-1)
 507 01b6 0895      		ret
 508               	.L33:
 510               	.LM30:
 511 01b8 9927      		clr r25
 512 01ba 87FD      		sbrc r24,7
 513 01bc 9095      		com r25
 514 01be FC01      		movw r30,r24
 515 01c0 EE0F      		lsl r30
 516 01c2 FF1F      		rol r31
 517 01c4 E80F      		add r30,r24
 518 01c6 F91F      		adc r31,r25
 519 01c8 E050      		subi r30,lo8(-(nrk_sem_list))
 520 01ca F040      		sbci r31,hi8(-(nrk_sem_list))
 521 01cc 8FEF      		ldi r24,lo8(-1)
 522 01ce 8083      		st Z,r24
 524               	.LM31:
 525 01d0 8283      		std Z+2,r24
 527               	.LM32:
 528 01d2 8183      		std Z+1,r24
 530               	.LM33:
 531 01d4 8091 0000 		lds r24,_nrk_resource_cnt
 532 01d8 8150      		subi r24,lo8(-(-1))
 533 01da 8093 0000 		sts _nrk_resource_cnt,r24
 534 01de 81E0      		ldi r24,lo8(1)
 535 01e0 90E0      		ldi r25,hi8(1)
 537               	.LM34:
 538 01e2 0895      		ret
 539               	/* epilogue: frame size=0 */
 540               	/* epilogue: noreturn */
 541               	/* epilogue end (size=0) */
 542               	/* function nrk_sem_delete size 36 (36) */
 547               	.Lscope7:
 549               		.stabd	78,0,0
 552               	.global	nrk_sem_query
 554               	nrk_sem_query:
 555               		.stabd	46,0,0
 557               	.LM35:
 558               	.LFBB8:
 559               	/* prologue: frame size=0 */
 560               	/* prologue end (size=0) */
 562               	.LM36:
 563 01e4 0E94 0000 		call nrk_get_resource_index
 565               	.LM37:
 566 01e8 8F3F      		cpi r24,lo8(-1)
 567 01ea 01F4      		brne .L38
 569               	.LM38:
 570 01ec 81E0      		ldi r24,lo8(1)
 571 01ee 00C0      		rjmp .L44
 572               	.L38:
 574               	.LM39:
 575 01f0 8130      		cpi r24,lo8(1)
 576 01f2 01F4      		brne .L41
 577 01f4 82E0      		ldi r24,lo8(2)
 578               	.L44:
 579 01f6 0E94 0000 		call _nrk_errno_set
 580 01fa 8FEF      		ldi r24,lo8(-1)
 581 01fc 9FEF      		ldi r25,hi8(-1)
 582 01fe 0895      		ret
 583               	.L41:
 585               	.LM40:
 586 0200 9927      		clr r25
 587 0202 87FD      		sbrc r24,7
 588 0204 9095      		com r25
 589 0206 FC01      		movw r30,r24
 590 0208 EE0F      		lsl r30
 591 020a FF1F      		rol r31
 592 020c E80F      		add r30,r24
 593 020e F91F      		adc r31,r25
 594 0210 E050      		subi r30,lo8(-(nrk_sem_list))
 595 0212 F040      		sbci r31,hi8(-(nrk_sem_list))
 596 0214 8281      		ldd r24,Z+2
 597 0216 9927      		clr r25
 598 0218 87FD      		sbrc r24,7
 599 021a 9095      		com r25
 601               	.LM41:
 602 021c 0895      		ret
 603               	/* epilogue: frame size=0 */
 604               	/* epilogue: noreturn */
 605               	/* epilogue end (size=0) */
 606               	/* function nrk_sem_query size 29 (29) */
 611               	.Lscope8:
 613               		.stabd	78,0,0
 616               	.global	nrk_sem_post
 618               	nrk_sem_post:
 619               		.stabd	46,0,0
 621               	.LM42:
 622               	.LFBB9:
 623               	/* prologue: frame size=0 */
 624 021e 1F93      		push r17
 625 0220 CF93      		push r28
 626 0222 DF93      		push r29
 627               	/* prologue end (size=3) */
 629               	.LM43:
 630 0224 0E94 0000 		call nrk_get_resource_index
 631 0228 182F      		mov r17,r24
 633               	.LM44:
 634 022a 8F3F      		cpi r24,lo8(-1)
 635 022c 01F4      		brne .L46
 637               	.LM45:
 638 022e 81E0      		ldi r24,lo8(1)
 639 0230 00C0      		rjmp .L61
 640               	.L46:
 642               	.LM46:
 643 0232 8130      		cpi r24,lo8(1)
 644 0234 01F4      		brne .L49
 645 0236 82E0      		ldi r24,lo8(2)
 646               	.L61:
 647 0238 0E94 0000 		call _nrk_errno_set
 648 023c 8FEF      		ldi r24,lo8(-1)
 649 023e 9FEF      		ldi r25,hi8(-1)
 650 0240 00C0      		rjmp .L48
 651               	.L49:
 653               	.LM47:
 654 0242 9927      		clr r25
 655 0244 87FD      		sbrc r24,7
 656 0246 9095      		com r25
 657 0248 EC01      		movw r28,r24
 658 024a CC0F      		lsl r28
 659 024c DD1F      		rol r29
 660 024e C80F      		add r28,r24
 661 0250 D91F      		adc r29,r25
 662 0252 C050      		subi r28,lo8(-(nrk_sem_list))
 663 0254 D040      		sbci r29,hi8(-(nrk_sem_list))
 664 0256 9A81      		ldd r25,Y+2
 665 0258 8881      		ld r24,Y
 666 025a 9817      		cp r25,r24
 667 025c 04F4      		brge .L62
 669               	.LM48:
 670 025e 0E94 0000 		call nrk_int_disable
 672               	.LM49:
 673 0262 8A81      		ldd r24,Y+2
 674 0264 8F5F      		subi r24,lo8(-(1))
 675 0266 8A83      		std Y+2,r24
 677               	.LM50:
 678 0268 E091 0000 		lds r30,nrk_cur_task_TCB
 679 026c F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 680 0270 1482      		std Z+4,__zero_reg__
 681 0272 E0E0      		ldi r30,lo8(nrk_task_TCB+7)
 682 0274 F0E0      		ldi r31,hi8(nrk_task_TCB+7)
 684               	.LM51:
 685 0276 212F      		mov r18,r17
 686 0278 3327      		clr r19
 687 027a 27FD      		sbrc r18,7
 688 027c 3095      		com r19
 689 027e 432F      		mov r20,r19
 690 0280 532F      		mov r21,r19
 691               	.L53:
 693               	.LM52:
 694 0282 8081      		ld r24,Z
 695 0284 8230      		cpi r24,lo8(2)
 696 0286 01F4      		brne .L54
 698               	.LM53:
 699 0288 8285      		ldd r24,Z+10
 700 028a 9385      		ldd r25,Z+11
 701 028c A485      		ldd r26,Z+12
 702 028e B585      		ldd r27,Z+13
 703 0290 8217      		cp r24,r18
 704 0292 9307      		cpc r25,r19
 705 0294 A407      		cpc r26,r20
 706 0296 B507      		cpc r27,r21
 707 0298 01F4      		brne .L54
 709               	.LM54:
 710 029a 83E0      		ldi r24,lo8(3)
 711 029c 8283      		std Z+2,r24
 713               	.LM55:
 714 029e 1786      		std Z+15,__zero_reg__
 715 02a0 1686      		std Z+14,__zero_reg__
 717               	.LM56:
 718 02a2 1082      		st Z,__zero_reg__
 720               	.LM57:
 721 02a4 1286      		std Z+10,__zero_reg__
 722 02a6 1386      		std Z+11,__zero_reg__
 723 02a8 1486      		std Z+12,__zero_reg__
 724 02aa 1586      		std Z+13,__zero_reg__
 725               	.L54:
 726 02ac B196      		adiw r30,33
 728               	.LM58:
 729 02ae 80E0      		ldi r24,hi8(nrk_task_TCB+172)
 730 02b0 E030      		cpi r30,lo8(nrk_task_TCB+172)
 731 02b2 F807      		cpc r31,r24
 732 02b4 01F4      		brne .L53
 734               	.LM59:
 735 02b6 0E94 0000 		call nrk_int_enable
 736               	.L62:
 737 02ba 81E0      		ldi r24,lo8(1)
 738 02bc 90E0      		ldi r25,hi8(1)
 739               	.L48:
 740               	/* epilogue: frame size=0 */
 741 02be DF91      		pop r29
 742 02c0 CF91      		pop r28
 743 02c2 1F91      		pop r17
 744 02c4 0895      		ret
 745               	/* epilogue end (size=4) */
 746               	/* function nrk_sem_post size 84 (77) */
 751               	.Lscope9:
 753               		.stabd	78,0,0
 756               	.global	nrk_event_signal
 758               	nrk_event_signal:
 759               		.stabd	46,0,0
 761               	.LM60:
 762               	.LFBB10:
 763               	/* prologue: frame size=0 */
 764 02c6 DF92      		push r13
 765 02c8 EF92      		push r14
 766 02ca FF92      		push r15
 767 02cc 0F93      		push r16
 768 02ce 1F93      		push r17
 769               	/* prologue end (size=5) */
 771               	.LM61:
 772 02d0 51E0      		ldi r21,lo8(1)
 773 02d2 E52E      		mov r14,r21
 774 02d4 F12C      		mov r15,__zero_reg__
 775 02d6 012D      		mov r16,__zero_reg__
 776 02d8 112D      		mov r17,__zero_reg__
 777 02da 00C0      		rjmp 2f
 778 02dc EE0C      	1:	lsl r14
 779 02de FF1C      		rol r15
 780 02e0 001F      		rol r16
 781 02e2 111F      		rol r17
 782 02e4 8A95      	2:	dec r24
 783 02e6 02F4      		brpl 1b
 785               	.LM62:
 786 02e8 8091 0000 		lds r24,_nrk_signal_list
 787 02ec 9091 0000 		lds r25,(_nrk_signal_list)+1
 788 02f0 A091 0000 		lds r26,(_nrk_signal_list)+2
 789 02f4 B091 0000 		lds r27,(_nrk_signal_list)+3
 790 02f8 8E21      		and r24,r14
 791 02fa 9F21      		and r25,r15
 792 02fc A023      		and r26,r16
 793 02fe B123      		and r27,r17
 794 0300 0097      		sbiw r24,0
 795 0302 A105      		cpc r26,__zero_reg__
 796 0304 B105      		cpc r27,__zero_reg__
 797 0306 01F4      		brne .L64
 799               	.LM63:
 800 0308 81E0      		ldi r24,lo8(1)
 801 030a 00C0      		rjmp .L80
 802               	.L64:
 804               	.LM64:
 805 030c 0E94 0000 		call nrk_int_disable
 806 0310 E0E0      		ldi r30,lo8(nrk_task_TCB+7)
 807 0312 F0E0      		ldi r31,hi8(nrk_task_TCB+7)
 808 0314 DD24      		clr r13
 809               	.L67:
 811               	.LM65:
 812 0316 8081      		ld r24,Z
 813 0318 8130      		cpi r24,lo8(1)
 814 031a 01F4      		brne .L68
 816               	.LM66:
 817 031c 8285      		ldd r24,Z+10
 818 031e 9385      		ldd r25,Z+11
 819 0320 A485      		ldd r26,Z+12
 820 0322 B585      		ldd r27,Z+13
 821 0324 8E21      		and r24,r14
 822 0326 9F21      		and r25,r15
 823 0328 A023      		and r26,r16
 824 032a B123      		and r27,r17
 825 032c 0097      		sbiw r24,0
 826 032e A105      		cpc r26,__zero_reg__
 827 0330 B105      		cpc r27,__zero_reg__
 828 0332 01F0      		breq .L68
 830               	.LM67:
 831 0334 83E0      		ldi r24,lo8(3)
 832 0336 8283      		std Z+2,r24
 834               	.LM68:
 835 0338 1786      		std Z+15,__zero_reg__
 836 033a 1686      		std Z+14,__zero_reg__
 838               	.LM69:
 839 033c 1082      		st Z,__zero_reg__
 841               	.LM70:
 842 033e E286      		std Z+10,r14
 843 0340 F386      		std Z+11,r15
 844 0342 0487      		std Z+12,r16
 845 0344 1587      		std Z+13,r17
 846 0346 DD24      		clr r13
 847 0348 D394      		inc r13
 848               	.L68:
 850               	.LM71:
 851 034a 8081      		ld r24,Z
 852 034c 8230      		cpi r24,lo8(2)
 853 034e 01F4      		brne .L71
 855               	.LM72:
 856 0350 8285      		ldd r24,Z+10
 857 0352 9385      		ldd r25,Z+11
 858 0354 A485      		ldd r26,Z+12
 859 0356 B585      		ldd r27,Z+13
 860 0358 8E15      		cp r24,r14
 861 035a 9F05      		cpc r25,r15
 862 035c A007      		cpc r26,r16
 863 035e B107      		cpc r27,r17
 864 0360 01F4      		brne .L71
 866               	.LM73:
 867 0362 83E0      		ldi r24,lo8(3)
 868 0364 8283      		std Z+2,r24
 870               	.LM74:
 871 0366 1786      		std Z+15,__zero_reg__
 872 0368 1686      		std Z+14,__zero_reg__
 874               	.LM75:
 875 036a 1082      		st Z,__zero_reg__
 877               	.LM76:
 878 036c 1286      		std Z+10,__zero_reg__
 879 036e 1386      		std Z+11,__zero_reg__
 880 0370 1486      		std Z+12,__zero_reg__
 881 0372 1586      		std Z+13,__zero_reg__
 882 0374 DD24      		clr r13
 883 0376 D394      		inc r13
 884               	.L71:
 885 0378 B196      		adiw r30,33
 887               	.LM77:
 888 037a 80E0      		ldi r24,hi8(nrk_task_TCB+172)
 889 037c E030      		cpi r30,lo8(nrk_task_TCB+172)
 890 037e F807      		cpc r31,r24
 891 0380 01F4      		brne .L67
 893               	.LM78:
 894 0382 0E94 0000 		call nrk_int_enable
 896               	.LM79:
 897 0386 DD20      		tst r13
 898 0388 01F0      		breq .L75
 899 038a 81E0      		ldi r24,lo8(1)
 900 038c 90E0      		ldi r25,hi8(1)
 901 038e 00C0      		rjmp .L66
 902               	.L75:
 904               	.LM80:
 905 0390 82E0      		ldi r24,lo8(2)
 906               	.L80:
 907 0392 0E94 0000 		call _nrk_errno_set
 908 0396 8FEF      		ldi r24,lo8(-1)
 909 0398 9FEF      		ldi r25,hi8(-1)
 910               	.L66:
 911               	/* epilogue: frame size=0 */
 912 039a 1F91      		pop r17
 913 039c 0F91      		pop r16
 914 039e FF90      		pop r15
 915 03a0 EF90      		pop r14
 916 03a2 DF90      		pop r13
 917 03a4 0895      		ret
 918               	/* epilogue end (size=6) */
 919               	/* function nrk_event_signal size 113 (102) */
 925               	.Lscope10:
 927               		.stabd	78,0,0
 930               	.global	nrk_signal_delete
 932               	nrk_signal_delete:
 933               		.stabd	46,0,0
 935               	.LM81:
 936               	.LFBB11:
 937               	/* prologue: frame size=0 */
 938 03a6 EF92      		push r14
 939 03a8 FF92      		push r15
 940 03aa 0F93      		push r16
 941 03ac 1F93      		push r17
 942 03ae CF93      		push r28
 943 03b0 DF93      		push r29
 944               	/* prologue end (size=6) */
 946               	.LM82:
 947 03b2 C82F      		mov r28,r24
 948 03b4 DD27      		clr r29
 949 03b6 C7FD      		sbrc r28,7
 950 03b8 D095      		com r29
 951 03ba 61E0      		ldi r22,lo8(1)
 952 03bc E62E      		mov r14,r22
 953 03be F12C      		mov r15,__zero_reg__
 954 03c0 012D      		mov r16,__zero_reg__
 955 03c2 112D      		mov r17,__zero_reg__
 956 03c4 0C2E      		mov r0,r28
 957 03c6 00C0      		rjmp 2f
 958 03c8 EE0C      	1:	lsl r14
 959 03ca FF1C      		rol r15
 960 03cc 001F      		rol r16
 961 03ce 111F      		rol r17
 962 03d0 0A94      	2:	dec r0
 963 03d2 02F4      		brpl 1b
 965               	.LM83:
 966 03d4 8091 0000 		lds r24,_nrk_signal_list
 967 03d8 9091 0000 		lds r25,(_nrk_signal_list)+1
 968 03dc A091 0000 		lds r26,(_nrk_signal_list)+2
 969 03e0 B091 0000 		lds r27,(_nrk_signal_list)+3
 970 03e4 8E21      		and r24,r14
 971 03e6 9F21      		and r25,r15
 972 03e8 A023      		and r26,r16
 973 03ea B123      		and r27,r17
 974 03ec 0097      		sbiw r24,0
 975 03ee A105      		cpc r26,__zero_reg__
 976 03f0 B105      		cpc r27,__zero_reg__
 977 03f2 01F4      		brne .L82
 979               	.LM84:
 980 03f4 8FEF      		ldi r24,lo8(-1)
 981 03f6 9FEF      		ldi r25,hi8(-1)
 982 03f8 00C0      		rjmp .L84
 983               	.L82:
 985               	.LM85:
 986 03fa 0E94 0000 		call nrk_int_disable
 987 03fe E0E0      		ldi r30,lo8(nrk_task_TCB)
 988 0400 F0E0      		ldi r31,hi8(nrk_task_TCB)
 990               	.LM86:
 991 0402 A801      		movw r20,r16
 992 0404 9701      		movw r18,r14
 993 0406 2095      		com r18
 994 0408 3095      		com r19
 995 040a 4095      		com r20
 996 040c 5095      		com r21
 997               	.L85:
 999               	.LM87:
 1000 040e 8085      		ldd r24,Z+8
 1001 0410 8F3F      		cpi r24,lo8(-1)
 1002 0412 01F0      		breq .L86
 1004               	.LM88:
 1005 0414 8585      		ldd r24,Z+13
 1006 0416 9685      		ldd r25,Z+14
 1007 0418 A785      		ldd r26,Z+15
 1008 041a B089      		ldd r27,Z+16
 1009 041c 8E15      		cp r24,r14
 1010 041e 9F05      		cpc r25,r15
 1011 0420 A007      		cpc r26,r16
 1012 0422 B107      		cpc r27,r17
 1013 0424 01F4      		brne .L88
 1015               	.LM89:
 1016 0426 118A      		std Z+17,__zero_reg__
 1017 0428 128A      		std Z+18,__zero_reg__
 1018 042a 138A      		std Z+19,__zero_reg__
 1019 042c 148A      		std Z+20,__zero_reg__
 1021               	.LM90:
 1022 042e 1782      		std Z+7,__zero_reg__
 1024               	.LM91:
 1025 0430 83E0      		ldi r24,lo8(3)
 1026 0432 8187      		std Z+9,r24
 1027               	.L88:
 1029               	.LM92:
 1030 0434 8585      		ldd r24,Z+13
 1031 0436 9685      		ldd r25,Z+14
 1032 0438 A785      		ldd r26,Z+15
 1033 043a B089      		ldd r27,Z+16
 1034 043c 8223      		and r24,r18
 1035 043e 9323      		and r25,r19
 1036 0440 A423      		and r26,r20
 1037 0442 B523      		and r27,r21
 1038 0444 8587      		std Z+13,r24
 1039 0446 9687      		std Z+14,r25
 1040 0448 A787      		std Z+15,r26
 1041 044a B08B      		std Z+16,r27
 1043               	.LM93:
 1044 044c 8189      		ldd r24,Z+17
 1045 044e 9289      		ldd r25,Z+18
 1046 0450 A389      		ldd r26,Z+19
 1047 0452 B489      		ldd r27,Z+20
 1048 0454 8223      		and r24,r18
 1049 0456 9323      		and r25,r19
 1050 0458 A423      		and r26,r20
 1051 045a B523      		and r27,r21
 1052 045c 818B      		std Z+17,r24
 1053 045e 928B      		std Z+18,r25
 1054 0460 A38B      		std Z+19,r26
 1055 0462 B48B      		std Z+20,r27
 1056               	.L86:
 1057 0464 B196      		adiw r30,33
 1059               	.LM94:
 1060 0466 80E0      		ldi r24,hi8(nrk_task_TCB+165)
 1061 0468 E030      		cpi r30,lo8(nrk_task_TCB+165)
 1062 046a F807      		cpc r31,r24
 1063 046c 01F4      		brne .L85
 1065               	.LM95:
 1066 046e 2EEF      		ldi r18,lo8(-2)
 1067 0470 3FEF      		ldi r19,hi8(-2)
 1068 0472 4FEF      		ldi r20,hlo8(-2)
 1069 0474 5FEF      		ldi r21,hhi8(-2)
 1070 0476 00C0      		rjmp 2f
 1071 0478 220F      	1:	lsl r18
 1072 047a 331F      		rol r19
 1073 047c 441F      		rol r20
 1074 047e 551F      		rol r21
 1075 0480 CA95      	2:	dec r28
 1076 0482 02F4      		brpl 1b
 1077 0484 8091 0000 		lds r24,_nrk_signal_list
 1078 0488 9091 0000 		lds r25,(_nrk_signal_list)+1
 1079 048c A091 0000 		lds r26,(_nrk_signal_list)+2
 1080 0490 B091 0000 		lds r27,(_nrk_signal_list)+3
 1081 0494 8223      		and r24,r18
 1082 0496 9323      		and r25,r19
 1083 0498 A423      		and r26,r20
 1084 049a B523      		and r27,r21
 1085 049c 8093 0000 		sts _nrk_signal_list,r24
 1086 04a0 9093 0000 		sts (_nrk_signal_list)+1,r25
 1087 04a4 A093 0000 		sts (_nrk_signal_list)+2,r26
 1088 04a8 B093 0000 		sts (_nrk_signal_list)+3,r27
 1090               	.LM96:
 1091 04ac 0E94 0000 		call nrk_int_enable
 1092 04b0 81E0      		ldi r24,lo8(1)
 1093 04b2 90E0      		ldi r25,hi8(1)
 1094               	.L84:
 1095               	/* epilogue: frame size=0 */
 1096 04b4 DF91      		pop r29
 1097 04b6 CF91      		pop r28
 1098 04b8 1F91      		pop r17
 1099 04ba 0F91      		pop r16
 1100 04bc FF90      		pop r15
 1101 04be EF90      		pop r14
 1102 04c0 0895      		ret
 1103               	/* epilogue end (size=7) */
 1104               	/* function nrk_signal_delete size 143 (130) */
 1109               	.Lscope11:
 1111               		.stabd	78,0,0
 1114               	.global	nrk_sem_pend
 1116               	nrk_sem_pend:
 1117               		.stabd	46,0,0
 1119               	.LM97:
 1120               	.LFBB12:
 1121               	/* prologue: frame size=0 */
 1122 04c2 1F93      		push r17
 1123 04c4 CF93      		push r28
 1124 04c6 DF93      		push r29
 1125               	/* prologue end (size=3) */
 1127               	.LM98:
 1128 04c8 0E94 0000 		call nrk_get_resource_index
 1129 04cc 182F      		mov r17,r24
 1131               	.LM99:
 1132 04ce 8F3F      		cpi r24,lo8(-1)
 1133 04d0 01F4      		brne .L95
 1135               	.LM100:
 1136 04d2 81E0      		ldi r24,lo8(1)
 1137 04d4 00C0      		rjmp .L103
 1138               	.L95:
 1140               	.LM101:
 1141 04d6 8130      		cpi r24,lo8(1)
 1142 04d8 01F4      		brne .L98
 1143 04da 82E0      		ldi r24,lo8(2)
 1144               	.L103:
 1145 04dc 0E94 0000 		call _nrk_errno_set
 1146 04e0 8FEF      		ldi r24,lo8(-1)
 1147 04e2 9FEF      		ldi r25,hi8(-1)
 1148 04e4 00C0      		rjmp .L97
 1149               	.L98:
 1151               	.LM102:
 1152 04e6 0E94 0000 		call nrk_int_disable
 1154               	.LM103:
 1155 04ea 812F      		mov r24,r17
 1156 04ec 9927      		clr r25
 1157 04ee 87FD      		sbrc r24,7
 1158 04f0 9095      		com r25
 1159 04f2 EC01      		movw r28,r24
 1160 04f4 CC0F      		lsl r28
 1161 04f6 DD1F      		rol r29
 1162 04f8 C80F      		add r28,r24
 1163 04fa D91F      		adc r29,r25
 1164 04fc C050      		subi r28,lo8(-(nrk_sem_list))
 1165 04fe D040      		sbci r29,hi8(-(nrk_sem_list))
 1166 0500 8A81      		ldd r24,Y+2
 1167 0502 8823      		tst r24
 1168 0504 01F4      		brne .L100
 1170               	.LM104:
 1171 0506 E091 0000 		lds r30,nrk_cur_task_TCB
 1172 050a F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1173 050e 8781      		ldd r24,Z+7
 1174 0510 8260      		ori r24,lo8(2)
 1175 0512 8783      		std Z+7,r24
 1177               	.LM105:
 1178 0514 E091 0000 		lds r30,nrk_cur_task_TCB
 1179 0518 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1180 051c 812F      		mov r24,r17
 1181 051e 9927      		clr r25
 1182 0520 87FD      		sbrc r24,7
 1183 0522 9095      		com r25
 1184 0524 A92F      		mov r26,r25
 1185 0526 B92F      		mov r27,r25
 1186 0528 818B      		std Z+17,r24
 1187 052a 928B      		std Z+18,r25
 1188 052c A38B      		std Z+19,r26
 1189 052e B48B      		std Z+20,r27
 1191               	.LM106:
 1192 0530 0E94 0000 		call nrk_int_enable
 1194               	.LM107:
 1195 0534 80E0      		ldi r24,lo8(0)
 1196 0536 90E0      		ldi r25,hi8(0)
 1197 0538 0E94 0000 		call nrk_wait_until_ticks
 1198               	.L100:
 1200               	.LM108:
 1201 053c 8A81      		ldd r24,Y+2
 1202 053e 8150      		subi r24,lo8(-(-1))
 1203 0540 8A83      		std Y+2,r24
 1205               	.LM109:
 1206 0542 E091 0000 		lds r30,nrk_cur_task_TCB
 1207 0546 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1208 054a 8981      		ldd r24,Y+1
 1209 054c 8387      		std Z+11,r24
 1211               	.LM110:
 1212 054e E091 0000 		lds r30,nrk_cur_task_TCB
 1213 0552 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1214 0556 81E0      		ldi r24,lo8(1)
 1215 0558 8483      		std Z+4,r24
 1217               	.LM111:
 1218 055a 0E94 0000 		call nrk_int_enable
 1219 055e 81E0      		ldi r24,lo8(1)
 1220 0560 90E0      		ldi r25,hi8(1)
 1221               	.L97:
 1222               	/* epilogue: frame size=0 */
 1223 0562 DF91      		pop r29
 1224 0564 CF91      		pop r28
 1225 0566 1F91      		pop r17
 1226 0568 0895      		ret
 1227               	/* epilogue end (size=4) */
 1228               	/* function nrk_sem_pend size 84 (77) */
 1233               	.Lscope12:
 1235               		.stabd	78,0,0
 1238               	.global	nrk_event_wait
 1240               	nrk_event_wait:
 1241               		.stabd	46,0,0
 1243               	.LM112:
 1244               	.LFBB13:
 1245               	/* prologue: frame size=0 */
 1246               	/* prologue end (size=0) */
 1247 056a 9B01      		movw r18,r22
 1248 056c AC01      		movw r20,r24
 1250               	.LM113:
 1251 056e E091 0000 		lds r30,nrk_cur_task_TCB
 1252 0572 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1253 0576 8585      		ldd r24,Z+13
 1254 0578 9685      		ldd r25,Z+14
 1255 057a A785      		ldd r26,Z+15
 1256 057c B089      		ldd r27,Z+16
 1257 057e 8223      		and r24,r18
 1258 0580 9323      		and r25,r19
 1259 0582 A423      		and r26,r20
 1260 0584 B523      		and r27,r21
 1261 0586 0097      		sbiw r24,0
 1262 0588 A105      		cpc r26,__zero_reg__
 1263 058a B105      		cpc r27,__zero_reg__
 1264 058c 01F4      		brne .L105
 1266               	.LM114:
 1267 058e 60E0      		ldi r22,lo8(0)
 1268 0590 70E0      		ldi r23,hi8(0)
 1269 0592 80E0      		ldi r24,hlo8(0)
 1270 0594 90E0      		ldi r25,hhi8(0)
 1271 0596 0895      		ret
 1272               	.L105:
 1274               	.LM115:
 1275 0598 218B      		std Z+17,r18
 1276 059a 328B      		std Z+18,r19
 1277 059c 438B      		std Z+19,r20
 1278 059e 548B      		std Z+20,r21
 1280               	.LM116:
 1281 05a0 81E0      		ldi r24,lo8(1)
 1282 05a2 8783      		std Z+7,r24
 1284               	.LM117:
 1285 05a4 0090 0000 		lds r0,nrk_wakeup_signal
 1286 05a8 00C0      		rjmp 2f
 1287 05aa 5695      	1:	lsr r21
 1288 05ac 4795      		ror r20
 1289 05ae 3795      		ror r19
 1290 05b0 2795      		ror r18
 1291 05b2 0A94      	2:	dec r0
 1292 05b4 02F4      		brpl 1b
 1293 05b6 C901      		movw r24,r18
 1294 05b8 8170      		andi r24,lo8(1)
 1295 05ba 9070      		andi r25,hi8(1)
 1296 05bc 892B      		or r24,r25
 1297 05be 01F0      		breq .L108
 1299               	.LM118:
 1300 05c0 0E94 0000 		call nrk_wait_until_nw
 1301 05c4 00C0      		rjmp .L110
 1302               	.L108:
 1304               	.LM119:
 1305 05c6 80E0      		ldi r24,lo8(0)
 1306 05c8 90E0      		ldi r25,hi8(0)
 1307 05ca 0E94 0000 		call nrk_wait_until_ticks
 1308               	.L110:
 1310               	.LM120:
 1311 05ce E091 0000 		lds r30,nrk_cur_task_TCB
 1312 05d2 F091 0000 		lds r31,(nrk_cur_task_TCB)+1
 1313 05d6 6189      		ldd r22,Z+17
 1314 05d8 7289      		ldd r23,Z+18
 1315 05da 8389      		ldd r24,Z+19
 1316 05dc 9489      		ldd r25,Z+20
 1318               	.LM121:
 1319 05de 0895      		ret
 1320               	/* epilogue: frame size=0 */
 1321               	/* epilogue: noreturn */
 1322               	/* epilogue end (size=0) */
 1323               	/* function nrk_event_wait size 59 (59) */
 1325               	.Lscope13:
 1327               		.stabd	78,0,0
 1328               		.comm _nrk_signal_list,4,1
 1329               		.comm nrk_idle_task_stk,128,1
 1330               		.comm nrk_kernel_stk_ptr,2,1
 1331               		.comm nrk_task_TCB,165,1
 1332               		.comm nrk_wakeup_signal,1,1
 1333               		.comm _nrk_readyQ,30,1
 1334               		.comm _free_node,2,1
 1335               		.comm _head_node,2,1
 1336               		.comm nrk_cur_task_prio,1,1
 1337               		.comm nrk_cur_task_TCB,2,1
 1338               		.comm nrk_high_ready_prio,1,1
 1339               		.comm nrk_high_ready_TCB,2,1
 1340               		.comm _nrk_resource_cnt,1,1
 1341               		.comm nrk_system_time,8,1
 1342               		.comm error_task,1,1
 1343               		.comm error_num,1,1
 1344               		.comm _nrk_cpu_state,1,1
 1345               		.comm next_next_wakeup,2,1
 1346               		.comm _nrk_prev_timer_val,1,1
 1347               		.comm _nrk_time_trigger,1,1
 1348               		.comm app_timer0_callback,2,1
 1349               		.comm app_timer0_prescale,1,1
 1350               		.comm nrk_sem_list,3,1
 1375               	.Letext0:
 1376               	/* File "../../src/kernel/source/nrk_events.c": code  757 = 0x02f5 ( 708), prologues  21, epilogues
DEFINED SYMBOLS
                            *ABS*:0000000000000000 nrk_events.c
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:2      *ABS*:000000000000003f __SREG__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:3      *ABS*:000000000000003e __SP_H__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:4      *ABS*:000000000000003d __SP_L__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:130    .text:0000000000000000 nrk_signal_create
                            *COM*:0000000000000004 _nrk_signal_list
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:218    .text:000000000000007a nrk_signal_get_registered_mask
                            *COM*:0000000000000002 nrk_cur_task_TCB
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:243    .text:000000000000008c nrk_signal_unregister
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:341    .text:0000000000000112 nrk_signal_register
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:421    .text:0000000000000184 nrk_sem_create
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:444    .text:000000000000018a nrk_get_resource_index
                            *COM*:0000000000000003 nrk_sem_list
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:479    .text:000000000000019c nrk_sem_delete
                            *COM*:0000000000000001 _nrk_resource_cnt
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:554    .text:00000000000001e4 nrk_sem_query
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:618    .text:000000000000021e nrk_sem_post
                            *COM*:00000000000000a5 nrk_task_TCB
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:758    .text:00000000000002c6 nrk_event_signal
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:932    .text:00000000000003a6 nrk_signal_delete
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:1116   .text:00000000000004c2 nrk_sem_pend
/var/folders/Qq/QqLTHlelFveneFuzSoIahU+++TI/-Tmp-//ccJ5TpCe.s:1240   .text:000000000000056a nrk_event_wait
                            *COM*:0000000000000001 nrk_wakeup_signal
                            *COM*:0000000000000080 nrk_idle_task_stk
                            *COM*:0000000000000002 nrk_kernel_stk_ptr
                            *COM*:000000000000001e _nrk_readyQ
                            *COM*:0000000000000002 _free_node
                            *COM*:0000000000000002 _head_node
                            *COM*:0000000000000001 nrk_cur_task_prio
                            *COM*:0000000000000001 nrk_high_ready_prio
                            *COM*:0000000000000002 nrk_high_ready_TCB
                            *COM*:0000000000000008 nrk_system_time
                            *COM*:0000000000000001 error_task
                            *COM*:0000000000000001 error_num
                            *COM*:0000000000000001 _nrk_cpu_state
                            *COM*:0000000000000002 next_next_wakeup
                            *COM*:0000000000000001 _nrk_prev_timer_val
                            *COM*:0000000000000001 _nrk_time_trigger
                            *COM*:0000000000000002 app_timer0_callback
                            *COM*:0000000000000001 app_timer0_prescale

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
_nrk_errno_set
nrk_int_disable
nrk_int_enable
nrk_wait_until_ticks
nrk_wait_until_nw
